<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="23:projectSinkAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0xb79faeb0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0xb7aee818"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-main-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0xb7aee818"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0xb79f91c8"/></to>
    </wire>
    <wire loc="28:projectSinkAppC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0xb79b8380"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xb72026a0"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-main-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0xb72026a0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xb6e869b0"/></to>
    </wire>
    <wire loc="29:projectSinkAppC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb79a7d50"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb71b5a48"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main-2.1.2/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb71b5a48"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb7853c98"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0xb79c9d30"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="32:projectSinkAppC.nc">
      <from><interface-ref name="AMControl" scoped="" ref="0xb79ef338"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xb78769f0"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-main-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xb78769f0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xb7838c00"/></to>
    </wire>
    <wire loc="35:projectSinkAppC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb79aa3b8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb71b83f0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb71b83f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb6e82708"/></to>
    </wire>
    <wire loc="36:projectSinkAppC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb79b3608"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb7202d38"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-main-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb7202d38"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb6e82070"/></to>
    </wire>
    <wire loc="39:projectSinkAppC.nc">
      <from><interface-ref name="TresholdTimer" scoped="" ref="0xb79a1c50"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb797fdf0"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-main-2.1.2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb797fdf0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0xb79783f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="40:projectSinkAppC.nc">
      <from><interface-ref name="DataTimer" scoped="" ref="0xb799f010"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb787fbd0"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-main-2.1.2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb787fbd0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0xb79783f0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="41:projectSinkAppC.nc">
      <from><interface-ref name="ForwardingTimer" scoped="" ref="0xb799c3e0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb787b950"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-main-2.1.2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb787b950"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0xb79783f0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="44:projectSinkAppC.nc">
      <from><interface-ref name="Read" scoped="" ref="0xb7996ad0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0xb78775e0"/></to>
    </wire>
    <wire loc="19:FakeSensorC.nc">
      <from><interface-ref name="Read" scoped="" ref="0xb78775e0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0xb6fbf350"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb7aeb480"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb72aa4b8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-main-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb7aeb480"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb72c8b48"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-main-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb7aeb480"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb72dce08"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb7aeb480"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb7394430"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb7aeb480"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb74174f0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb7aeb480"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb7750290"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-main-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb7aeb480"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb6f13200"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-main-2.1.2/tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb7aeb480"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb7578128"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb7aeb480"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb77b6960"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-main-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb7aeb480"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb786cd90"/></to>
    </wire>
    <wire loc="23:FakeSensorC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb7aeb480"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb78759c0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-main-2.1.2/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb7aeb480"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb7975c30"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-main-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0xb79f9560"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0xb7b8ced8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-main-2.1.2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0xb7b8ced8"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0xb7b124f8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-main-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0xb79f9b28"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb7aebd78"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-main-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb7aebd78"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb7ae1250"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-main-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb79f8010"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0xb7aeb480"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-main-2.1.2/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0xb7ae3ea0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb76cadb8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-main-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0xb7ae3740"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0xb7a0bc08"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-main-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0xb7ae1a38"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb7a0b858"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0xb7ae1630"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb7491c88"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-main-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0xb7ae1630"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0xb7adea48"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-main-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0xb7adea48"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0xb7add9c8"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-main-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0xb7adee18"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0xb7ae3ea0"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-main-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0xb7ad7ef8"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0xb7ad1210"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0xb7ad1210"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0xb7a867d0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-main-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0xb7ada8f8"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0xb7adee18"/></to>
    </wire>
    <wire loc="191:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0xb7ab44b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7a343e8"/></to>
    </wire>
    <wire loc="165:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0xb7ac3a28"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0xb7a6f790"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0xb7a6f790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb70e6010"/></to>
    </wire>
    <wire loc="176:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0xb7abc0a0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0xb7a66410"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0xb7a66410"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb70ab228"/></to>
    </wire>
    <wire loc="185:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0xb7ab7210"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0xb7a5ec88"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0xb7a5ec88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7073c08"/></to>
    </wire>
    <wire loc="143:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0xb7ad0670"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0xb7a85ac8"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0xb7a85ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb71870b0"/></to>
    </wire>
    <wire loc="183:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0xb7ab9ce8"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0xb7a5f968"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0xb7a5f968"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb70767f8"/></to>
    </wire>
    <wire loc="146:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0xb7acfa98"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0xb7a81b00"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0xb7a81b00"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb715dde8"/></to>
    </wire>
    <wire loc="157:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0xb7ac8210"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0xb7a776b0"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0xb7a776b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb711ed70"/></to>
    </wire>
    <wire loc="168:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0xb7ac18e0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0xb7a6d4f0"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0xb7a6d4f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb70e1010"/></to>
    </wire>
    <wire loc="179:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0xb7abbea8"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0xb7a63170"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0xb7a63170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb70a60b0"/></to>
    </wire>
    <wire loc="138:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0xb7ad32f0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0xb7a89b80"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0xb7a89b80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7193d70"/></to>
    </wire>
    <wire loc="149:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0xb7acd8e0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0xb7a7f7d0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0xb7a7f7d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7154c08"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0xb7ac50a0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0xb7a75330"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0xb7a75330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7119c08"/></to>
    </wire>
    <wire loc="171:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0xb7abf750"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0xb7a6b170"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0xb7a6b170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb70dc010"/></to>
    </wire>
    <wire loc="188:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0xb7ab50a0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0xb7a5c988"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0xb7a5c988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb706ea88"/></to>
    </wire>
    <wire loc="194:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0xb7ab2590"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7a2c3b0"/></to>
    </wire>
    <wire loc="174:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0xb7abec08"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0xb7a67090"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0xb7a67090"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb70afde0"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0xb7a867d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb718bc08"/></to>
    </wire>
    <wire loc="152:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0xb7acb830"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0xb7a7d4f0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0xb7a7d4f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb714fa88"/></to>
    </wire>
    <wire loc="192:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0xb7ab30c0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7a328f0"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0xb7acace8"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0xb7a783d8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0xb7a783d8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7121938"/></to>
    </wire>
    <wire loc="166:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0xb7ac24b0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0xb7a6e170"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0xb7a6e170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb70e59e8"/></to>
    </wire>
    <wire loc="177:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0xb7abca98"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0xb7a66d68"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0xb7a66d68"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb70aac08"/></to>
    </wire>
    <wire loc="186:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0xb7ab7c08"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0xb7a5d6b0"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0xb7a5d6b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb70716c0"/></to>
    </wire>
    <wire loc="144:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0xb7acf0a0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0xb7a844f0"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0xb7a844f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7186a88"/></to>
    </wire>
    <wire loc="147:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0xb7ace4b0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0xb7a804f0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0xb7a804f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb71577f8"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0xb7ac8c08"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0xb7a76030"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0xb7a76030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb711c7f8"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0xb7ac02f0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0xb7a6de48"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0xb7a6de48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb70e09e8"/></to>
    </wire>
    <wire loc="180:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0xb7aba8e0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0xb7a63ac8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0xb7a63ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb70a4a88"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0xb7ad3ce8"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0xb7a884f0"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0xb7a884f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb71917f8"/></to>
    </wire>
    <wire loc="150:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0xb7acc2f0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0xb7a7e170"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0xb7a7e170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb71526c0"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0xb7ac5a98"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0xb7a75c88"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0xb7a75c88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb71176c0"/></to>
    </wire>
    <wire loc="189:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0xb7ab5a98"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0xb7a5b330"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0xb7a5b330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb706c538"/></to>
    </wire>
    <wire loc="164:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0xb7ac4ea8"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0xb7a71dc8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0xb7a71dc8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb70e8538"/></to>
    </wire>
    <wire loc="175:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0xb7abd670"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0xb7a679e8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0xb7a679e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb70ad7f8"/></to>
    </wire>
    <wire loc="184:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0xb7ab8750"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0xb7a5e330"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0xb7a5e330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7074228"/></to>
    </wire>
    <wire loc="195:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0xb7ab1010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7a2a8a0"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0xb7ad1c08"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0xb7a85170"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0xb7a85170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb71896c0"/></to>
    </wire>
    <wire loc="153:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0xb7aca2f0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0xb7a7de48"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0xb7a7de48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb714d538"/></to>
    </wire>
    <wire loc="182:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0xb7ab92f0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0xb7a5f010"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0xb7a5f010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb707bde8"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0xb7ac9750"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0xb7a78d30"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0xb7a78d30"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb711f3b0"/></to>
    </wire>
    <wire loc="167:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0xb7ac2ea8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0xb7a6eac8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0xb7a6eac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb70e3538"/></to>
    </wire>
    <wire loc="178:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0xb7abb4b0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0xb7a64790"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0xb7a64790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb70a86c0"/></to>
    </wire>
    <wire loc="187:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0xb7ab6670"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0xb7a5c030"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0xb7a5c030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb706f0b0"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0xb7adc8e0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0xb7a89228"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0xb7a89228"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb71943b0"/></to>
    </wire>
    <wire loc="148:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0xb7aceea8"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0xb7a80e48"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0xb7a80e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7155228"/></to>
    </wire>
    <wire loc="159:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0xb7ac7670"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0xb7a76988"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0xb7a76988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb711a228"/></to>
    </wire>
    <wire loc="170:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0xb7ac0ce8"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0xb7a6c7d0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0xb7a6c7d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb70de538"/></to>
    </wire>
    <wire loc="193:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0xb7ab3ab8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7a30dd8"/></to>
    </wire>
    <wire loc="173:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0xb7abe210"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0xb7a686f8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0xb7a686f8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb70b0418"/></to>
    </wire>
    <wire loc="162:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0xb7ac44b0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0xb7a746b0"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0xb7a746b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb71150b0"/></to>
    </wire>
    <wire loc="140:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0xb7ad2750"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0xb7a88e48"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0xb7a88e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb718c228"/></to>
    </wire>
    <wire loc="151:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0xb7accd68"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0xb7a7eac8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0xb7a7eac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb71500b0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main-2.1.2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0xb7b86600"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7b12d30"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main-2.1.2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0xb7b109c0"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0xb7b00438"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0xb7afdf18"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0xb7908010"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main-2.1.2/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0xb79783f0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0xb79723f8"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-main-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0xb79723f8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb78b5210"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-main-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb7975c30"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb796da60"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-main-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0xb796c3c8"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0xb7883bc8"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-main-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb796da60"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb795dc78"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-main-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0xb788d5a0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb796af08"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-main-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0xb78b9248"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0xb79691c8"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-main-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0xb79691c8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xb78d50c0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0xb7887588"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0xb7960da0"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-main-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0xb7960da0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xb78d4b70"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0xb78d4b70"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xb7000de8"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb795dc78"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb7003e78"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0xb78d50c0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xb70022d0"/></to>
    </wire>
    <wire loc="39:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb6ffe010"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb7919cb0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb7919cb0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb79107e0"/></to>
    </wire>
    <wire loc="40:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0xb6ffb240"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0xb7914010"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0xb7914010"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0xb790caf0"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0xb6ffba68"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0xb7914970"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0xb7914970"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0xb790a4f8"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0xb6ff94b8"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0xb79114f8"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0xb79114f8"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0xb7908470"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-main-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0xb78b8bd0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7b86600"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/opt/tinyos-main-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0xb788b798"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7b86600"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="22:FakeSensorC.nc">
      <from><interface-ref name="Random" scoped="" ref="0xb6fbfec8"/></from>
      <to><interface-ref name="Random" scoped="" ref="0xb786c130"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0xb786c130"/></from>
      <to><interface-ref name="Random" scoped="" ref="0xb786bc18"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb78759c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb786cd90"/></to>
    </wire>
    <wire loc="26:FakeSensorC.nc">
      <from><interface-ref name="Timer0" scoped="" ref="0xb6fbe3b0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb6fba0f0"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-main-2.1.2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb6fba0f0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0xb79783f0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/opt/tinyos-main-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0xb786ebd8"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0xb786b358"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xb7838c00"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xb7822440"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-main-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0xb78532d8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xb7837550"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0xb7837550"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xb725bc68"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-main-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0xb7852348"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0xb78365c8"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0xb78365c8"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0xb7258cd8"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-main-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb78526a0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb78355f0"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb78355f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb7256c78"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-main-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0xb7849920"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0xb73496b8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-main-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0xb73496b8"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0xb7340100"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-main-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0xb783e130"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0xb7828db0"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0xb7828db0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0xb78134e0"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-main-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb7853c98"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb7837f10"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb7837f10"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb7258640"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-main-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb784f010"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb7834690"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb7834690"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb7819af8"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-main-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb7852d90"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb7836938"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb7836938"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb7256060"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-main-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb78462e8"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb7346100"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-main-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb7346100"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb733eaf8"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xb7822440"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xb72721d0"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0xb7828588"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0xb7255dc8"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0xb7827260"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0xb7255750"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0xb782fdf0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0xb78192a0"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0xb78192a0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0xb734dba0"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0xb78134e0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0xb7273ab8"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb7819af8"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0xb734a520"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0xb7823760"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0xb7813b00"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0xb7813b00"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0xb72749c0"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0xb782da98"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0xb7813118"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0xb7813118"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0xb7349060"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioResource" scoped="" ref="0xb7250108"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb781bdc0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb7254688"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0xb781a760"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0xb781a760"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0xb72af098"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb7254df0"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0xb781aee8"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0xb781aee8"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0xb72af820"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0xb7251130"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0xb7443970"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0xb72531d0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0xb734dba0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0xb734dba0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0xb7344668"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0xb72539f0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0xb734aaa0"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-main-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0xb734aaa0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0xb73414b0"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0xb7252010"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0xb77b7930"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0xb77b7930"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0xb77b3490"/></to>
    </wire>
    <wire loc="106:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0xb7251870"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0xb780e9c0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0xb780e9c0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0xb780a748"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0xb72507d0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0xb74aacb0"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-main-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0xb74aacb0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0xb74a43d8"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xb72721d0"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0xb7271c30"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-main-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0xb7349060"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0xb7341a40"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-main-2.1.2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0xb72749c0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0xb7267df0"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0xb72af098"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0xb72a76d8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0xb7273ab8"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0xb7270898"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0xb7812bd0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb72b0c90"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb72b0c90"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0xb72a7308"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0xb734a520"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0xb7344f10"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb781bdc0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb72deed8"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb72deed8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb72a83c0"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0xb7812460"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb72b05b0"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0xb72b05b0"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0xb72a8b00"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0xb781a010"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0xb72afc00"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0xb72afc00"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0xb72a6258"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0xb72af820"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0xb72a7e60"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0xb7271c30"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xb78118e0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xb78118e0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xb780d948"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb72ae7d0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb72dd128"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0xb72dd128"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb72dc740"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb72dd898"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb72742c0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main-2.1.2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0xb72742c0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0xb7267148"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb7267148"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb7273010"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0xb7273010"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0xb72710a8"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb72710a8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb7811ee8"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0xb7811ee8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb780a010"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb72ae420"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb72736f0"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb72736f0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0xb7271810"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb7271810"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb72dfdf8"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb72dfdf8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb72c83d8"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb72cb688"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb780e608"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb780e608"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb7398298"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb7398298"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb73931c0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb7809010"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb77c28f0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb77c28f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb77b6cf0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0xb78031e0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0xb77bea40"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0xb77bea40"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0xb77b2508"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0xb7802d18"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0xb7430c10"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0xb7802d18"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0xb739b840"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0xb739b840"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0xb73947d0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0xb7430c10"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0xb7417890"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0xb77fd328"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0xb742d0f0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0xb742d0f0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb7417d88"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0xb77fdae8"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0xb742d808"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0xb742d808"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0xb7416570"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0xb7801730"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0xb734dba0"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0xb77f0ea0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0xb734aaa0"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0xb7807370"/></from>
      <to><interface-ref name="Random" scoped="" ref="0xb786c130"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0xb77ec758"/></from>
      <to><interface-ref name="State" scoped="" ref="0xb72e2338"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-main-2.1.2/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0xb72e2338"/></from>
      <to><interface-ref name="State" scoped="" ref="0xb757b100"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0xb77f69e0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0xb74aacb0"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0xb77eb980"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7b86600"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0xb77eb170"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7b86600"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0xb77ee888"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7b86600"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0xb77bd5a0"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0xb77b1010"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0xb77ad9c8"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0xb7750858"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main-2.1.2/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0xb7750858"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xb774ca60"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0xb77ae3e0"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0xb764fc48"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0xb764fc48"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0xb7acfa98"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0xb77aede8"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0xb764da50"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0xb764da50"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0xb7ad0670"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0xb77ac840"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0xb764ce78"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0xb764ce78"/></from>
      <to><interface-ref name="PortA5" scoped="" ref="0xb7ad1c08"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0xb77a79c8"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0xb7642ef0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0xb7642ef0"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0xb75eeb80"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0xb779d430"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb747f9a0"/></to>
    </wire>
    <wire loc="112:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb747f9a0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb75c5340"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0xb779b1e0"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0xb747c010"/></to>
    </wire>
    <wire loc="118:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0xb747c010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb75c3dd8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0xb779b5f8"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0xb747ca18"/></to>
    </wire>
    <wire loc="121:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0xb747ca18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb75c3dd8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0xb779d010"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0xb747e8e0"/></to>
    </wire>
    <wire loc="116:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0xb747e8e0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb75c3dd8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0xb779ba28"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0xb747cd70"/></to>
    </wire>
    <wire loc="122:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0xb747cd70"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb75c3dd8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0xb779fdc8"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0xb7477db8"/></to>
    </wire>
    <wire loc="140:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0xb7477db8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb75c3600"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0xb77a6340"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0xb7476f18"/></to>
    </wire>
    <wire loc="144:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0xb7476f18"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb75c3600"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0xb77a6848"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0xb7475368"/></to>
    </wire>
    <wire loc="145:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0xb7475368"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb75c3600"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0xb77a6d68"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0xb747ae50"/></to>
    </wire>
    <wire loc="133:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0xb747ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb75c3600"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0xb77a4358"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0xb74792b0"/></to>
    </wire>
    <wire loc="134:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0xb74792b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb75c3600"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0xb77a1660"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0xb7473a00"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0xb7473a00"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb75c4d88"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0xb77a1110"/></from>
      <to><interface-ref name="IEEEADR" scoped="" ref="0xb74735c8"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0xb74735c8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb75c4d88"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0xb77a4868"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0xb7477880"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0xb7477880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb75c3600"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0xb77a4d60"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0xb74796e8"/></to>
    </wire>
    <wire loc="135:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0xb74796e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb75c3600"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0xb779e340"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0xb7477010"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0xb7477010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb75c3600"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0xb779c428"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb74695c0"/></to>
    </wire>
    <wire loc="112:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb74695c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb75c5340"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0xb779dbe0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb7455010"/></to>
    </wire>
    <wire loc="112:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb7455010"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb75c5340"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0xb77a5a68"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0xb7443970"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0xb77ad400"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0xb74371e8"/></to>
    </wire>
    <wire loc="126:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0xb7795d48"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7b86600"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0xb7795568"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7b86600"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-main-2.1.2/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb7750290"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb76544b8"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb76544b8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb76557a0"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0xb774ca60"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xb6fa3af0"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-main-2.1.2/tos/platforms/mica/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0xb6fa3af0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xb6f9b320"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-main-2.1.2/tos/platforms/mica/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0xb6f97078"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xb6f9f8e8"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-main-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0xb6f9f8e8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xb6f91760"/></to>
    </wire>
    <wire loc="38:/opt/tinyos-main-2.1.2/tos/platforms/mica/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0xb6f9ae08"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xb769e218"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-main-2.1.2/tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0xb769e218"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xb769a7f0"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-main-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0xb6f8e178"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb773eb60"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb773eb60"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb77272b8"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-main-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0xb6f8c480"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0xb772dc10"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0xb7733ae0"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0xb7725610"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0xb772e998"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0xb7724348"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0xb772dc10"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0xb7721268"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0xb772dc10"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0xb7720e60"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0xb772dc10"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0xb771da78"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer0Ctrl" scoped="" ref="0xb771b610"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0xb7914010"/></to>
    </wire>
    <wire loc="27:/opt/tinyos-main-2.1.2/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb76c9220"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb773eb60"/></to>
    </wire>
    <wire loc="34:/opt/tinyos-main-2.1.2/tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0xb7687ae8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xb769cc18"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-main-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0xb769cc18"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xb7697470"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-main-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb768c630"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb773eb60"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0xb764e660"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0xb7aca2f0"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0xb764d068"/></from>
      <to><interface-ref name="PortE6" scoped="" ref="0xb7abbea8"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0xb764f270"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0xb7ac0ce8"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0xb764c490"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0xb7ac18e0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0xb76427f0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0xb7641ad0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0xb7645618"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0xb76358e0"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Atm128Capture" scoped="" ref="0xb7640220"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0xb772e998"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0xb7635ed8"/></from>
      <to><interface-ref name="Int6" scoped="" ref="0xb76236f8"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int6" scoped="" ref="0xb76236f8"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0xb75f5840"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CC_CCA" scoped="" ref="0xb75eb250"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0xb764f270"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int1" scoped="" ref="0xb7627af0"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0xb7601e68"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int4" scoped="" ref="0xb76255d8"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0xb75fa408"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int7" scoped="" ref="0xb7622010"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0xb75f3a08"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int2" scoped="" ref="0xb7626418"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0xb75fe010"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int5" scoped="" ref="0xb7625e58"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0xb75f75e8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int0" scoped="" ref="0xb7627270"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0xb7620cf0"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int3" scoped="" ref="0xb7626c98"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0xb75fc228"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0xb7602510"/></from>
      <to><interface-ref name="IntSig0" scoped="" ref="0xb761fb50"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0xb7600630"/></from>
      <to><interface-ref name="IntSig1" scoped="" ref="0xb761e010"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0xb75fe7c8"/></from>
      <to><interface-ref name="IntSig2" scoped="" ref="0xb761e488"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0xb75fc9e0"/></from>
      <to><interface-ref name="IntSig3" scoped="" ref="0xb761e900"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0xb75fabc0"/></from>
      <to><interface-ref name="IntSig4" scoped="" ref="0xb761ed78"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0xb75f7da0"/></from>
      <to><interface-ref name="IntSig5" scoped="" ref="0xb761d2b0"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0xb75f4010"/></from>
      <to><interface-ref name="IntSig6" scoped="" ref="0xb761d728"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0xb75f2270"/></from>
      <to><interface-ref name="IntSig7" scoped="" ref="0xb761dba0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <from><interface-ref name="CCATask" scoped="" ref="0xb75eaac0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7b86600"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0xb747ec38"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb75c3dd8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0xb74766a8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb75c3600"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0xb7476ae0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb75c3600"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0xb7470cb8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb75c4d88"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0xb7471b20"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb75c4d88"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="120:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0xb747c6c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb75c3dd8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0xb74712b0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb75c4d88"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0xb7474468"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb75c3600"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0xb747e070"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0xb75c5a90"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0xb75c5a90"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0xb75c19b0"/></to>
    </wire>
    <wire loc="124:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0xb747b4e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb75c3dd8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0xb747b840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb75c3dd8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0xb747bc18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb75c3dd8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0xb74716e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb75c4d88"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0xb7479b20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb75c3600"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0xb7470880"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb75c4d88"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0xb7470010"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb75c4d88"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0xb74748a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb75c3600"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0xb7473e38"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb75c4d88"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0xb74757a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb75c3600"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0xb746f190"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0xb75c4340"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="115:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0xb747e588"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb75c3dd8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0xb747aa18"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb75c3600"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0xb7477448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb75c3600"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0xb7476270"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb75c3600"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="127:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0xb747a010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb75c3dd8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0xb747a6c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb75c3dd8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0xb747b190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb75c3dd8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0xb7473190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb75c3600"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0xb7470448"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb75c4d88"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0xb7474cd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb75c3600"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0xb747c368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb75c3dd8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0xb7474030"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb75c3600"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0xb7475bd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb75c3600"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="128:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0xb747a368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb75c3dd8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0xb746fa68"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0xb75c4340"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0xb75c4340"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0xb75bec28"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0xb75c4d88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb75bd6a0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0xb75c3600"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb75bde48"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb75c5340"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb75be1f8"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0xb75c3dd8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb75bc630"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0xb75ba308"/></from>
      <to><interface-ref name="State" scoped="" ref="0xb757de40"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-main-2.1.2/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0xb757de40"/></from>
      <to><interface-ref name="State" scoped="" ref="0xb757b100"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0xb75bca70"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb757cea8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb757cea8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb74b58e8"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0xb75bba88"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0xb74ab5a0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0xb74ab5a0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0xb756ad50"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0xb75b6dc8"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0xb74ab8d8"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0xb74ab8d8"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0xb7566648"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0xb75baab0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0xb74aacb0"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0xb75b2818"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7b86600"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-main-2.1.2/tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0xb757b100"/></from>
      <to><interface-ref name="State" scoped="" ref="0xb7578758"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0xb7566648"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0xb755fd10"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0xb756ad50"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0xb755f370"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb757cb70"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb756a9d0"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb756a9d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb755f010"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SubResource" scoped="" ref="0xb74b20d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb7566d98"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0xb74b2800"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0xb7acfa98"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0xb7566010"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0xb755f6f8"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb7566d98"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb755e488"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceArbiter" scoped="" ref="0xb755c158"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb74ed170"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-main-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb74ed170"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb6f12578"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0xb754a7b8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0xb74edcb8"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-main-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0xb74edcb8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0xb6f11150"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0xb754d4d0"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0xb75213d0"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0xb75213d0"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0xb751d7e0"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0xb754ac38"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0xb7afd148"/></to>
    </wire>
    <wire loc="296:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0xb7539860"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7b86600"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0xb7517ea0"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0xb7afd148"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0xb7516658"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0xb7acfa98"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0xb7518050"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0xb7ace4b0"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0xb7518a38"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0xb7aceea8"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0xb75174a0"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0xb7acd8e0"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-main-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0xb74ed8b0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0xb6f12cb8"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-main-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0xb6f11610"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0xb74b7208"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-main-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0xb6f11a38"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0xb6f13538"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-main-2.1.2/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0xb6f0f050"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7b86600"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/opt/tinyos-main-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb7491c88"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb74a4090"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0xb74a30b0"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0xb74a6e50"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0xb74a6e50"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0xb7ad3ce8"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0xb74a3a98"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0xb7492880"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-main-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0xb7492880"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0xb7ad32f0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0xb74a24a0"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0xb7491300"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-main-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0xb7491300"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0xb7adc8e0"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0xb74625c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb75c3600"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0xb7468920"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb75c3dd8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0xb7464af8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb75c3600"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0xb7461448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb75c3600"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0xb7461880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb75c3600"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0xb745bb20"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb75c4d88"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0xb745ca00"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb75c4d88"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="120:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0xb7467368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb75c3dd8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0xb745c190"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb75c4d88"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0xb7463448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb75c3600"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0xb7463cb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb75c3600"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0xb745e2b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb75c3600"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0xb7461cb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb75c3600"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0xb7469c78"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0xb75c5a90"/></to>
    </wire>
    <wire loc="124:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0xb7465190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb75c3dd8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0xb74654e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb75c3dd8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0xb74658c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb75c3dd8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0xb745c5c8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb75c4d88"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0xb7467a18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb75c3dd8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0xb7463880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb75c3600"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0xb7463010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb75c3600"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0xb74685c8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb75c3dd8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0xb745b6e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb75c4d88"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0xb745ce38"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb75c4d88"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0xb745e6e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb75c3600"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0xb745dcb8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb75c4d88"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0xb745f5c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb75c3600"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0xb745a010"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0xb75c4340"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="115:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0xb7468270"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb75c3dd8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0xb74646c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb75c3600"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0xb7462190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb75c3600"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="145:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0xb745f190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb75c3600"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0xb7462b00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb75c3600"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0xb7468c78"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb75c3dd8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0xb7461010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb75c3600"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="127:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0xb7465c18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb75c3dd8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0xb7464368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb75c3dd8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0xb745d880"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb75c4d88"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0xb745d448"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb75c4d88"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0xb7467d70"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb75c3dd8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0xb745d010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb75c3600"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0xb745b2b0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb75c4d88"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0xb745eb20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb75c3600"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0xb7467010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb75c3dd8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0xb745fe38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb75c3600"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0xb74676c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb75c3dd8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0xb745fa00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb75c3600"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="128:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0xb7464010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb75c3dd8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0xb745a8e8"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0xb75c4340"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0xb744fe38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb75c3600"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0xb7454368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb75c3dd8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0xb74514b8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb75c3600"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0xb744ecd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb75c3600"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0xb744d190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb75c3600"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0xb7447448"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb75c4d88"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0xb74482b0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb75c4d88"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="120:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0xb7454d70"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb75c3dd8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0xb7449a00"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb75c4d88"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0xb7451d28"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb75c3600"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0xb744f5c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb75c3600"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0xb744cb20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb75c3600"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0xb744d5c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb75c3600"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0xb74556c8"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0xb75c5a90"/></to>
    </wire>
    <wire loc="124:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0xb7453b98"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb75c3dd8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0xb7453ef0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb75c3dd8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0xb7452308"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb75c3dd8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0xb7449e38"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb75c4d88"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0xb74534e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb75c3dd8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0xb744f190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb75c3600"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0xb74518f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb75c3600"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0xb7454010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb75c3dd8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0xb7447010"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb75c4d88"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0xb74486e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb75c4d88"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0xb744b010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb75c3600"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0xb74495c8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb75c4d88"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0xb744de38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb75c3600"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0xb7447880"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0xb75c4340"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="115:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0xb7455be0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb75c3dd8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0xb7451080"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb75c3600"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0xb744fa00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb75c3600"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="145:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0xb744da00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb75c3600"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0xb744e468"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb75c3600"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0xb74546c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb75c3dd8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0xb744e8a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb75c3600"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="127:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0xb7452660"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb75c3dd8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0xb7452d10"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb75c3dd8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0xb7449190"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb75c4d88"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0xb744bcb8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb75c4d88"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0xb7453840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb75c3dd8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0xb744b880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb75c3600"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0xb7448b20"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb75c4d88"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0xb744b448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb75c3600"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0xb7454a18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb75c3dd8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0xb744c6e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb75c3600"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0xb7453190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb75c3dd8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0xb744c2b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb75c3600"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="128:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0xb74529b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb75c3dd8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0xb7446190"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0xb75c4340"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0xb742c8e0"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0xb7416e68"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0xb742cd48"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0xb7415300"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0xb74158c8"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0xb7750858"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0xb7409eb8"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0xb764f270"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0xb740f9a8"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0xb764fc48"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0xb740e3d0"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0xb764c490"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0xb7409840"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0xb76427f0"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0xb740ee10"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb73b0950"/></to>
    </wire>
    <wire loc="112:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb73b0950"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb75c5340"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0xb740a588"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0xb73af030"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0xb73af030"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0xb75c5a90"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0xb7408d28"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0xb73af548"/></to>
    </wire>
    <wire loc="115:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0xb73af548"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb75c3dd8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0xb7407168"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0xb73ae368"/></to>
    </wire>
    <wire loc="119:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0xb73ae368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb75c3dd8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0xb7407598"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0xb73ae6c0"/></to>
    </wire>
    <wire loc="120:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0xb73ae6c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb75c3dd8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0xb74079c8"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0xb73ad4e8"/></to>
    </wire>
    <wire loc="124:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0xb73ad4e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb75c3dd8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0xb7408840"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0xb73a9010"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0xb73a9010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb75c3600"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0xb740ab48"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0xb73a1a68"/></to>
    </wire>
    <wire loc="168:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0xb73a1a68"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0xb75c4340"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0xb7408338"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0xb73a32b0"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0xb73a32b0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb75c4d88"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0xb7407e08"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0xb73aa2b0"/></to>
    </wire>
    <wire loc="134:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0xb73aa2b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb75c3600"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0xb7406850"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0xb73a8270"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0xb73a8270"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb75c3600"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0xb7406d70"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0xb73a86a8"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0xb73a86a8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb75c3600"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0xb7406410"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0xb73ab368"/></to>
    </wire>
    <wire loc="128:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0xb73ab368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb75c3dd8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0xb7405ca8"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0xb73a2880"/></to>
    </wire>
    <wire loc="163:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0xb73a2880"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb75c4d88"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0xb7405300"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0xb73a3b20"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0xb73a3b20"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb75c4d88"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0xb74057c8"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0xb73a2010"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0xb73a2010"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb75c4d88"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0xb7400a60"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0xb739bce0"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0xb739bce0"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0xb7394c70"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0xb74132f8"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0xb734dba0"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0xb7413b38"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0xb734aaa0"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0xb74122b0"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0xb73496b8"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0xb7409170"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0xb7345888"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-main-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0xb7345888"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0xb733c308"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0xb7402010"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0xb74aacb0"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0xb73a9880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb75c3600"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0xb73afbf8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb75c3dd8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0xb73abe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb75c3600"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0xb73a8ae0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb75c3600"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0xb73a2cb8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb75c4d88"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0xb73aa6e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb75c3600"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0xb73a5468"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb75c3600"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0xb73a8f18"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb75c3600"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0xb73ad840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb75c3dd8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0xb73adc18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb75c3dd8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0xb73a36e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb75c4d88"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0xb73aed70"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb75c3dd8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0xb73aab20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb75c3600"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0xb73af8a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb75c3dd8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0xb73a58a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb75c3600"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0xb73a4e38"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb75c4d88"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0xb73a77a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb75c3600"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0xb73a1190"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0xb75c4340"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0xb73aba18"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb75c3600"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0xb73a9448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb75c3600"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="145:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0xb73a7368"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb75c3600"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0xb73a9db8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb75c3600"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0xb73ae010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb75c3dd8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="127:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0xb73ab010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb75c3dd8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0xb73ab6c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb75c3dd8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0xb73a4a00"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb75c4d88"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0xb73a45c8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb75c4d88"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0xb73ad190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb75c3dd8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0xb73a4190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb75c3600"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0xb73a2448"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb75c4d88"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0xb73a5cd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb75c3600"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0xb73a5030"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb75c3600"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0xb73aea18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb75c3dd8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0xb73a7bd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb75c3600"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0xb7398730"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0xb7393658"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0xb7388838"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0xb74aacb0"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0xb7393a30"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0xb764fc48"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0xb73924c0"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0xb764e660"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0xb7392ed0"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0xb764d068"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0xb7391978"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0xb7645618"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0xb73900a0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb734bed0"/></to>
    </wire>
    <wire loc="112:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb734bed0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb75c5340"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0xb7390820"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0xb72f75c8"/></to>
    </wire>
    <wire loc="167:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0xb72f75c8"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0xb75c4340"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0xb738f440"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0xb73035b8"/></to>
    </wire>
    <wire loc="123:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0xb73035b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb75c3dd8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0xb738f010"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0xb7303c68"/></to>
    </wire>
    <wire loc="125:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0xb7303c68"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb75c3dd8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0xb738f878"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0xb734dba0"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0xb738e108"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0xb734aaa0"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0xb738d980"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0xb73496b8"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0xb738e680"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0xb77b7930"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0xb738a580"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0xb72fe5c8"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0xb72fe5c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb75c3600"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0xb738aaa0"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0xb72fea00"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0xb72fea00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb75c3600"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0xb738a140"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0xb73013d8"/></to>
    </wire>
    <wire loc="127:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0xb73013d8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb75c3dd8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0xb73899b8"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0xb72f7190"/></to>
    </wire>
    <wire loc="164:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0xb72f7190"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb75c4d88"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0xb7389010"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0xb72f8010"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0xb72f8010"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb75c4d88"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0xb73894d8"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0xb72f8448"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0xb72f8448"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb75c4d88"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0xb7389eb8"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0xb72f9b20"/></to>
    </wire>
    <wire loc="159:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0xb72f9b20"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb75c4d88"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0xb73883d0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0xb7305ab8"/></to>
    </wire>
    <wire loc="115:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0xb7305ab8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb75c3dd8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0xb7381b88"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7b86600"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/opt/tinyos-main-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0xb730b010"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xb769e218"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-main-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0xb733a1e0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0xb730c5d8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-main-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0xb733ac38"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0xb796c3c8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-main-2.1.2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb7309378"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0xb79783f0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0xb72ffbd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb75c3600"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0xb7304190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb75c3dd8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0xb7300270"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb75c3600"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0xb72fee38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb75c3600"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="120:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0xb7304b98"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb75c3dd8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0xb72f96e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb75c4d88"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0xb7300ae0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb75c3600"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0xb72ff368"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb75c3600"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0xb72fb880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb75c3600"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0xb72fd2b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb75c3600"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0xb73055a0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0xb75c5a90"/></to>
    </wire>
    <wire loc="124:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0xb7303910"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb75c3dd8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0xb7301080"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb75c3dd8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0xb7303260"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb75c3dd8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0xb7300f18"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb75c3600"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0xb73006a8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb75c3600"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0xb7305e10"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb75c3dd8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0xb72f8cb8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb75c4d88"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0xb72fbcb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb75c3600"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0xb72f92b0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb75c4d88"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0xb72fdb20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb75c3600"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0xb7301de0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb75c3600"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0xb72ff7a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb75c3600"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="145:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0xb72fd6e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb75c3600"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0xb72fe190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb75c3600"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0xb73044e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb75c3dd8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0xb7301a88"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb75c3dd8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0xb72fae38"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb75c4d88"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0xb72faa00"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb75c4d88"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0xb72fa5c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb75c3600"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0xb72f8880"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb75c4d88"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0xb72fa190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb75c3600"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0xb7304840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb75c3dd8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0xb72fb448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb75c3600"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0xb7304ef0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb75c3dd8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0xb72fb010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb75c3600"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="128:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0xb7301730"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb75c3dd8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0xb72f7ea0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0xb75c4340"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/opt/tinyos-main-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb72d9228"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0xb72dd898"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-main-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0xb72d98f8"/></from>
      <to><interface-ref name="State" scoped="" ref="0xb72db770"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-main-2.1.2/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0xb72db770"/></from>
      <to><interface-ref name="State" scoped="" ref="0xb757b100"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-main-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0xb72d8190"/></from>
      <to><interface-ref name="Random" scoped="" ref="0xb786c130"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-main-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0xb72d8630"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0xb734aaa0"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-main-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0xb72cb260"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0xb72c8800"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-main-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb72c7010"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0xb72cb688"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-main-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0xb72c73d0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0xb734aaa0"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb72a69c8"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0xb72ae7d0"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb72a5148"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0xb72ae420"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0xb72a54e0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0xb734dba0"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0xb72a5d00"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0xb734aaa0"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0xb72a4310"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0xb72aa7f0"/></to>
    </wire>
    <wire loc="180:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0xb728beb0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7b86600"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0xb7272840"/></from>
      <to><interface-ref name="State" scoped="" ref="0xb726f8c0"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-main-2.1.2/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0xb726f8c0"/></from>
      <to><interface-ref name="State" scoped="" ref="0xb757b100"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/opt/tinyos-main-2.1.2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb72645f0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb7819af8"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-main-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0xb6e869b0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xb6e7c060"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-main-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb6e82070"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb78526a0"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-main-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb6e82708"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb7852d90"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-main-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0xb71b7010"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0xb6e81330"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0xb6e81330"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb784f010"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-main-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0xb6e7c728"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb71ed688"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-main-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb6e7cdc0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb7852d90"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-main-2.1.2/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0xb71ed688"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb71e8538"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main-2.1.2/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0xb71e8ca8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xb78532d8"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main-2.1.2/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb71c03f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb7852d90"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main-2.1.2/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb71bf010"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb78526a0"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-main-2.1.2/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0xb71bf6e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7b86600"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/opt/tinyos-main-2.1.2/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0xb71bfb20"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7b86600"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/opt/tinyos-main-2.1.2/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb71b5d60"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb78526a0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main-2.1.2/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb71b14d0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb7852d90"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/opt/tinyos-main-2.1.2/tos/system/MainC.nc">
      <documentation loc="1:/opt/tinyos-main-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:/opt/tinyos-main-2.1.2/tos/platforms/mica/PlatformC.nc">
      <documentation loc="1:/opt/tinyos-main-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/opt/tinyos-main-2.1.2/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/opt/tinyos-main-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="38:/opt/tinyos-main-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="33:/opt/tinyos-main-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="41:/opt/tinyos-main-2.1.2/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="35:/opt/tinyos-main-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="42:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="36:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:59">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="I:58">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="I:57">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:56">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:53">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="22:/opt/tinyos-main-2.1.2/tos/platforms/mica/MeasureClockC.nc" safe="">
      <documentation loc="14:/opt/tinyos-main-2.1.2/tos/platforms/mica/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/opt/tinyos-main-2.1.2/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/opt/tinyos-main-2.1.2/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/opt/tinyos-main-2.1.2/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/opt/tinyos-main-2.1.2/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="48:/opt/tinyos-main-2.1.2/tos/chips/atm128/McuSleepC.nc" safe="">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.11 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @date   October 26, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="projectSinkC" loc="4:projectSinkC.nc">
      <module/>
    </component>
    <component qname="projectSinkAppC.Timer1" loc="44(projectSinkAppC.Timer1):/opt/tinyos-main-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-main-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/opt/tinyos-main-2.1.2/tos/system/TimerMilliP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/opt/tinyos-main-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/opt/tinyos-main-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/opt/tinyos-main-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC):/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="11:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7b37900"/>
            <typename><typedef-ref name="TMilli" ref="0xb7b37ac8"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP):/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <documentation loc="11:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0xb795f900"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer0AsyncC" loc="43:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <documentation loc="33:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0AsyncP" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc" safe="">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
        <short>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 0 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/opt/tinyos-main-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/opt/tinyos-main-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7b37900"/>
            <typename><typedef-ref name="TMilli" ref="0xb7b37ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/opt/tinyos-main-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7b37900"/>
            <typename><typedef-ref name="TMilli" ref="0xb7b37ac8"/></typename>
          </type-tag>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/opt/tinyos-main-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/opt/tinyos-main-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7b37900"/>
            <typename><typedef-ref name="TMilli" ref="0xb7b37ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="projectSinkAppC.Timer2" loc="44(projectSinkAppC.Timer2):/opt/tinyos-main-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-main-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="projectSinkAppC.Timer3" loc="44(projectSinkAppC.Timer3):/opt/tinyos-main-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-main-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="projectSinkAppC.FakeSensorC" loc="8(projectSinkAppC.FakeSensorC):FakeSensorC.nc">
      <documentation loc="1:FakeSensorC.nc">
        <short>&#10;  Configuration file for wiring of FakeSensorP module to other common &#10;  components to simulate the behavior of a real sensor&#10;&#10;  </short>
        <long>&#10;  Configuration file for wiring of FakeSensorP module to other common &#10;  components to simulate the behavior of a real sensor&#10;&#10;  @author Luca Pietro Borsani&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FakeSensorC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:/opt/tinyos-main-2.1.2/tos/system/RandomC.nc">
      <documentation loc="33:/opt/tinyos-main-2.1.2/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/opt/tinyos-main-2.1.2/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="projectSinkAppC.FakeSensorC.FakeSensorP" loc="8(projectSinkAppC.FakeSensorC.FakeSensorP):FakeSensorP.nc">
      <documentation loc="1:FakeSensorP.nc">
        <short>&#10;  Source file for implementation of module Middleware&#10;  which provides the main logic for middleware message management&#10;&#10;  </short>
        <long>&#10;  Source file for implementation of module Middleware&#10;  which provides the main logic for middleware message management&#10;&#10;  @author Luca Pietro Borsani&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FakeSensorP"/>
      </instance>
      <module/>
    </component>
    <component qname="projectSinkAppC.FakeSensorC.TimerMilliC" loc="44(projectSinkAppC.FakeSensorC.TimerMilliC):/opt/tinyos-main-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-main-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageC" loc="53:/opt/tinyos-main-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <documentation loc="43:/opt/tinyos-main-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the Telos platform.</short>
        <long>&#10;&#10; The Active Message layer on the Telos platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.9 $ $Date: 2010-06-29 22:07:54 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="53:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="41:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="24:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.2 $ $Date: 2009/08/20 01:37:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="42:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-05-14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.12 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="42:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:/opt/tinyos-main-2.1.2/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="85(AlarmMultiplexC.Alarm):/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="70:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420.</short>
        <long>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420. As these timers (the Alarm interface) are&#10; usually part of an HAL, they are platform specific. But as the&#10; CC2420 needs to be cross-platform, this component bridges between&#10; the two, providing a platform-independent abstraction of&#10; CC2420-specific Alarm. This is a Atmega128 implementation that&#10; uses the Compare1A register.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:54 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="26(AlarmMultiplexC.Alarm.Alarm32khz32C):/opt/tinyos-main-2.1.2/tos/platforms/mica/Alarm32khz32C.nc">
      <documentation loc="11:/opt/tinyos-main-2.1.2/tos/platforms/mica/Alarm32khz32C.nc">
        <short>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register). Note that creating one of these Alarms consumes a 16-bit&#10; 32kHz Alarm (see Alarm32khz16C).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16" loc="28(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16):/opt/tinyos-main-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <documentation loc="11:/opt/tinyos-main-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmOne16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer1C" loc="41:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega128 timer 1.</short>
        <long>&#10; HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer1P" loc="42:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc" safe="">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega128 timer 1.</short>
        <long>&#10; Internal component of the HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitOneP.InitOne" loc="44(InitOneP.InitOne):/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7ed71e8"/></typename>
          </type-int>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm):/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7b37d40"/>
            <typename><typedef-ref name="TOne" ref="0xb7b169a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7ed71e8"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="22:/opt/tinyos-main-2.1.2/tos/platforms/mica/Counter32khz32C.nc">
      <documentation loc="11:/opt/tinyos-main-2.1.2/tos/platforms/mica/Counter32khz32C.nc">
        <short>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/opt/tinyos-main-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="11:/opt/tinyos-main-2.1.2/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="42(CounterOne16C.NCounter):/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7b37d40"/>
            <typename><typedef-ref name="TOne" ref="0xb7b169a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7ed71e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C.Transform32" loc="54(Counter32khz32C.Transform32):/opt/tinyos-main-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7b37d40"/>
            <typename><typedef-ref name="T32khz" ref="0xb7b37f08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7ed7848"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7b37d40"/>
            <typename><typedef-ref name="TOne" ref="0xb7b169a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7ed71e8"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_one_overflow_t" ref="0xb7b16ea8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32):/opt/tinyos-main-2.1.2/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7b37d40"/>
            <typename><typedef-ref name="T32khz" ref="0xb7b37f08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7ed7848"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7b37d40"/>
            <typename><typedef-ref name="TOne" ref="0xb7b169a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7ed71e8"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="NoInitC" loc="16:/opt/tinyos-main-2.1.2/tos/system/NoInitC.nc" safe="">
      <documentation loc="10:/opt/tinyos-main-2.1.2/tos/system/NoInitC.nc">
        <short>&#10; A do-nothing Init implementation.</short>
        <long>&#10; A do-nothing Init implementation. Useful for implementing components whose&#10; specification has an Init, but whose implementation doesn't need one.&#10;&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="83:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="70:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; Mapping the CC2420 pins to Atmega128 pins for the micaZ platform.</short>
        <long>&#10; Mapping the CC2420 pins to Atmega128 pins for the micaZ platform.&#10; Information on the function of these pins can be found on pages&#10; 14-15 of the CC2420 datasheet (rev 1.2).&#10;&#10; &#60;pre>&#10; $Id: HplCC2420PinsC.nc,v 1.6 2010-06-29 22:07:54 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:54 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="37:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-30 17:31:08 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="40(HplCC2420InterruptsC.CaptureSFDC):/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <documentation loc="35:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
        <short>&#10; Expose capture capability as a GpioCapture interface from TEP117.</short>
        <long>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10; @author Martin Turon, Crossbow &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="6(HplCC2420InterruptsC.InterruptFIFOPC):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC" loc="41:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <documentation loc="36:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
        <short>&#10; Component providing access to all external interrupt pins on ATmega128.</short>
        <long>&#10; Component providing access to all external interrupt pins on ATmega128.&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128InterruptSigP" loc="41:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc" safe="">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10; Exposes just the interrupt vector routine for &#10; easy linking to generic components.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin0" loc="39(HplAtm128InterruptC.IntPin0):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin1" loc="39(HplAtm128InterruptC.IntPin1):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin2" loc="39(HplAtm128InterruptC.IntPin2):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin3" loc="39(HplAtm128InterruptC.IntPin3):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin4" loc="39(HplAtm128InterruptC.IntPin4):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin5" loc="39(HplAtm128InterruptC.IntPin5):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin6" loc="39(HplAtm128InterruptC.IntPin6):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin7" loc="39(HplAtm128InterruptC.IntPin7):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsP" loc="45:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc" safe="">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
        <short>&#10; MicaZ implementation of the CC2420 interrupts.</short>
        <long>&#10; MicaZ implementation of the CC2420 interrupts. FIFOP is a real&#10; interrupt, while CCA and FIFO are emulated through timer polling.&#10; &#60;pre>&#10;  $Id: HplCC2420InterruptsP.nc,v 1.6 2008-06-26 04:39:12 regehr Exp $&#10; &#60;pre>&#10;&#10; @author Philip Levis&#10; @author Matt Miller&#10; @author David Moss&#10; @version @version $Revision: 1.6 $ $Date: 2008-06-26 04:39:12 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008-06-23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):/opt/tinyos-main-2.1.2/tos/system/StateC.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:/opt/tinyos-main-2.1.2/tos/system/StateImplC.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:/opt/tinyos-main-2.1.2/tos/system/StateImplP.nc" safe="">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="37(CC2420SpiWireC.HplCC2420SpiC):/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-04-24 22:31:25 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC" loc="80:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <documentation loc="66:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.7 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="89:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc" safe="">
      <documentation loc="67:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.</short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.12 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="75:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="63:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="73:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc" safe="">
      <documentation loc="63:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="83(Atm128SpiC.Arbiter):/opt/tinyos-main-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/opt/tinyos-main-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="42(Atm128SpiC.Arbiter.Queue):/opt/tinyos-main-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="49(Atm128SpiC.Arbiter.Arbiter):/opt/tinyos-main-2.1.2/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/opt/tinyos-main-2.1.2/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420SpiP" loc="38:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc" safe="">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
        <short>&#10; Automatic slave select update for the SpiResource&#10;&#10; </short>
        <long>&#10; Automatic slave select update for the SpiResource&#10;&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="45:/opt/tinyos-main-2.1.2/tos/system/LedsC.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/opt/tinyos-main-2.1.2/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/opt/tinyos-main-2.1.2/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:/opt/tinyos-main-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/opt/tinyos-main-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/opt/tinyos-main-2.1.2/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/opt/tinyos-main-2.1.2/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="39:/opt/tinyos-main-2.1.2/tos/platforms/micaz/LocalIeeeEui64C.nc">
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:/opt/tinyos-main-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:/opt/tinyos-main-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="46(CC2420PacketC.CounterToLocalTimeC):/opt/tinyos-main-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/opt/tinyos-main-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7b37d40"/>
            <typename><typedef-ref name="T32khz" ref="0xb7b37f08"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="44(CC2420PacketC.DummyTimer):/opt/tinyos-main-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-main-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):/opt/tinyos-main-2.1.2/tos/system/StateC.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:/opt/tinyos-main-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:/opt/tinyos-main-2.1.2/tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):/opt/tinyos-main-2.1.2/tos/system/StateC.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:/opt/tinyos-main-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:/opt/tinyos-main-2.1.2/tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="42(CC2420TinyosNetworkC.FcfsResourceQueueC):/opt/tinyos-main-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Wakeup interval is always 0 (always on)&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):/opt/tinyos-main-2.1.2/tos/system/StateC.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyC" loc="38:/opt/tinyos-main-2.1.2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
        <short>&#10; Dummy configuration for PacketLink Layer&#10; </short>
        <long>&#10; Dummy configuration for PacketLink Layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyP" loc="38:/opt/tinyos-main-2.1.2/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/link/PacketLinkDummyP.nc">
        <short>&#10; Dummy module for Packet Link layer&#10; </short>
        <long>&#10; Dummy module for Packet Link layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="46:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <documentation loc="33:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.22 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="projectSinkAppC.AMSenderC" loc="47(projectSinkAppC.AMSenderC):/opt/tinyos-main-2.1.2/tos/system/AMSenderC.nc">
      <documentation loc="33:/opt/tinyos-main-2.1.2/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="projectSinkAppC.AMSenderC.SenderC" loc="47(projectSinkAppC.AMSenderC.SenderC):/opt/tinyos-main-2.1.2/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/opt/tinyos-main-2.1.2/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0xb79c9d30"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="projectSinkAppC.AMSenderC.SenderC.AMQueueEntryP" loc="43(projectSinkAppC.AMSenderC.SenderC.AMQueueEntryP):/opt/tinyos-main-2.1.2/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos-main-2.1.2/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0xb79c9d30"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:/opt/tinyos-main-2.1.2/tos/system/AMQueueP.nc">
      <documentation loc="33:/opt/tinyos-main-2.1.2/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):/opt/tinyos-main-2.1.2/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/opt/tinyos-main-2.1.2/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="projectSinkAppC.AMReceiverC" loc="43(projectSinkAppC.AMReceiverC):/opt/tinyos-main-2.1.2/tos/system/AMReceiverC.nc">
      <documentation loc="33:/opt/tinyos-main-2.1.2/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0xb7ab0dc8" loc="40:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0xb7aac010" loc="40:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0xb7aac228" loc="40:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0xb7aa4238" loc="41:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0xb7aa4460" loc="42:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0xb7aa4688" loc="43:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0xb7aa4878" loc="44:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0xb7a553d0" loc="42:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0xb7a555f8" loc="43:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0xb7a55820" loc="44:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0xb7a55a10" loc="45:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/opt/tinyos-main-2.1.2/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-main-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="23:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="11:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0xb795f900" loc="23:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0xb795f900"/></type-var>
        </typedef>
        <constant name="divider" ref="0xb795fac0" loc="23:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncP" loc="23:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="11:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0xb7958c00" loc="23:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0xb7958c00"/></type-var>
        </typedef>
        <constant name="divider" ref="0xb7958dc0" loc="23:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/opt/tinyos-main-2.1.2/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-main-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb796bab8" loc="46:/opt/tinyos-main-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb796bab8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/opt/tinyos-main-2.1.2/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb78b4290" loc="46:/opt/tinyos-main-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb78b4290"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0xb78b4470" loc="46:/opt/tinyos-main-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/opt/tinyos-main-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-main-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb788ab38" loc="46:/opt/tinyos-main-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb788ab38"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="FakeSensorC" loc="8:FakeSensorC.nc" abstract="">
      <documentation loc="1:FakeSensorC.nc">
        <short>&#10;  Configuration file for wiring of FakeSensorP module to other common &#10;  components to simulate the behavior of a real sensor&#10;&#10;  </short>
        <long>&#10;  Configuration file for wiring of FakeSensorP module to other common &#10;  components to simulate the behavior of a real sensor&#10;&#10;  @author Luca Pietro Borsani&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="FakeSensorP" loc="8:FakeSensorP.nc" abstract="">
      <documentation loc="1:FakeSensorP.nc">
        <short>&#10;  Source file for implementation of module Middleware&#10;  which provides the main logic for middleware message management&#10;&#10;  </short>
        <long>&#10;  Source file for implementation of module Middleware&#10;  which provides the main logic for middleware message management&#10;&#10;  @author Luca Pietro Borsani&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="85:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="70:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420.</short>
        <long>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420. As these timers (the Alarm interface) are&#10; usually part of an HAL, they are platform specific. But as the&#10; CC2420 needs to be cross-platform, this component bridges between&#10; the two, providing a platform-independent abstraction of&#10; CC2420-specific Alarm. This is a Atmega128 implementation that&#10; uses the Compare1A register.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:54 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="26:/opt/tinyos-main-2.1.2/tos/platforms/mica/Alarm32khz32C.nc" abstract="">
      <documentation loc="11:/opt/tinyos-main-2.1.2/tos/platforms/mica/Alarm32khz32C.nc">
        <short>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register). Note that creating one of these Alarms consumes a 16-bit&#10; 32kHz Alarm (see Alarm32khz16C).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmOne16C" loc="28:/opt/tinyos-main-2.1.2/tos/platforms/mica/AlarmOne16C.nc" abstract="">
      <documentation loc="11:/opt/tinyos-main-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128TimerInitC" loc="44:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0xb76c8478" loc="44:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0xb76c8478"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0xb76c8698" loc="44:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmC" loc="51:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0xb76cb9a8" loc="51:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0xb76cb9a8"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0xb76cbdf0" loc="52:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0xb76cbdf0"/></type-var>
        </typedef>
        <constant name="mindt" ref="0xb76bc010" loc="53:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="42:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0xb7698a68" loc="42:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0xb7698a68"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0xb7698eb0" loc="43:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0xb7698eb0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/opt/tinyos-main-2.1.2/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0xb769bdd8" loc="55:/opt/tinyos-main-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0xb769bdd8"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0xb7686258" loc="56:/opt/tinyos-main-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0xb7686258"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0xb76864c0" loc="57:/opt/tinyos-main-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0xb76864c0"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0xb7686930" loc="58:/opt/tinyos-main-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0xb7686930"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0xb7686b98" loc="59:/opt/tinyos-main-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0xb7685038" loc="60:/opt/tinyos-main-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0xb7685038"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:/opt/tinyos-main-2.1.2/tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0xb76a0bb8" loc="52:/opt/tinyos-main-2.1.2/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0xb76a0bb8"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0xb7673038" loc="53:/opt/tinyos-main-2.1.2/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0xb7673038"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0xb76732a0" loc="54:/opt/tinyos-main-2.1.2/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0xb76732a0"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0xb7673710" loc="55:/opt/tinyos-main-2.1.2/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0xb7673710"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0xb7673978" loc="56:/opt/tinyos-main-2.1.2/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioCaptureC" loc="40:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="35:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
        <short>&#10; Expose capture capability as a GpioCapture interface from TEP117.</short>
        <long>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10; @author Martin Turon, Crossbow &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioInterruptC" loc="6:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc" abstract="" safe="">
      <documentation loc="3:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128InterruptPinP" loc="39:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="ctrl_addr" ref="0xb7621c20" loc="39:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
          </type-int>
        </constant>
        <constant name="edge0bit" ref="0xb7621e48" loc="40:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
          </type-int>
        </constant>
        <constant name="edge1bit" ref="0xb760c088" loc="41:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0xb760c278" loc="42:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:/opt/tinyos-main-2.1.2/tos/system/StateC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="37:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-04-24 22:31:25 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="83:/opt/tinyos-main-2.1.2/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="62:/opt/tinyos-main-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0xb74efb48" loc="83:/opt/tinyos-main-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/opt/tinyos-main-2.1.2/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0xb74e8940" loc="42:/opt/tinyos-main-2.1.2/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/opt/tinyos-main-2.1.2/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/opt/tinyos-main-2.1.2/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:/opt/tinyos-main-2.1.2/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-main-2.1.2/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0xb7204d88" loc="47:/opt/tinyos-main-2.1.2/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0xb79c9d30"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:/opt/tinyos-main-2.1.2/tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-main-2.1.2/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0xb71ff8b0" loc="47:/opt/tinyos-main-2.1.2/tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0xb79c9d30"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/opt/tinyos-main-2.1.2/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-main-2.1.2/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0xb71f93a8" loc="43:/opt/tinyos-main-2.1.2/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0xb79c9d30"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/opt/tinyos-main-2.1.2/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-main-2.1.2/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0xb71eab90" loc="45:/opt/tinyos-main-2.1.2/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="43:/opt/tinyos-main-2.1.2/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-main-2.1.2/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0xb71b6320" loc="43:/opt/tinyos-main-2.1.2/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0xb79c9d30"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0xb7aeb480" loc="58:/opt/tinyos-main-2.1.2/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0xb7aeb480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7aeb658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0xb7aee818" loc="57:/opt/tinyos-main-2.1.2/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0xb7aee818"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0xb7aee9f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0xb7ae3ea0" loc="52:/opt/tinyos-main-2.1.2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0xb7ae3ea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7ae80c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb7aebd78" loc="46:/opt/tinyos-main-2.1.2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb7aebd78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7ae9010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0xb7ae3740" loc="50:/opt/tinyos-main-2.1.2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0xb7ae3740"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0xb7ae3918"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0xb7ae39f8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0xb7ae3ad8"/>
        <function-ref name="actualMicro" scoped="" ref="0xb7ae3bb8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0xb7ae3c98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0xb7ae1630" loc="45:/opt/tinyos-main-2.1.2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0xb7ae1630"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7ae1808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb7ae1250" loc="44:/opt/tinyos-main-2.1.2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb7ae1250"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7ae1428"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0xb7ae1a38" loc="46:/opt/tinyos-main-2.1.2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0xb7ae1a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7ae1c10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0xb7adee18" loc="41:/opt/tinyos-main-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0xb7adee18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7add010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0xb7adea48" loc="40:/opt/tinyos-main-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0xb7adea48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7adec20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0xb7ada8f8" loc="45:/opt/tinyos-main-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0xb7ada8f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7adaad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0xb7ad7ef8" loc="44:/opt/tinyos-main-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0xb7ad7ef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7ada0e0"/>
        <function-ref name="isInput" scoped="" ref="0xb7ada1c0"/>
        <function-ref name="toggle" scoped="" ref="0xb7ada2a0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7ada380"/>
        <function-ref name="get" scoped="" ref="0xb7ada460"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7ada540"/>
        <function-ref name="set" scoped="" ref="0xb7ada620"/>
        <function-ref name="clr" scoped="" ref="0xb7ada700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0xb7add9c8" loc="43:/opt/tinyos-main-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0xb7add9c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7addba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0xb7ab44b0" loc="100:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0xb7ab44b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7ab4888"/>
        <function-ref name="isInput" scoped="" ref="0xb7ab4968"/>
        <function-ref name="toggle" scoped="" ref="0xb7ab4a48"/>
        <function-ref name="isOutput" scoped="" ref="0xb7ab4b28"/>
        <function-ref name="get" scoped="" ref="0xb7ab4c08"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7ab4ce8"/>
        <function-ref name="set" scoped="" ref="0xb7ab4dc8"/>
        <function-ref name="clr" scoped="" ref="0xb7ab4ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0xb7ac3a28" loc="74:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0xb7ac3a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7ac3c00"/>
        <function-ref name="isInput" scoped="" ref="0xb7ac3ce0"/>
        <function-ref name="toggle" scoped="" ref="0xb7ac3dc0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7ac3ea0"/>
        <function-ref name="get" scoped="" ref="0xb7ac2010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7ac20f0"/>
        <function-ref name="set" scoped="" ref="0xb7ac21d0"/>
        <function-ref name="clr" scoped="" ref="0xb7ac22b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0xb7abc0a0" loc="85:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0xb7abc0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7abc278"/>
        <function-ref name="isInput" scoped="" ref="0xb7abc358"/>
        <function-ref name="toggle" scoped="" ref="0xb7abc438"/>
        <function-ref name="isOutput" scoped="" ref="0xb7abc518"/>
        <function-ref name="get" scoped="" ref="0xb7abc5f8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7abc6d8"/>
        <function-ref name="set" scoped="" ref="0xb7abc7b8"/>
        <function-ref name="clr" scoped="" ref="0xb7abc898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0xb7ab7210" loc="94:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0xb7ab7210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7ab73e8"/>
        <function-ref name="isInput" scoped="" ref="0xb7ab74c8"/>
        <function-ref name="toggle" scoped="" ref="0xb7ab75a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7ab7688"/>
        <function-ref name="get" scoped="" ref="0xb7ab7768"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7ab7848"/>
        <function-ref name="set" scoped="" ref="0xb7ab7928"/>
        <function-ref name="clr" scoped="" ref="0xb7ab7a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0xb7ad0670" loc="52:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0xb7ad0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7ad0848"/>
        <function-ref name="isInput" scoped="" ref="0xb7ad0928"/>
        <function-ref name="toggle" scoped="" ref="0xb7ad0a08"/>
        <function-ref name="isOutput" scoped="" ref="0xb7ad0ae8"/>
        <function-ref name="get" scoped="" ref="0xb7ad0bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7ad0ca8"/>
        <function-ref name="set" scoped="" ref="0xb7ad0d88"/>
        <function-ref name="clr" scoped="" ref="0xb7ad0e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0xb7ab9ce8" loc="92:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0xb7ab9ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7ab9ec0"/>
        <function-ref name="isInput" scoped="" ref="0xb7ab8010"/>
        <function-ref name="toggle" scoped="" ref="0xb7ab80f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7ab81d0"/>
        <function-ref name="get" scoped="" ref="0xb7ab82b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7ab8390"/>
        <function-ref name="set" scoped="" ref="0xb7ab8470"/>
        <function-ref name="clr" scoped="" ref="0xb7ab8550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0xb7acfa98" loc="55:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0xb7acfa98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7acfc70"/>
        <function-ref name="isInput" scoped="" ref="0xb7acfd50"/>
        <function-ref name="toggle" scoped="" ref="0xb7acfe30"/>
        <function-ref name="isOutput" scoped="" ref="0xb7acff10"/>
        <function-ref name="get" scoped="" ref="0xb7ace010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7ace0f0"/>
        <function-ref name="set" scoped="" ref="0xb7ace1d0"/>
        <function-ref name="clr" scoped="" ref="0xb7ace2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0xb7ac8210" loc="66:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0xb7ac8210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7ac83e8"/>
        <function-ref name="isInput" scoped="" ref="0xb7ac84c8"/>
        <function-ref name="toggle" scoped="" ref="0xb7ac85a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7ac8688"/>
        <function-ref name="get" scoped="" ref="0xb7ac8768"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7ac8848"/>
        <function-ref name="set" scoped="" ref="0xb7ac8928"/>
        <function-ref name="clr" scoped="" ref="0xb7ac8a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0xb7ac18e0" loc="77:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0xb7ac18e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7ac1ab8"/>
        <function-ref name="isInput" scoped="" ref="0xb7ac1b98"/>
        <function-ref name="toggle" scoped="" ref="0xb7ac1c78"/>
        <function-ref name="isOutput" scoped="" ref="0xb7ac1d58"/>
        <function-ref name="get" scoped="" ref="0xb7ac1e38"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7ac1f18"/>
        <function-ref name="set" scoped="" ref="0xb7ac0010"/>
        <function-ref name="clr" scoped="" ref="0xb7ac00f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0xb7abbea8" loc="88:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0xb7abbea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7aba0c0"/>
        <function-ref name="isInput" scoped="" ref="0xb7aba1a0"/>
        <function-ref name="toggle" scoped="" ref="0xb7aba280"/>
        <function-ref name="isOutput" scoped="" ref="0xb7aba360"/>
        <function-ref name="get" scoped="" ref="0xb7aba440"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7aba520"/>
        <function-ref name="set" scoped="" ref="0xb7aba600"/>
        <function-ref name="clr" scoped="" ref="0xb7aba6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0xb7ad32f0" loc="47:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0xb7ad32f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7ad34c8"/>
        <function-ref name="isInput" scoped="" ref="0xb7ad35a8"/>
        <function-ref name="toggle" scoped="" ref="0xb7ad3688"/>
        <function-ref name="isOutput" scoped="" ref="0xb7ad3768"/>
        <function-ref name="get" scoped="" ref="0xb7ad3848"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7ad3928"/>
        <function-ref name="set" scoped="" ref="0xb7ad3a08"/>
        <function-ref name="clr" scoped="" ref="0xb7ad3ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0xb7acd8e0" loc="58:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0xb7acd8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7acdab8"/>
        <function-ref name="isInput" scoped="" ref="0xb7acdb98"/>
        <function-ref name="toggle" scoped="" ref="0xb7acdc78"/>
        <function-ref name="isOutput" scoped="" ref="0xb7acdd58"/>
        <function-ref name="get" scoped="" ref="0xb7acde38"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7acdf18"/>
        <function-ref name="set" scoped="" ref="0xb7acc010"/>
        <function-ref name="clr" scoped="" ref="0xb7acc0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0xb7ac50a0" loc="69:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0xb7ac50a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7ac5278"/>
        <function-ref name="isInput" scoped="" ref="0xb7ac5358"/>
        <function-ref name="toggle" scoped="" ref="0xb7ac5438"/>
        <function-ref name="isOutput" scoped="" ref="0xb7ac5518"/>
        <function-ref name="get" scoped="" ref="0xb7ac55f8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7ac56d8"/>
        <function-ref name="set" scoped="" ref="0xb7ac57b8"/>
        <function-ref name="clr" scoped="" ref="0xb7ac5898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0xb7abf750" loc="80:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0xb7abf750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7abf928"/>
        <function-ref name="isInput" scoped="" ref="0xb7abfa08"/>
        <function-ref name="toggle" scoped="" ref="0xb7abfae8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7abfbc8"/>
        <function-ref name="get" scoped="" ref="0xb7abfca8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7abfd88"/>
        <function-ref name="set" scoped="" ref="0xb7abfe68"/>
        <function-ref name="clr" scoped="" ref="0xb7abe010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0xb7ab50a0" loc="97:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0xb7ab50a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7ab5278"/>
        <function-ref name="isInput" scoped="" ref="0xb7ab5358"/>
        <function-ref name="toggle" scoped="" ref="0xb7ab5438"/>
        <function-ref name="isOutput" scoped="" ref="0xb7ab5518"/>
        <function-ref name="get" scoped="" ref="0xb7ab55f8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7ab56d8"/>
        <function-ref name="set" scoped="" ref="0xb7ab57b8"/>
        <function-ref name="clr" scoped="" ref="0xb7ab5898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0xb7ab2590" loc="103:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0xb7ab2590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7ab2768"/>
        <function-ref name="isInput" scoped="" ref="0xb7ab2848"/>
        <function-ref name="toggle" scoped="" ref="0xb7ab2928"/>
        <function-ref name="isOutput" scoped="" ref="0xb7ab2a08"/>
        <function-ref name="get" scoped="" ref="0xb7ab2ae8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7ab2bc8"/>
        <function-ref name="set" scoped="" ref="0xb7ab2ca8"/>
        <function-ref name="clr" scoped="" ref="0xb7ab2d88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0xb7abec08" loc="83:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0xb7abec08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7abede0"/>
        <function-ref name="isInput" scoped="" ref="0xb7abeec0"/>
        <function-ref name="toggle" scoped="" ref="0xb7abd010"/>
        <function-ref name="isOutput" scoped="" ref="0xb7abd0f0"/>
        <function-ref name="get" scoped="" ref="0xb7abd1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7abd2b0"/>
        <function-ref name="set" scoped="" ref="0xb7abd390"/>
        <function-ref name="clr" scoped="" ref="0xb7abd470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0xb7ad1210" loc="50:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0xb7ad1210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7ad13e8"/>
        <function-ref name="isInput" scoped="" ref="0xb7ad14c8"/>
        <function-ref name="toggle" scoped="" ref="0xb7ad15a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7ad1688"/>
        <function-ref name="get" scoped="" ref="0xb7ad1768"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7ad1848"/>
        <function-ref name="set" scoped="" ref="0xb7ad1928"/>
        <function-ref name="clr" scoped="" ref="0xb7ad1a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0xb7acb830" loc="61:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0xb7acb830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7acba08"/>
        <function-ref name="isInput" scoped="" ref="0xb7acbae8"/>
        <function-ref name="toggle" scoped="" ref="0xb7acbbc8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7acbca8"/>
        <function-ref name="get" scoped="" ref="0xb7acbd88"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7acbe68"/>
        <function-ref name="set" scoped="" ref="0xb7aca010"/>
        <function-ref name="clr" scoped="" ref="0xb7aca0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0xb7ab30c0" loc="101:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0xb7ab30c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7ab3298"/>
        <function-ref name="isInput" scoped="" ref="0xb7ab3378"/>
        <function-ref name="toggle" scoped="" ref="0xb7ab3458"/>
        <function-ref name="isOutput" scoped="" ref="0xb7ab3538"/>
        <function-ref name="get" scoped="" ref="0xb7ab3618"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7ab36f8"/>
        <function-ref name="set" scoped="" ref="0xb7ab37d8"/>
        <function-ref name="clr" scoped="" ref="0xb7ab38b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0xb7acace8" loc="64:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0xb7acace8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7acaec0"/>
        <function-ref name="isInput" scoped="" ref="0xb7ac9010"/>
        <function-ref name="toggle" scoped="" ref="0xb7ac90f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7ac91d0"/>
        <function-ref name="get" scoped="" ref="0xb7ac92b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7ac9390"/>
        <function-ref name="set" scoped="" ref="0xb7ac9470"/>
        <function-ref name="clr" scoped="" ref="0xb7ac9550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0xb7ac24b0" loc="75:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0xb7ac24b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7ac2688"/>
        <function-ref name="isInput" scoped="" ref="0xb7ac2768"/>
        <function-ref name="toggle" scoped="" ref="0xb7ac2848"/>
        <function-ref name="isOutput" scoped="" ref="0xb7ac2928"/>
        <function-ref name="get" scoped="" ref="0xb7ac2a08"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7ac2ae8"/>
        <function-ref name="set" scoped="" ref="0xb7ac2bc8"/>
        <function-ref name="clr" scoped="" ref="0xb7ac2ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0xb7abca98" loc="86:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0xb7abca98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7abcc70"/>
        <function-ref name="isInput" scoped="" ref="0xb7abcd50"/>
        <function-ref name="toggle" scoped="" ref="0xb7abce30"/>
        <function-ref name="isOutput" scoped="" ref="0xb7abcf10"/>
        <function-ref name="get" scoped="" ref="0xb7abb010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7abb0f0"/>
        <function-ref name="set" scoped="" ref="0xb7abb1d0"/>
        <function-ref name="clr" scoped="" ref="0xb7abb2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0xb7ab7c08" loc="95:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0xb7ab7c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7ab7de0"/>
        <function-ref name="isInput" scoped="" ref="0xb7ab7ec0"/>
        <function-ref name="toggle" scoped="" ref="0xb7ab6010"/>
        <function-ref name="isOutput" scoped="" ref="0xb7ab60f0"/>
        <function-ref name="get" scoped="" ref="0xb7ab61d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7ab62b0"/>
        <function-ref name="set" scoped="" ref="0xb7ab6390"/>
        <function-ref name="clr" scoped="" ref="0xb7ab6470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0xb7acf0a0" loc="53:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0xb7acf0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7acf278"/>
        <function-ref name="isInput" scoped="" ref="0xb7acf358"/>
        <function-ref name="toggle" scoped="" ref="0xb7acf438"/>
        <function-ref name="isOutput" scoped="" ref="0xb7acf518"/>
        <function-ref name="get" scoped="" ref="0xb7acf5f8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7acf6d8"/>
        <function-ref name="set" scoped="" ref="0xb7acf7b8"/>
        <function-ref name="clr" scoped="" ref="0xb7acf898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0xb7ace4b0" loc="56:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0xb7ace4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7ace688"/>
        <function-ref name="isInput" scoped="" ref="0xb7ace768"/>
        <function-ref name="toggle" scoped="" ref="0xb7ace848"/>
        <function-ref name="isOutput" scoped="" ref="0xb7ace928"/>
        <function-ref name="get" scoped="" ref="0xb7acea08"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7aceae8"/>
        <function-ref name="set" scoped="" ref="0xb7acebc8"/>
        <function-ref name="clr" scoped="" ref="0xb7aceca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0xb7ac8c08" loc="67:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0xb7ac8c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7ac8de0"/>
        <function-ref name="isInput" scoped="" ref="0xb7ac8ec0"/>
        <function-ref name="toggle" scoped="" ref="0xb7ac7010"/>
        <function-ref name="isOutput" scoped="" ref="0xb7ac70f0"/>
        <function-ref name="get" scoped="" ref="0xb7ac71d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7ac72b0"/>
        <function-ref name="set" scoped="" ref="0xb7ac7390"/>
        <function-ref name="clr" scoped="" ref="0xb7ac7470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0xb7ac02f0" loc="78:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0xb7ac02f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7ac04c8"/>
        <function-ref name="isInput" scoped="" ref="0xb7ac05a8"/>
        <function-ref name="toggle" scoped="" ref="0xb7ac0688"/>
        <function-ref name="isOutput" scoped="" ref="0xb7ac0768"/>
        <function-ref name="get" scoped="" ref="0xb7ac0848"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7ac0928"/>
        <function-ref name="set" scoped="" ref="0xb7ac0a08"/>
        <function-ref name="clr" scoped="" ref="0xb7ac0ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0xb7aba8e0" loc="89:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0xb7aba8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7abaab8"/>
        <function-ref name="isInput" scoped="" ref="0xb7abab98"/>
        <function-ref name="toggle" scoped="" ref="0xb7abac78"/>
        <function-ref name="isOutput" scoped="" ref="0xb7abad58"/>
        <function-ref name="get" scoped="" ref="0xb7abae38"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7abaf18"/>
        <function-ref name="set" scoped="" ref="0xb7ab9010"/>
        <function-ref name="clr" scoped="" ref="0xb7ab90f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0xb7ad3ce8" loc="48:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0xb7ad3ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7ad3ec0"/>
        <function-ref name="isInput" scoped="" ref="0xb7ad2010"/>
        <function-ref name="toggle" scoped="" ref="0xb7ad20f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7ad21d0"/>
        <function-ref name="get" scoped="" ref="0xb7ad22b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7ad2390"/>
        <function-ref name="set" scoped="" ref="0xb7ad2470"/>
        <function-ref name="clr" scoped="" ref="0xb7ad2550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0xb7acc2f0" loc="59:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0xb7acc2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7acc548"/>
        <function-ref name="isInput" scoped="" ref="0xb7acc628"/>
        <function-ref name="toggle" scoped="" ref="0xb7acc708"/>
        <function-ref name="isOutput" scoped="" ref="0xb7acc7e8"/>
        <function-ref name="get" scoped="" ref="0xb7acc8c8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7acc9a8"/>
        <function-ref name="set" scoped="" ref="0xb7acca88"/>
        <function-ref name="clr" scoped="" ref="0xb7accb68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0xb7ac5a98" loc="70:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0xb7ac5a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7ac5c70"/>
        <function-ref name="isInput" scoped="" ref="0xb7ac5d50"/>
        <function-ref name="toggle" scoped="" ref="0xb7ac5e30"/>
        <function-ref name="isOutput" scoped="" ref="0xb7ac5f10"/>
        <function-ref name="get" scoped="" ref="0xb7ac4010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7ac40f0"/>
        <function-ref name="set" scoped="" ref="0xb7ac41d0"/>
        <function-ref name="clr" scoped="" ref="0xb7ac42b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0xb7ab5a98" loc="98:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0xb7ab5a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7ab5c70"/>
        <function-ref name="isInput" scoped="" ref="0xb7ab5d50"/>
        <function-ref name="toggle" scoped="" ref="0xb7ab5e30"/>
        <function-ref name="isOutput" scoped="" ref="0xb7ab5f10"/>
        <function-ref name="get" scoped="" ref="0xb7ab4010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7ab40f0"/>
        <function-ref name="set" scoped="" ref="0xb7ab41d0"/>
        <function-ref name="clr" scoped="" ref="0xb7ab42b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0xb7ac4ea8" loc="73:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0xb7ac4ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7ac3208"/>
        <function-ref name="isInput" scoped="" ref="0xb7ac32e8"/>
        <function-ref name="toggle" scoped="" ref="0xb7ac33c8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7ac34a8"/>
        <function-ref name="get" scoped="" ref="0xb7ac3588"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7ac3668"/>
        <function-ref name="set" scoped="" ref="0xb7ac3748"/>
        <function-ref name="clr" scoped="" ref="0xb7ac3828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0xb7abd670" loc="84:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0xb7abd670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7abd848"/>
        <function-ref name="isInput" scoped="" ref="0xb7abd928"/>
        <function-ref name="toggle" scoped="" ref="0xb7abda08"/>
        <function-ref name="isOutput" scoped="" ref="0xb7abdae8"/>
        <function-ref name="get" scoped="" ref="0xb7abdbc8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7abdca8"/>
        <function-ref name="set" scoped="" ref="0xb7abdd88"/>
        <function-ref name="clr" scoped="" ref="0xb7abde68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0xb7ab8750" loc="93:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0xb7ab8750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7ab8928"/>
        <function-ref name="isInput" scoped="" ref="0xb7ab8a08"/>
        <function-ref name="toggle" scoped="" ref="0xb7ab8ae8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7ab8bc8"/>
        <function-ref name="get" scoped="" ref="0xb7ab8ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7ab8d88"/>
        <function-ref name="set" scoped="" ref="0xb7ab8e68"/>
        <function-ref name="clr" scoped="" ref="0xb7ab7010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0xb7ab1010" loc="104:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0xb7ab1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7ab11e8"/>
        <function-ref name="isInput" scoped="" ref="0xb7ab12c8"/>
        <function-ref name="toggle" scoped="" ref="0xb7ab13a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7ab1488"/>
        <function-ref name="get" scoped="" ref="0xb7ab1568"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7ab1648"/>
        <function-ref name="set" scoped="" ref="0xb7ab1728"/>
        <function-ref name="clr" scoped="" ref="0xb7ab1808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0xb7ad1c08" loc="51:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0xb7ad1c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7ad1de0"/>
        <function-ref name="isInput" scoped="" ref="0xb7ad1ec0"/>
        <function-ref name="toggle" scoped="" ref="0xb7ad0010"/>
        <function-ref name="isOutput" scoped="" ref="0xb7ad00f0"/>
        <function-ref name="get" scoped="" ref="0xb7ad01d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7ad02b0"/>
        <function-ref name="set" scoped="" ref="0xb7ad0390"/>
        <function-ref name="clr" scoped="" ref="0xb7ad0470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0xb7aca2f0" loc="62:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0xb7aca2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7aca4c8"/>
        <function-ref name="isInput" scoped="" ref="0xb7aca5a8"/>
        <function-ref name="toggle" scoped="" ref="0xb7aca688"/>
        <function-ref name="isOutput" scoped="" ref="0xb7aca768"/>
        <function-ref name="get" scoped="" ref="0xb7aca848"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7aca928"/>
        <function-ref name="set" scoped="" ref="0xb7acaa08"/>
        <function-ref name="clr" scoped="" ref="0xb7acaae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0xb7ab92f0" loc="91:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0xb7ab92f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7ab94c8"/>
        <function-ref name="isInput" scoped="" ref="0xb7ab95a8"/>
        <function-ref name="toggle" scoped="" ref="0xb7ab9688"/>
        <function-ref name="isOutput" scoped="" ref="0xb7ab9768"/>
        <function-ref name="get" scoped="" ref="0xb7ab9848"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7ab9928"/>
        <function-ref name="set" scoped="" ref="0xb7ab9a08"/>
        <function-ref name="clr" scoped="" ref="0xb7ab9ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0xb7ac9750" loc="65:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0xb7ac9750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7ac9928"/>
        <function-ref name="isInput" scoped="" ref="0xb7ac9a08"/>
        <function-ref name="toggle" scoped="" ref="0xb7ac9ae8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7ac9bc8"/>
        <function-ref name="get" scoped="" ref="0xb7ac9ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7ac9d88"/>
        <function-ref name="set" scoped="" ref="0xb7ac9e68"/>
        <function-ref name="clr" scoped="" ref="0xb7ac8010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0xb7ac2ea8" loc="76:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0xb7ac2ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7ac10c0"/>
        <function-ref name="isInput" scoped="" ref="0xb7ac11a0"/>
        <function-ref name="toggle" scoped="" ref="0xb7ac1280"/>
        <function-ref name="isOutput" scoped="" ref="0xb7ac1360"/>
        <function-ref name="get" scoped="" ref="0xb7ac1440"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7ac1520"/>
        <function-ref name="set" scoped="" ref="0xb7ac1600"/>
        <function-ref name="clr" scoped="" ref="0xb7ac16e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0xb7abb4b0" loc="87:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0xb7abb4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7abb688"/>
        <function-ref name="isInput" scoped="" ref="0xb7abb768"/>
        <function-ref name="toggle" scoped="" ref="0xb7abb848"/>
        <function-ref name="isOutput" scoped="" ref="0xb7abb928"/>
        <function-ref name="get" scoped="" ref="0xb7abba08"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7abbae8"/>
        <function-ref name="set" scoped="" ref="0xb7abbbc8"/>
        <function-ref name="clr" scoped="" ref="0xb7abbca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0xb7ab6670" loc="96:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0xb7ab6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7ab6848"/>
        <function-ref name="isInput" scoped="" ref="0xb7ab6928"/>
        <function-ref name="toggle" scoped="" ref="0xb7ab6a08"/>
        <function-ref name="isOutput" scoped="" ref="0xb7ab6ae8"/>
        <function-ref name="get" scoped="" ref="0xb7ab6bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7ab6ca8"/>
        <function-ref name="set" scoped="" ref="0xb7ab6d88"/>
        <function-ref name="clr" scoped="" ref="0xb7ab6e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0xb7adc8e0" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0xb7adc8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7adcab8"/>
        <function-ref name="isInput" scoped="" ref="0xb7adcb98"/>
        <function-ref name="toggle" scoped="" ref="0xb7adcc78"/>
        <function-ref name="isOutput" scoped="" ref="0xb7adcd58"/>
        <function-ref name="get" scoped="" ref="0xb7adce38"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7adcf18"/>
        <function-ref name="set" scoped="" ref="0xb7ad3010"/>
        <function-ref name="clr" scoped="" ref="0xb7ad30f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0xb7aceea8" loc="57:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0xb7aceea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7acd0c0"/>
        <function-ref name="isInput" scoped="" ref="0xb7acd1a0"/>
        <function-ref name="toggle" scoped="" ref="0xb7acd280"/>
        <function-ref name="isOutput" scoped="" ref="0xb7acd360"/>
        <function-ref name="get" scoped="" ref="0xb7acd440"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7acd520"/>
        <function-ref name="set" scoped="" ref="0xb7acd600"/>
        <function-ref name="clr" scoped="" ref="0xb7acd6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0xb7ac7670" loc="68:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0xb7ac7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7ac7848"/>
        <function-ref name="isInput" scoped="" ref="0xb7ac7928"/>
        <function-ref name="toggle" scoped="" ref="0xb7ac7a08"/>
        <function-ref name="isOutput" scoped="" ref="0xb7ac7ae8"/>
        <function-ref name="get" scoped="" ref="0xb7ac7bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7ac7ca8"/>
        <function-ref name="set" scoped="" ref="0xb7ac7d88"/>
        <function-ref name="clr" scoped="" ref="0xb7ac7e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0xb7ac0ce8" loc="79:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0xb7ac0ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7ac0ec0"/>
        <function-ref name="isInput" scoped="" ref="0xb7abf010"/>
        <function-ref name="toggle" scoped="" ref="0xb7abf0f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7abf1d0"/>
        <function-ref name="get" scoped="" ref="0xb7abf2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7abf390"/>
        <function-ref name="set" scoped="" ref="0xb7abf470"/>
        <function-ref name="clr" scoped="" ref="0xb7abf550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0xb7ab3ab8" loc="102:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0xb7ab3ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7ab3c90"/>
        <function-ref name="isInput" scoped="" ref="0xb7ab3d70"/>
        <function-ref name="toggle" scoped="" ref="0xb7ab3e50"/>
        <function-ref name="isOutput" scoped="" ref="0xb7ab2010"/>
        <function-ref name="get" scoped="" ref="0xb7ab20f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7ab21d0"/>
        <function-ref name="set" scoped="" ref="0xb7ab22b0"/>
        <function-ref name="clr" scoped="" ref="0xb7ab2390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0xb7abe210" loc="82:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0xb7abe210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7abe3e8"/>
        <function-ref name="isInput" scoped="" ref="0xb7abe4c8"/>
        <function-ref name="toggle" scoped="" ref="0xb7abe5a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7abe688"/>
        <function-ref name="get" scoped="" ref="0xb7abe768"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7abe848"/>
        <function-ref name="set" scoped="" ref="0xb7abe928"/>
        <function-ref name="clr" scoped="" ref="0xb7abea08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0xb7ac44b0" loc="71:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0xb7ac44b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7ac4688"/>
        <function-ref name="isInput" scoped="" ref="0xb7ac4768"/>
        <function-ref name="toggle" scoped="" ref="0xb7ac4848"/>
        <function-ref name="isOutput" scoped="" ref="0xb7ac4928"/>
        <function-ref name="get" scoped="" ref="0xb7ac4a08"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7ac4ae8"/>
        <function-ref name="set" scoped="" ref="0xb7ac4bc8"/>
        <function-ref name="clr" scoped="" ref="0xb7ac4ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0xb7ad2750" loc="49:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0xb7ad2750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7ad2928"/>
        <function-ref name="isInput" scoped="" ref="0xb7ad2a08"/>
        <function-ref name="toggle" scoped="" ref="0xb7ad2ae8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7ad2bc8"/>
        <function-ref name="get" scoped="" ref="0xb7ad2ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7ad2d88"/>
        <function-ref name="set" scoped="" ref="0xb7ad2e68"/>
        <function-ref name="clr" scoped="" ref="0xb7ad1010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0xb7accd68" loc="60:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0xb7accd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7acb010"/>
        <function-ref name="isInput" scoped="" ref="0xb7acb0f0"/>
        <function-ref name="toggle" scoped="" ref="0xb7acb1d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7acb2b0"/>
        <function-ref name="get" scoped="" ref="0xb7acb390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7acb470"/>
        <function-ref name="set" scoped="" ref="0xb7acb550"/>
        <function-ref name="clr" scoped="" ref="0xb7acb630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0xb7a884f0" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0xb7a884f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a886c8"/>
        <function-ref name="isInput" scoped="" ref="0xb7a887a8"/>
        <function-ref name="toggle" scoped="" ref="0xb7a88888"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a88968"/>
        <function-ref name="get" scoped="" ref="0xb7a88a48"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a88b28"/>
        <function-ref name="set" scoped="" ref="0xb7a88c08"/>
        <function-ref name="clr" scoped="" ref="0xb7a88ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0xb7a85170" loc="49:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0xb7a85170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a85348"/>
        <function-ref name="isInput" scoped="" ref="0xb7a85428"/>
        <function-ref name="toggle" scoped="" ref="0xb7a85508"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a855e8"/>
        <function-ref name="get" scoped="" ref="0xb7a856c8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a857a8"/>
        <function-ref name="set" scoped="" ref="0xb7a85888"/>
        <function-ref name="clr" scoped="" ref="0xb7a85968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0xb7a89228" loc="44:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0xb7a89228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a89400"/>
        <function-ref name="isInput" scoped="" ref="0xb7a894e0"/>
        <function-ref name="toggle" scoped="" ref="0xb7a895c0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a896a0"/>
        <function-ref name="get" scoped="" ref="0xb7a89780"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a89860"/>
        <function-ref name="set" scoped="" ref="0xb7a89940"/>
        <function-ref name="clr" scoped="" ref="0xb7a89a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0xb7a88e48" loc="47:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0xb7a88e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a86050"/>
        <function-ref name="isInput" scoped="" ref="0xb7a86130"/>
        <function-ref name="toggle" scoped="" ref="0xb7a86210"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a862f0"/>
        <function-ref name="get" scoped="" ref="0xb7a863d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a864b0"/>
        <function-ref name="set" scoped="" ref="0xb7a86590"/>
        <function-ref name="clr" scoped="" ref="0xb7a86670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0xb7a85ac8" loc="50:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0xb7a85ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a85ca0"/>
        <function-ref name="isInput" scoped="" ref="0xb7a85d80"/>
        <function-ref name="toggle" scoped="" ref="0xb7a85e60"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a84010"/>
        <function-ref name="get" scoped="" ref="0xb7a840f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a841d0"/>
        <function-ref name="set" scoped="" ref="0xb7a842b0"/>
        <function-ref name="clr" scoped="" ref="0xb7a84390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0xb7a89b80" loc="45:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0xb7a89b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a89d58"/>
        <function-ref name="isInput" scoped="" ref="0xb7a89e38"/>
        <function-ref name="toggle" scoped="" ref="0xb7a89f18"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a88010"/>
        <function-ref name="get" scoped="" ref="0xb7a880f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a881d0"/>
        <function-ref name="set" scoped="" ref="0xb7a882b0"/>
        <function-ref name="clr" scoped="" ref="0xb7a88390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0xb7a867d0" loc="48:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0xb7a867d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a869a8"/>
        <function-ref name="isInput" scoped="" ref="0xb7a86a88"/>
        <function-ref name="toggle" scoped="" ref="0xb7a86b68"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a86c48"/>
        <function-ref name="get" scoped="" ref="0xb7a86d28"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a86e08"/>
        <function-ref name="set" scoped="" ref="0xb7a86ee8"/>
        <function-ref name="clr" scoped="" ref="0xb7a85010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0xb7a844f0" loc="51:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0xb7a844f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a846c8"/>
        <function-ref name="isInput" scoped="" ref="0xb7a847a8"/>
        <function-ref name="toggle" scoped="" ref="0xb7a84888"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a84968"/>
        <function-ref name="get" scoped="" ref="0xb7a84a48"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a84b28"/>
        <function-ref name="set" scoped="" ref="0xb7a84c08"/>
        <function-ref name="clr" scoped="" ref="0xb7a84ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb71943b0" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb71943b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7194588"/>
        <function-ref name="isInput" scoped="" ref="0xb7194668"/>
        <function-ref name="toggle" scoped="" ref="0xb7194748"/>
        <function-ref name="isOutput" scoped="" ref="0xb7194828"/>
        <function-ref name="get" scoped="" ref="0xb7194908"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71949e8"/>
        <function-ref name="set" scoped="" ref="0xb7194ac8"/>
        <function-ref name="clr" scoped="" ref="0xb7194ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7193d70" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7193d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7192010"/>
        <function-ref name="isInput" scoped="" ref="0xb71920f0"/>
        <function-ref name="toggle" scoped="" ref="0xb71921d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb71922b0"/>
        <function-ref name="get" scoped="" ref="0xb7192390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7192470"/>
        <function-ref name="set" scoped="" ref="0xb7192550"/>
        <function-ref name="clr" scoped="" ref="0xb7192630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb71917f8" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb71917f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71919d0"/>
        <function-ref name="isInput" scoped="" ref="0xb7191ab0"/>
        <function-ref name="toggle" scoped="" ref="0xb7191b90"/>
        <function-ref name="isOutput" scoped="" ref="0xb7191c70"/>
        <function-ref name="get" scoped="" ref="0xb7191d50"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7191e30"/>
        <function-ref name="set" scoped="" ref="0xb7191f10"/>
        <function-ref name="clr" scoped="" ref="0xb718d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb718c228" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb718c228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb718c400"/>
        <function-ref name="isInput" scoped="" ref="0xb718c4e0"/>
        <function-ref name="toggle" scoped="" ref="0xb718c5c0"/>
        <function-ref name="isOutput" scoped="" ref="0xb718c6a0"/>
        <function-ref name="get" scoped="" ref="0xb718c780"/>
        <function-ref name="makeOutput" scoped="" ref="0xb718c860"/>
        <function-ref name="set" scoped="" ref="0xb718c940"/>
        <function-ref name="clr" scoped="" ref="0xb718ca20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb718bc08" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb718bc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb718bde0"/>
        <function-ref name="isInput" scoped="" ref="0xb718bec0"/>
        <function-ref name="toggle" scoped="" ref="0xb718a010"/>
        <function-ref name="isOutput" scoped="" ref="0xb718a0f0"/>
        <function-ref name="get" scoped="" ref="0xb718a1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb718a2b0"/>
        <function-ref name="set" scoped="" ref="0xb718a390"/>
        <function-ref name="clr" scoped="" ref="0xb718a470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb71896c0" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb71896c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7189898"/>
        <function-ref name="isInput" scoped="" ref="0xb7189978"/>
        <function-ref name="toggle" scoped="" ref="0xb7189a58"/>
        <function-ref name="isOutput" scoped="" ref="0xb7189b38"/>
        <function-ref name="get" scoped="" ref="0xb7189c18"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7189cf8"/>
        <function-ref name="set" scoped="" ref="0xb7189dd8"/>
        <function-ref name="clr" scoped="" ref="0xb7189eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb71870b0" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb71870b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7187288"/>
        <function-ref name="isInput" scoped="" ref="0xb7187368"/>
        <function-ref name="toggle" scoped="" ref="0xb7187448"/>
        <function-ref name="isOutput" scoped="" ref="0xb7187528"/>
        <function-ref name="get" scoped="" ref="0xb7187608"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71876e8"/>
        <function-ref name="set" scoped="" ref="0xb71877c8"/>
        <function-ref name="clr" scoped="" ref="0xb71878a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7186a88" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7186a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7186c60"/>
        <function-ref name="isInput" scoped="" ref="0xb7186d40"/>
        <function-ref name="toggle" scoped="" ref="0xb7186e20"/>
        <function-ref name="isOutput" scoped="" ref="0xb7186f00"/>
        <function-ref name="get" scoped="" ref="0xb7185010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71850f0"/>
        <function-ref name="set" scoped="" ref="0xb71851d0"/>
        <function-ref name="clr" scoped="" ref="0xb71852b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0xb7a80e48" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0xb7a80e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a7f050"/>
        <function-ref name="isInput" scoped="" ref="0xb7a7f130"/>
        <function-ref name="toggle" scoped="" ref="0xb7a7f210"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a7f2f0"/>
        <function-ref name="get" scoped="" ref="0xb7a7f3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a7f4b0"/>
        <function-ref name="set" scoped="" ref="0xb7a7f590"/>
        <function-ref name="clr" scoped="" ref="0xb7a7f670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0xb7a7eac8" loc="49:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0xb7a7eac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a7eca0"/>
        <function-ref name="isInput" scoped="" ref="0xb7a7ed80"/>
        <function-ref name="toggle" scoped="" ref="0xb7a7ee60"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a7d010"/>
        <function-ref name="get" scoped="" ref="0xb7a7d0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a7d1d0"/>
        <function-ref name="set" scoped="" ref="0xb7a7d2b0"/>
        <function-ref name="clr" scoped="" ref="0xb7a7d390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0xb7a81b00" loc="44:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0xb7a81b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a81cd8"/>
        <function-ref name="isInput" scoped="" ref="0xb7a81db8"/>
        <function-ref name="toggle" scoped="" ref="0xb7a81e98"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a80010"/>
        <function-ref name="get" scoped="" ref="0xb7a800f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a801d0"/>
        <function-ref name="set" scoped="" ref="0xb7a802b0"/>
        <function-ref name="clr" scoped="" ref="0xb7a80390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0xb7a7f7d0" loc="47:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0xb7a7f7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a7f9a8"/>
        <function-ref name="isInput" scoped="" ref="0xb7a7fa88"/>
        <function-ref name="toggle" scoped="" ref="0xb7a7fb68"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a7fc48"/>
        <function-ref name="get" scoped="" ref="0xb7a7fd28"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a7fe08"/>
        <function-ref name="set" scoped="" ref="0xb7a7fee8"/>
        <function-ref name="clr" scoped="" ref="0xb7a7e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0xb7a7d4f0" loc="50:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0xb7a7d4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a7d6c8"/>
        <function-ref name="isInput" scoped="" ref="0xb7a7d7a8"/>
        <function-ref name="toggle" scoped="" ref="0xb7a7d888"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a7d968"/>
        <function-ref name="get" scoped="" ref="0xb7a7da48"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a7db28"/>
        <function-ref name="set" scoped="" ref="0xb7a7dc08"/>
        <function-ref name="clr" scoped="" ref="0xb7a7dce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0xb7a804f0" loc="45:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0xb7a804f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a806c8"/>
        <function-ref name="isInput" scoped="" ref="0xb7a807a8"/>
        <function-ref name="toggle" scoped="" ref="0xb7a80888"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a80968"/>
        <function-ref name="get" scoped="" ref="0xb7a80a48"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a80b28"/>
        <function-ref name="set" scoped="" ref="0xb7a80c08"/>
        <function-ref name="clr" scoped="" ref="0xb7a80ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0xb7a7e170" loc="48:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0xb7a7e170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a7e348"/>
        <function-ref name="isInput" scoped="" ref="0xb7a7e428"/>
        <function-ref name="toggle" scoped="" ref="0xb7a7e508"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a7e5e8"/>
        <function-ref name="get" scoped="" ref="0xb7a7e6c8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a7e7a8"/>
        <function-ref name="set" scoped="" ref="0xb7a7e888"/>
        <function-ref name="clr" scoped="" ref="0xb7a7e968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0xb7a7de48" loc="51:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0xb7a7de48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a7c050"/>
        <function-ref name="isInput" scoped="" ref="0xb7a7c130"/>
        <function-ref name="toggle" scoped="" ref="0xb7a7c210"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a7c2f0"/>
        <function-ref name="get" scoped="" ref="0xb7a7c3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a7c4b0"/>
        <function-ref name="set" scoped="" ref="0xb7a7c590"/>
        <function-ref name="clr" scoped="" ref="0xb7a7c670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb715dde8" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb715dde8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7158010"/>
        <function-ref name="isInput" scoped="" ref="0xb71580f0"/>
        <function-ref name="toggle" scoped="" ref="0xb71581d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb71582b0"/>
        <function-ref name="get" scoped="" ref="0xb7158390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7158470"/>
        <function-ref name="set" scoped="" ref="0xb7158550"/>
        <function-ref name="clr" scoped="" ref="0xb7158630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb71577f8" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb71577f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71579d0"/>
        <function-ref name="isInput" scoped="" ref="0xb7157ab0"/>
        <function-ref name="toggle" scoped="" ref="0xb7157b90"/>
        <function-ref name="isOutput" scoped="" ref="0xb7157c70"/>
        <function-ref name="get" scoped="" ref="0xb7157d50"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7157e30"/>
        <function-ref name="set" scoped="" ref="0xb7157f10"/>
        <function-ref name="clr" scoped="" ref="0xb7156010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7155228" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7155228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7155400"/>
        <function-ref name="isInput" scoped="" ref="0xb71554e0"/>
        <function-ref name="toggle" scoped="" ref="0xb71555c0"/>
        <function-ref name="isOutput" scoped="" ref="0xb71556a0"/>
        <function-ref name="get" scoped="" ref="0xb7155780"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7155860"/>
        <function-ref name="set" scoped="" ref="0xb7155940"/>
        <function-ref name="clr" scoped="" ref="0xb7155a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7154c08" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7154c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7154de0"/>
        <function-ref name="isInput" scoped="" ref="0xb7154ec0"/>
        <function-ref name="toggle" scoped="" ref="0xb7153010"/>
        <function-ref name="isOutput" scoped="" ref="0xb71530f0"/>
        <function-ref name="get" scoped="" ref="0xb71531d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71532b0"/>
        <function-ref name="set" scoped="" ref="0xb7153390"/>
        <function-ref name="clr" scoped="" ref="0xb7153470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb71526c0" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb71526c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7152898"/>
        <function-ref name="isInput" scoped="" ref="0xb7152978"/>
        <function-ref name="toggle" scoped="" ref="0xb7152a58"/>
        <function-ref name="isOutput" scoped="" ref="0xb7152b38"/>
        <function-ref name="get" scoped="" ref="0xb7152c18"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7152cf8"/>
        <function-ref name="set" scoped="" ref="0xb7152dd8"/>
        <function-ref name="clr" scoped="" ref="0xb7152eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb71500b0" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb71500b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7150288"/>
        <function-ref name="isInput" scoped="" ref="0xb7150368"/>
        <function-ref name="toggle" scoped="" ref="0xb7150448"/>
        <function-ref name="isOutput" scoped="" ref="0xb7150528"/>
        <function-ref name="get" scoped="" ref="0xb7150608"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71506e8"/>
        <function-ref name="set" scoped="" ref="0xb71507c8"/>
        <function-ref name="clr" scoped="" ref="0xb71508a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb714fa88" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb714fa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb714fc60"/>
        <function-ref name="isInput" scoped="" ref="0xb714fd40"/>
        <function-ref name="toggle" scoped="" ref="0xb714fe20"/>
        <function-ref name="isOutput" scoped="" ref="0xb714ff00"/>
        <function-ref name="get" scoped="" ref="0xb714e010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb714e0f0"/>
        <function-ref name="set" scoped="" ref="0xb714e1d0"/>
        <function-ref name="clr" scoped="" ref="0xb714e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb714d538" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb714d538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb714d710"/>
        <function-ref name="isInput" scoped="" ref="0xb714d7f0"/>
        <function-ref name="toggle" scoped="" ref="0xb714d8d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb714d9b0"/>
        <function-ref name="get" scoped="" ref="0xb714da90"/>
        <function-ref name="makeOutput" scoped="" ref="0xb714db70"/>
        <function-ref name="set" scoped="" ref="0xb714dc50"/>
        <function-ref name="clr" scoped="" ref="0xb714dd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0xb7a776b0" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0xb7a776b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a77888"/>
        <function-ref name="isInput" scoped="" ref="0xb7a77968"/>
        <function-ref name="toggle" scoped="" ref="0xb7a77a48"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a77b28"/>
        <function-ref name="get" scoped="" ref="0xb7a77c08"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a77ce8"/>
        <function-ref name="set" scoped="" ref="0xb7a77dc8"/>
        <function-ref name="clr" scoped="" ref="0xb7a77ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0xb7a75330" loc="49:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0xb7a75330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a75508"/>
        <function-ref name="isInput" scoped="" ref="0xb7a755e8"/>
        <function-ref name="toggle" scoped="" ref="0xb7a756c8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a757a8"/>
        <function-ref name="get" scoped="" ref="0xb7a75888"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a75968"/>
        <function-ref name="set" scoped="" ref="0xb7a75a48"/>
        <function-ref name="clr" scoped="" ref="0xb7a75b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0xb7a783d8" loc="44:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0xb7a783d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a785b0"/>
        <function-ref name="isInput" scoped="" ref="0xb7a78690"/>
        <function-ref name="toggle" scoped="" ref="0xb7a78770"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a78850"/>
        <function-ref name="get" scoped="" ref="0xb7a78930"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a78a10"/>
        <function-ref name="set" scoped="" ref="0xb7a78af0"/>
        <function-ref name="clr" scoped="" ref="0xb7a78bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0xb7a76030" loc="47:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0xb7a76030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a76208"/>
        <function-ref name="isInput" scoped="" ref="0xb7a762e8"/>
        <function-ref name="toggle" scoped="" ref="0xb7a763c8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a764a8"/>
        <function-ref name="get" scoped="" ref="0xb7a76588"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a76668"/>
        <function-ref name="set" scoped="" ref="0xb7a76748"/>
        <function-ref name="clr" scoped="" ref="0xb7a76828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0xb7a75c88" loc="50:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0xb7a75c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a75e60"/>
        <function-ref name="isInput" scoped="" ref="0xb7a74010"/>
        <function-ref name="toggle" scoped="" ref="0xb7a740f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a741d0"/>
        <function-ref name="get" scoped="" ref="0xb7a742b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a74390"/>
        <function-ref name="set" scoped="" ref="0xb7a74470"/>
        <function-ref name="clr" scoped="" ref="0xb7a74550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0xb7a78d30" loc="45:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0xb7a78d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a78f08"/>
        <function-ref name="isInput" scoped="" ref="0xb7a77010"/>
        <function-ref name="toggle" scoped="" ref="0xb7a770f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a771d0"/>
        <function-ref name="get" scoped="" ref="0xb7a772b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a77390"/>
        <function-ref name="set" scoped="" ref="0xb7a77470"/>
        <function-ref name="clr" scoped="" ref="0xb7a77550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0xb7a76988" loc="48:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0xb7a76988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a76b60"/>
        <function-ref name="isInput" scoped="" ref="0xb7a76c40"/>
        <function-ref name="toggle" scoped="" ref="0xb7a76d20"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a76e00"/>
        <function-ref name="get" scoped="" ref="0xb7a76ee0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a75010"/>
        <function-ref name="set" scoped="" ref="0xb7a750f0"/>
        <function-ref name="clr" scoped="" ref="0xb7a751d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0xb7a746b0" loc="51:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0xb7a746b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a74888"/>
        <function-ref name="isInput" scoped="" ref="0xb7a74968"/>
        <function-ref name="toggle" scoped="" ref="0xb7a74a48"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a74b28"/>
        <function-ref name="get" scoped="" ref="0xb7a74c08"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a74ce8"/>
        <function-ref name="set" scoped="" ref="0xb7a74dc8"/>
        <function-ref name="clr" scoped="" ref="0xb7a74ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7121938" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7121938"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7121b10"/>
        <function-ref name="isInput" scoped="" ref="0xb7121bf0"/>
        <function-ref name="toggle" scoped="" ref="0xb7121cd0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7121db0"/>
        <function-ref name="get" scoped="" ref="0xb7121e90"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7120010"/>
        <function-ref name="set" scoped="" ref="0xb71200f0"/>
        <function-ref name="clr" scoped="" ref="0xb71201d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb711f3b0" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb711f3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb711f588"/>
        <function-ref name="isInput" scoped="" ref="0xb711f668"/>
        <function-ref name="toggle" scoped="" ref="0xb711f748"/>
        <function-ref name="isOutput" scoped="" ref="0xb711f828"/>
        <function-ref name="get" scoped="" ref="0xb711f908"/>
        <function-ref name="makeOutput" scoped="" ref="0xb711f9e8"/>
        <function-ref name="set" scoped="" ref="0xb711fac8"/>
        <function-ref name="clr" scoped="" ref="0xb711fba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb711ed70" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb711ed70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb711d010"/>
        <function-ref name="isInput" scoped="" ref="0xb711d0f0"/>
        <function-ref name="toggle" scoped="" ref="0xb711d1d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb711d2b0"/>
        <function-ref name="get" scoped="" ref="0xb711d390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb711d470"/>
        <function-ref name="set" scoped="" ref="0xb711d550"/>
        <function-ref name="clr" scoped="" ref="0xb711d630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb711c7f8" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb711c7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb711c9d0"/>
        <function-ref name="isInput" scoped="" ref="0xb711cab0"/>
        <function-ref name="toggle" scoped="" ref="0xb711cb90"/>
        <function-ref name="isOutput" scoped="" ref="0xb711cc70"/>
        <function-ref name="get" scoped="" ref="0xb711cd50"/>
        <function-ref name="makeOutput" scoped="" ref="0xb711ce30"/>
        <function-ref name="set" scoped="" ref="0xb711cf10"/>
        <function-ref name="clr" scoped="" ref="0xb711b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb711a228" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb711a228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb711a400"/>
        <function-ref name="isInput" scoped="" ref="0xb711a4e0"/>
        <function-ref name="toggle" scoped="" ref="0xb711a5c0"/>
        <function-ref name="isOutput" scoped="" ref="0xb711a6a0"/>
        <function-ref name="get" scoped="" ref="0xb711a780"/>
        <function-ref name="makeOutput" scoped="" ref="0xb711a860"/>
        <function-ref name="set" scoped="" ref="0xb711a940"/>
        <function-ref name="clr" scoped="" ref="0xb711aa20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7119c08" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7119c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7119de0"/>
        <function-ref name="isInput" scoped="" ref="0xb7119ec0"/>
        <function-ref name="toggle" scoped="" ref="0xb7118010"/>
        <function-ref name="isOutput" scoped="" ref="0xb71180f0"/>
        <function-ref name="get" scoped="" ref="0xb71181d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71182b0"/>
        <function-ref name="set" scoped="" ref="0xb7118390"/>
        <function-ref name="clr" scoped="" ref="0xb7118470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb71176c0" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb71176c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7117898"/>
        <function-ref name="isInput" scoped="" ref="0xb7117978"/>
        <function-ref name="toggle" scoped="" ref="0xb7117a58"/>
        <function-ref name="isOutput" scoped="" ref="0xb7117b38"/>
        <function-ref name="get" scoped="" ref="0xb7117c18"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7117cf8"/>
        <function-ref name="set" scoped="" ref="0xb7117dd8"/>
        <function-ref name="clr" scoped="" ref="0xb7117eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb71150b0" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb71150b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7115288"/>
        <function-ref name="isInput" scoped="" ref="0xb7115368"/>
        <function-ref name="toggle" scoped="" ref="0xb7115448"/>
        <function-ref name="isOutput" scoped="" ref="0xb7115528"/>
        <function-ref name="get" scoped="" ref="0xb7115608"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71156e8"/>
        <function-ref name="set" scoped="" ref="0xb71157c8"/>
        <function-ref name="clr" scoped="" ref="0xb71158a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0xb7a6e170" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0xb7a6e170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a6e348"/>
        <function-ref name="isInput" scoped="" ref="0xb7a6e428"/>
        <function-ref name="toggle" scoped="" ref="0xb7a6e508"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a6e5e8"/>
        <function-ref name="get" scoped="" ref="0xb7a6e6c8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a6e7a8"/>
        <function-ref name="set" scoped="" ref="0xb7a6e888"/>
        <function-ref name="clr" scoped="" ref="0xb7a6e968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0xb7a6de48" loc="49:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0xb7a6de48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a6c050"/>
        <function-ref name="isInput" scoped="" ref="0xb7a6c130"/>
        <function-ref name="toggle" scoped="" ref="0xb7a6c210"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a6c2f0"/>
        <function-ref name="get" scoped="" ref="0xb7a6c3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a6c4b0"/>
        <function-ref name="set" scoped="" ref="0xb7a6c590"/>
        <function-ref name="clr" scoped="" ref="0xb7a6c670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0xb7a71dc8" loc="44:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0xb7a71dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a6f010"/>
        <function-ref name="isInput" scoped="" ref="0xb7a6f0f0"/>
        <function-ref name="toggle" scoped="" ref="0xb7a6f1d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a6f2b0"/>
        <function-ref name="get" scoped="" ref="0xb7a6f390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a6f470"/>
        <function-ref name="set" scoped="" ref="0xb7a6f550"/>
        <function-ref name="clr" scoped="" ref="0xb7a6f630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0xb7a6eac8" loc="47:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0xb7a6eac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a6eca0"/>
        <function-ref name="isInput" scoped="" ref="0xb7a6ed80"/>
        <function-ref name="toggle" scoped="" ref="0xb7a6ee60"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a6d010"/>
        <function-ref name="get" scoped="" ref="0xb7a6d0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a6d1d0"/>
        <function-ref name="set" scoped="" ref="0xb7a6d2b0"/>
        <function-ref name="clr" scoped="" ref="0xb7a6d390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0xb7a6c7d0" loc="50:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0xb7a6c7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a6c9a8"/>
        <function-ref name="isInput" scoped="" ref="0xb7a6ca88"/>
        <function-ref name="toggle" scoped="" ref="0xb7a6cb68"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a6cc48"/>
        <function-ref name="get" scoped="" ref="0xb7a6cd28"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a6ce08"/>
        <function-ref name="set" scoped="" ref="0xb7a6cee8"/>
        <function-ref name="clr" scoped="" ref="0xb7a6b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0xb7a6f790" loc="45:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0xb7a6f790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a6f968"/>
        <function-ref name="isInput" scoped="" ref="0xb7a6fa48"/>
        <function-ref name="toggle" scoped="" ref="0xb7a6fb28"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a6fc08"/>
        <function-ref name="get" scoped="" ref="0xb7a6fce8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a6fdc8"/>
        <function-ref name="set" scoped="" ref="0xb7a6fea8"/>
        <function-ref name="clr" scoped="" ref="0xb7a6e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0xb7a6d4f0" loc="48:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0xb7a6d4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a6d6c8"/>
        <function-ref name="isInput" scoped="" ref="0xb7a6d7a8"/>
        <function-ref name="toggle" scoped="" ref="0xb7a6d888"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a6d968"/>
        <function-ref name="get" scoped="" ref="0xb7a6da48"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a6db28"/>
        <function-ref name="set" scoped="" ref="0xb7a6dc08"/>
        <function-ref name="clr" scoped="" ref="0xb7a6dce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0xb7a6b170" loc="51:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0xb7a6b170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a6b348"/>
        <function-ref name="isInput" scoped="" ref="0xb7a6b428"/>
        <function-ref name="toggle" scoped="" ref="0xb7a6b508"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a6b5e8"/>
        <function-ref name="get" scoped="" ref="0xb7a6b6c8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a6b7a8"/>
        <function-ref name="set" scoped="" ref="0xb7a6b888"/>
        <function-ref name="clr" scoped="" ref="0xb7a6b968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb70e8538" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb70e8538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb70e8710"/>
        <function-ref name="isInput" scoped="" ref="0xb70e87f0"/>
        <function-ref name="toggle" scoped="" ref="0xb70e88d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb70e89b0"/>
        <function-ref name="get" scoped="" ref="0xb70e8a90"/>
        <function-ref name="makeOutput" scoped="" ref="0xb70e8b70"/>
        <function-ref name="set" scoped="" ref="0xb70e8c50"/>
        <function-ref name="clr" scoped="" ref="0xb70e8d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb70e6010" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb70e6010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb70e61e8"/>
        <function-ref name="isInput" scoped="" ref="0xb70e62c8"/>
        <function-ref name="toggle" scoped="" ref="0xb70e63a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb70e6488"/>
        <function-ref name="get" scoped="" ref="0xb70e6568"/>
        <function-ref name="makeOutput" scoped="" ref="0xb70e6648"/>
        <function-ref name="set" scoped="" ref="0xb70e6728"/>
        <function-ref name="clr" scoped="" ref="0xb70e6808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb70e59e8" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb70e59e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb70e5bc0"/>
        <function-ref name="isInput" scoped="" ref="0xb70e5ca0"/>
        <function-ref name="toggle" scoped="" ref="0xb70e5d80"/>
        <function-ref name="isOutput" scoped="" ref="0xb70e5e60"/>
        <function-ref name="get" scoped="" ref="0xb70e4010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb70e40f0"/>
        <function-ref name="set" scoped="" ref="0xb70e41d0"/>
        <function-ref name="clr" scoped="" ref="0xb70e42b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb70e3538" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb70e3538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb70e3710"/>
        <function-ref name="isInput" scoped="" ref="0xb70e37f0"/>
        <function-ref name="toggle" scoped="" ref="0xb70e38d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb70e39b0"/>
        <function-ref name="get" scoped="" ref="0xb70e3a90"/>
        <function-ref name="makeOutput" scoped="" ref="0xb70e3b70"/>
        <function-ref name="set" scoped="" ref="0xb70e3c50"/>
        <function-ref name="clr" scoped="" ref="0xb70e3d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb70e1010" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb70e1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb70e11e8"/>
        <function-ref name="isInput" scoped="" ref="0xb70e12c8"/>
        <function-ref name="toggle" scoped="" ref="0xb70e13a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb70e1488"/>
        <function-ref name="get" scoped="" ref="0xb70e1568"/>
        <function-ref name="makeOutput" scoped="" ref="0xb70e1648"/>
        <function-ref name="set" scoped="" ref="0xb70e1728"/>
        <function-ref name="clr" scoped="" ref="0xb70e1808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb70e09e8" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb70e09e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb70e0bc0"/>
        <function-ref name="isInput" scoped="" ref="0xb70e0ca0"/>
        <function-ref name="toggle" scoped="" ref="0xb70e0d80"/>
        <function-ref name="isOutput" scoped="" ref="0xb70e0e60"/>
        <function-ref name="get" scoped="" ref="0xb70df010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb70df0f0"/>
        <function-ref name="set" scoped="" ref="0xb70df1d0"/>
        <function-ref name="clr" scoped="" ref="0xb70df2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb70de538" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb70de538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb70de710"/>
        <function-ref name="isInput" scoped="" ref="0xb70de7f0"/>
        <function-ref name="toggle" scoped="" ref="0xb70de8d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb70de9b0"/>
        <function-ref name="get" scoped="" ref="0xb70dea90"/>
        <function-ref name="makeOutput" scoped="" ref="0xb70deb70"/>
        <function-ref name="set" scoped="" ref="0xb70dec50"/>
        <function-ref name="clr" scoped="" ref="0xb70ded30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb70dc010" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb70dc010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb70dc1e8"/>
        <function-ref name="isInput" scoped="" ref="0xb70dc2c8"/>
        <function-ref name="toggle" scoped="" ref="0xb70dc3a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb70dc488"/>
        <function-ref name="get" scoped="" ref="0xb70dc568"/>
        <function-ref name="makeOutput" scoped="" ref="0xb70dc648"/>
        <function-ref name="set" scoped="" ref="0xb70dc728"/>
        <function-ref name="clr" scoped="" ref="0xb70dc808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0xb7a679e8" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0xb7a679e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a67bc0"/>
        <function-ref name="isInput" scoped="" ref="0xb7a67ca0"/>
        <function-ref name="toggle" scoped="" ref="0xb7a67d80"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a67e60"/>
        <function-ref name="get" scoped="" ref="0xb7a66010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a660f0"/>
        <function-ref name="set" scoped="" ref="0xb7a661d0"/>
        <function-ref name="clr" scoped="" ref="0xb7a662b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0xb7a64790" loc="49:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0xb7a64790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a64968"/>
        <function-ref name="isInput" scoped="" ref="0xb7a64a48"/>
        <function-ref name="toggle" scoped="" ref="0xb7a64b28"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a64c08"/>
        <function-ref name="get" scoped="" ref="0xb7a64ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a64dc8"/>
        <function-ref name="set" scoped="" ref="0xb7a64ea8"/>
        <function-ref name="clr" scoped="" ref="0xb7a63010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0xb7a686f8" loc="44:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0xb7a686f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a688d0"/>
        <function-ref name="isInput" scoped="" ref="0xb7a689b0"/>
        <function-ref name="toggle" scoped="" ref="0xb7a68a90"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a68b70"/>
        <function-ref name="get" scoped="" ref="0xb7a68c50"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a68d30"/>
        <function-ref name="set" scoped="" ref="0xb7a68e10"/>
        <function-ref name="clr" scoped="" ref="0xb7a68ef0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0xb7a66410" loc="47:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0xb7a66410"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a665e8"/>
        <function-ref name="isInput" scoped="" ref="0xb7a666c8"/>
        <function-ref name="toggle" scoped="" ref="0xb7a667a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a66888"/>
        <function-ref name="get" scoped="" ref="0xb7a66968"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a66a48"/>
        <function-ref name="set" scoped="" ref="0xb7a66b28"/>
        <function-ref name="clr" scoped="" ref="0xb7a66c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0xb7a63170" loc="50:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0xb7a63170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a63348"/>
        <function-ref name="isInput" scoped="" ref="0xb7a63428"/>
        <function-ref name="toggle" scoped="" ref="0xb7a63508"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a635e8"/>
        <function-ref name="get" scoped="" ref="0xb7a636c8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a637a8"/>
        <function-ref name="set" scoped="" ref="0xb7a63888"/>
        <function-ref name="clr" scoped="" ref="0xb7a63968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0xb7a67090" loc="45:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0xb7a67090"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a67268"/>
        <function-ref name="isInput" scoped="" ref="0xb7a67348"/>
        <function-ref name="toggle" scoped="" ref="0xb7a67428"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a67508"/>
        <function-ref name="get" scoped="" ref="0xb7a675e8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a676c8"/>
        <function-ref name="set" scoped="" ref="0xb7a677a8"/>
        <function-ref name="clr" scoped="" ref="0xb7a67888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0xb7a66d68" loc="48:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0xb7a66d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a64010"/>
        <function-ref name="isInput" scoped="" ref="0xb7a640f0"/>
        <function-ref name="toggle" scoped="" ref="0xb7a641d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a642b0"/>
        <function-ref name="get" scoped="" ref="0xb7a64390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a64470"/>
        <function-ref name="set" scoped="" ref="0xb7a64550"/>
        <function-ref name="clr" scoped="" ref="0xb7a64630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0xb7a63ac8" loc="51:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0xb7a63ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a63ca0"/>
        <function-ref name="isInput" scoped="" ref="0xb7a63d80"/>
        <function-ref name="toggle" scoped="" ref="0xb7a63e60"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a62010"/>
        <function-ref name="get" scoped="" ref="0xb7a620f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a621d0"/>
        <function-ref name="set" scoped="" ref="0xb7a622b0"/>
        <function-ref name="clr" scoped="" ref="0xb7a62390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb70b0418" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb70b0418"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb70b05f0"/>
        <function-ref name="isInput" scoped="" ref="0xb70b06d0"/>
        <function-ref name="toggle" scoped="" ref="0xb70b07b0"/>
        <function-ref name="isOutput" scoped="" ref="0xb70b0890"/>
        <function-ref name="get" scoped="" ref="0xb70b0970"/>
        <function-ref name="makeOutput" scoped="" ref="0xb70b0a50"/>
        <function-ref name="set" scoped="" ref="0xb70b0b30"/>
        <function-ref name="clr" scoped="" ref="0xb70b0c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb70afde0" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb70afde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb70ae010"/>
        <function-ref name="isInput" scoped="" ref="0xb70ae0f0"/>
        <function-ref name="toggle" scoped="" ref="0xb70ae1d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb70ae2b0"/>
        <function-ref name="get" scoped="" ref="0xb70ae390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb70ae470"/>
        <function-ref name="set" scoped="" ref="0xb70ae550"/>
        <function-ref name="clr" scoped="" ref="0xb70ae630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb70ad7f8" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb70ad7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb70ad9d0"/>
        <function-ref name="isInput" scoped="" ref="0xb70adab0"/>
        <function-ref name="toggle" scoped="" ref="0xb70adb90"/>
        <function-ref name="isOutput" scoped="" ref="0xb70adc70"/>
        <function-ref name="get" scoped="" ref="0xb70add50"/>
        <function-ref name="makeOutput" scoped="" ref="0xb70ade30"/>
        <function-ref name="set" scoped="" ref="0xb70adf10"/>
        <function-ref name="clr" scoped="" ref="0xb70ac010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb70ab228" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb70ab228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb70ab400"/>
        <function-ref name="isInput" scoped="" ref="0xb70ab4e0"/>
        <function-ref name="toggle" scoped="" ref="0xb70ab5c0"/>
        <function-ref name="isOutput" scoped="" ref="0xb70ab6a0"/>
        <function-ref name="get" scoped="" ref="0xb70ab780"/>
        <function-ref name="makeOutput" scoped="" ref="0xb70ab860"/>
        <function-ref name="set" scoped="" ref="0xb70ab940"/>
        <function-ref name="clr" scoped="" ref="0xb70aba20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb70aac08" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb70aac08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb70aade0"/>
        <function-ref name="isInput" scoped="" ref="0xb70aaec0"/>
        <function-ref name="toggle" scoped="" ref="0xb70a9010"/>
        <function-ref name="isOutput" scoped="" ref="0xb70a90f0"/>
        <function-ref name="get" scoped="" ref="0xb70a91d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb70a92b0"/>
        <function-ref name="set" scoped="" ref="0xb70a9390"/>
        <function-ref name="clr" scoped="" ref="0xb70a9470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb70a86c0" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb70a86c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb70a8898"/>
        <function-ref name="isInput" scoped="" ref="0xb70a8978"/>
        <function-ref name="toggle" scoped="" ref="0xb70a8a58"/>
        <function-ref name="isOutput" scoped="" ref="0xb70a8b38"/>
        <function-ref name="get" scoped="" ref="0xb70a8c18"/>
        <function-ref name="makeOutput" scoped="" ref="0xb70a8cf8"/>
        <function-ref name="set" scoped="" ref="0xb70a8dd8"/>
        <function-ref name="clr" scoped="" ref="0xb70a8eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb70a60b0" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb70a60b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb70a6288"/>
        <function-ref name="isInput" scoped="" ref="0xb70a6368"/>
        <function-ref name="toggle" scoped="" ref="0xb70a6448"/>
        <function-ref name="isOutput" scoped="" ref="0xb70a6528"/>
        <function-ref name="get" scoped="" ref="0xb70a6608"/>
        <function-ref name="makeOutput" scoped="" ref="0xb70a66e8"/>
        <function-ref name="set" scoped="" ref="0xb70a67c8"/>
        <function-ref name="clr" scoped="" ref="0xb70a68a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb70a4a88" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb70a4a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb70a4c60"/>
        <function-ref name="isInput" scoped="" ref="0xb70a4d40"/>
        <function-ref name="toggle" scoped="" ref="0xb70a4e20"/>
        <function-ref name="isOutput" scoped="" ref="0xb70a4f00"/>
        <function-ref name="get" scoped="" ref="0xb70a3010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb70a30f0"/>
        <function-ref name="set" scoped="" ref="0xb70a31d0"/>
        <function-ref name="clr" scoped="" ref="0xb70a32b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0xb7a5e330" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0xb7a5e330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a5e508"/>
        <function-ref name="isInput" scoped="" ref="0xb7a5e5e8"/>
        <function-ref name="toggle" scoped="" ref="0xb7a5e6c8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a5e7a8"/>
        <function-ref name="get" scoped="" ref="0xb7a5e888"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a5e968"/>
        <function-ref name="set" scoped="" ref="0xb7a5ea48"/>
        <function-ref name="clr" scoped="" ref="0xb7a5eb28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0xb7a5c030" loc="49:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0xb7a5c030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a5c208"/>
        <function-ref name="isInput" scoped="" ref="0xb7a5c2e8"/>
        <function-ref name="toggle" scoped="" ref="0xb7a5c3c8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a5c4a8"/>
        <function-ref name="get" scoped="" ref="0xb7a5c588"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a5c668"/>
        <function-ref name="set" scoped="" ref="0xb7a5c748"/>
        <function-ref name="clr" scoped="" ref="0xb7a5c828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0xb7a5f010" loc="44:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0xb7a5f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a5f1e8"/>
        <function-ref name="isInput" scoped="" ref="0xb7a5f2c8"/>
        <function-ref name="toggle" scoped="" ref="0xb7a5f3a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a5f488"/>
        <function-ref name="get" scoped="" ref="0xb7a5f568"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a5f648"/>
        <function-ref name="set" scoped="" ref="0xb7a5f728"/>
        <function-ref name="clr" scoped="" ref="0xb7a5f808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0xb7a5ec88" loc="47:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0xb7a5ec88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a5ee60"/>
        <function-ref name="isInput" scoped="" ref="0xb7a5d010"/>
        <function-ref name="toggle" scoped="" ref="0xb7a5d0f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a5d1d0"/>
        <function-ref name="get" scoped="" ref="0xb7a5d2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a5d390"/>
        <function-ref name="set" scoped="" ref="0xb7a5d470"/>
        <function-ref name="clr" scoped="" ref="0xb7a5d550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0xb7a5c988" loc="50:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0xb7a5c988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a5cb60"/>
        <function-ref name="isInput" scoped="" ref="0xb7a5cc40"/>
        <function-ref name="toggle" scoped="" ref="0xb7a5cd20"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a5ce00"/>
        <function-ref name="get" scoped="" ref="0xb7a5cee0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a5b010"/>
        <function-ref name="set" scoped="" ref="0xb7a5b0f0"/>
        <function-ref name="clr" scoped="" ref="0xb7a5b1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0xb7a5f968" loc="45:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0xb7a5f968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a5fb40"/>
        <function-ref name="isInput" scoped="" ref="0xb7a5fc20"/>
        <function-ref name="toggle" scoped="" ref="0xb7a5fd00"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a5fde0"/>
        <function-ref name="get" scoped="" ref="0xb7a5fec0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a5e010"/>
        <function-ref name="set" scoped="" ref="0xb7a5e0f0"/>
        <function-ref name="clr" scoped="" ref="0xb7a5e1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0xb7a5d6b0" loc="48:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0xb7a5d6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a5d888"/>
        <function-ref name="isInput" scoped="" ref="0xb7a5d968"/>
        <function-ref name="toggle" scoped="" ref="0xb7a5da48"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a5db28"/>
        <function-ref name="get" scoped="" ref="0xb7a5dc08"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a5dce8"/>
        <function-ref name="set" scoped="" ref="0xb7a5ddc8"/>
        <function-ref name="clr" scoped="" ref="0xb7a5dea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0xb7a5b330" loc="51:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0xb7a5b330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a5b508"/>
        <function-ref name="isInput" scoped="" ref="0xb7a5b5e8"/>
        <function-ref name="toggle" scoped="" ref="0xb7a5b6c8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a5b7a8"/>
        <function-ref name="get" scoped="" ref="0xb7a5b888"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a5b968"/>
        <function-ref name="set" scoped="" ref="0xb7a5ba48"/>
        <function-ref name="clr" scoped="" ref="0xb7a5bb28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb707bde8" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb707bde8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7077010"/>
        <function-ref name="isInput" scoped="" ref="0xb70770f0"/>
        <function-ref name="toggle" scoped="" ref="0xb70771d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb70772b0"/>
        <function-ref name="get" scoped="" ref="0xb7077390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7077470"/>
        <function-ref name="set" scoped="" ref="0xb7077550"/>
        <function-ref name="clr" scoped="" ref="0xb7077630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb70767f8" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb70767f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb70769d0"/>
        <function-ref name="isInput" scoped="" ref="0xb7076ab0"/>
        <function-ref name="toggle" scoped="" ref="0xb7076b90"/>
        <function-ref name="isOutput" scoped="" ref="0xb7076c70"/>
        <function-ref name="get" scoped="" ref="0xb7076d50"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7076e30"/>
        <function-ref name="set" scoped="" ref="0xb7076f10"/>
        <function-ref name="clr" scoped="" ref="0xb7075010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7074228" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7074228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7074400"/>
        <function-ref name="isInput" scoped="" ref="0xb70744e0"/>
        <function-ref name="toggle" scoped="" ref="0xb70745c0"/>
        <function-ref name="isOutput" scoped="" ref="0xb70746a0"/>
        <function-ref name="get" scoped="" ref="0xb7074780"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7074860"/>
        <function-ref name="set" scoped="" ref="0xb7074940"/>
        <function-ref name="clr" scoped="" ref="0xb7074a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7073c08" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7073c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7073de0"/>
        <function-ref name="isInput" scoped="" ref="0xb7073ec0"/>
        <function-ref name="toggle" scoped="" ref="0xb7072010"/>
        <function-ref name="isOutput" scoped="" ref="0xb70720f0"/>
        <function-ref name="get" scoped="" ref="0xb70721d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb70722b0"/>
        <function-ref name="set" scoped="" ref="0xb7072390"/>
        <function-ref name="clr" scoped="" ref="0xb7072470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb70716c0" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb70716c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7071898"/>
        <function-ref name="isInput" scoped="" ref="0xb7071978"/>
        <function-ref name="toggle" scoped="" ref="0xb7071a58"/>
        <function-ref name="isOutput" scoped="" ref="0xb7071b38"/>
        <function-ref name="get" scoped="" ref="0xb7071c18"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7071cf8"/>
        <function-ref name="set" scoped="" ref="0xb7071dd8"/>
        <function-ref name="clr" scoped="" ref="0xb7071eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb706f0b0" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb706f0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb706f288"/>
        <function-ref name="isInput" scoped="" ref="0xb706f368"/>
        <function-ref name="toggle" scoped="" ref="0xb706f448"/>
        <function-ref name="isOutput" scoped="" ref="0xb706f528"/>
        <function-ref name="get" scoped="" ref="0xb706f608"/>
        <function-ref name="makeOutput" scoped="" ref="0xb706f6e8"/>
        <function-ref name="set" scoped="" ref="0xb706f7c8"/>
        <function-ref name="clr" scoped="" ref="0xb706f8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb706ea88" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb706ea88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb706ec60"/>
        <function-ref name="isInput" scoped="" ref="0xb706ed40"/>
        <function-ref name="toggle" scoped="" ref="0xb706ee20"/>
        <function-ref name="isOutput" scoped="" ref="0xb706ef00"/>
        <function-ref name="get" scoped="" ref="0xb706d010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb706d0f0"/>
        <function-ref name="set" scoped="" ref="0xb706d1d0"/>
        <function-ref name="clr" scoped="" ref="0xb706d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb706c538" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb706c538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb706c710"/>
        <function-ref name="isInput" scoped="" ref="0xb706c7f0"/>
        <function-ref name="toggle" scoped="" ref="0xb706c8d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb706c9b0"/>
        <function-ref name="get" scoped="" ref="0xb706ca90"/>
        <function-ref name="makeOutput" scoped="" ref="0xb706cb70"/>
        <function-ref name="set" scoped="" ref="0xb706cc50"/>
        <function-ref name="clr" scoped="" ref="0xb706cd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7a572d0" loc="47:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7a572d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a574a8"/>
        <function-ref name="isInput" scoped="" ref="0xb7a57588"/>
        <function-ref name="toggle" scoped="" ref="0xb7a57668"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a57748"/>
        <function-ref name="get" scoped="" ref="0xb7a57828"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a57908"/>
        <function-ref name="set" scoped="" ref="0xb7a579e8"/>
        <function-ref name="clr" scoped="" ref="0xb7a57ac8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7a488a0" loc="47:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7a488a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a48a78"/>
        <function-ref name="isInput" scoped="" ref="0xb7a48b58"/>
        <function-ref name="toggle" scoped="" ref="0xb7a48c38"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a48d18"/>
        <function-ref name="get" scoped="" ref="0xb7a48df8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a48ed8"/>
        <function-ref name="set" scoped="" ref="0xb7a47010"/>
        <function-ref name="clr" scoped="" ref="0xb7a470f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7a46ec0" loc="47:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7a46ec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a450c0"/>
        <function-ref name="isInput" scoped="" ref="0xb7a451a0"/>
        <function-ref name="toggle" scoped="" ref="0xb7a45280"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a45360"/>
        <function-ref name="get" scoped="" ref="0xb7a45440"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a45520"/>
        <function-ref name="set" scoped="" ref="0xb7a45600"/>
        <function-ref name="clr" scoped="" ref="0xb7a456e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7a42538" loc="47:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7a42538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a42710"/>
        <function-ref name="isInput" scoped="" ref="0xb7a427f0"/>
        <function-ref name="toggle" scoped="" ref="0xb7a428d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a429b0"/>
        <function-ref name="get" scoped="" ref="0xb7a42a90"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a42b70"/>
        <function-ref name="set" scoped="" ref="0xb7a42c50"/>
        <function-ref name="clr" scoped="" ref="0xb7a42d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7a40b68" loc="47:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7a40b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a40d40"/>
        <function-ref name="isInput" scoped="" ref="0xb7a40e20"/>
        <function-ref name="toggle" scoped="" ref="0xb7a40f00"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a3f010"/>
        <function-ref name="get" scoped="" ref="0xb7a3f0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a3f1d0"/>
        <function-ref name="set" scoped="" ref="0xb7a3f2b0"/>
        <function-ref name="clr" scoped="" ref="0xb7a3f390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7a3d228" loc="47:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7a3d228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a3d400"/>
        <function-ref name="isInput" scoped="" ref="0xb7a3d4e0"/>
        <function-ref name="toggle" scoped="" ref="0xb7a3d5c0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a3d6a0"/>
        <function-ref name="get" scoped="" ref="0xb7a3d780"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a3d860"/>
        <function-ref name="set" scoped="" ref="0xb7a3d940"/>
        <function-ref name="clr" scoped="" ref="0xb7a3da20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7a3a8f0" loc="47:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7a3a8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a3aac8"/>
        <function-ref name="isInput" scoped="" ref="0xb7a3aba8"/>
        <function-ref name="toggle" scoped="" ref="0xb7a3ac88"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a3ad68"/>
        <function-ref name="get" scoped="" ref="0xb7a3ae48"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a3af28"/>
        <function-ref name="set" scoped="" ref="0xb7a39018"/>
        <function-ref name="clr" scoped="" ref="0xb7a390f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7a38ec0" loc="47:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7a38ec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a370c0"/>
        <function-ref name="isInput" scoped="" ref="0xb7a371a0"/>
        <function-ref name="toggle" scoped="" ref="0xb7a37280"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a37360"/>
        <function-ref name="get" scoped="" ref="0xb7a37440"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a37520"/>
        <function-ref name="set" scoped="" ref="0xb7a37600"/>
        <function-ref name="clr" scoped="" ref="0xb7a376e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7a343e8" loc="47:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7a343e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a345c0"/>
        <function-ref name="isInput" scoped="" ref="0xb7a346a0"/>
        <function-ref name="toggle" scoped="" ref="0xb7a34780"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a34860"/>
        <function-ref name="get" scoped="" ref="0xb7a34940"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a34a20"/>
        <function-ref name="set" scoped="" ref="0xb7a34b00"/>
        <function-ref name="clr" scoped="" ref="0xb7a34be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7a328f0" loc="47:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7a328f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a32ac8"/>
        <function-ref name="isInput" scoped="" ref="0xb7a32ba8"/>
        <function-ref name="toggle" scoped="" ref="0xb7a32c88"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a32d68"/>
        <function-ref name="get" scoped="" ref="0xb7a32e48"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a32f28"/>
        <function-ref name="set" scoped="" ref="0xb7a31018"/>
        <function-ref name="clr" scoped="" ref="0xb7a310f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7a30dd8" loc="47:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7a30dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a2f010"/>
        <function-ref name="isInput" scoped="" ref="0xb7a2f0f0"/>
        <function-ref name="toggle" scoped="" ref="0xb7a2f1d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a2f2b0"/>
        <function-ref name="get" scoped="" ref="0xb7a2f390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a2f470"/>
        <function-ref name="set" scoped="" ref="0xb7a2f550"/>
        <function-ref name="clr" scoped="" ref="0xb7a2f630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7a2c3b0" loc="47:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7a2c3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a2c588"/>
        <function-ref name="isInput" scoped="" ref="0xb7a2c668"/>
        <function-ref name="toggle" scoped="" ref="0xb7a2c748"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a2c828"/>
        <function-ref name="get" scoped="" ref="0xb7a2c908"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a2c9e8"/>
        <function-ref name="set" scoped="" ref="0xb7a2cac8"/>
        <function-ref name="clr" scoped="" ref="0xb7a2cba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7a2a8a0" loc="47:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7a2a8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a2aa78"/>
        <function-ref name="isInput" scoped="" ref="0xb7a2ab58"/>
        <function-ref name="toggle" scoped="" ref="0xb7a2ac38"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a2ad18"/>
        <function-ref name="get" scoped="" ref="0xb7a2adf8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a2aed8"/>
        <function-ref name="set" scoped="" ref="0xb7a29010"/>
        <function-ref name="clr" scoped="" ref="0xb7a290f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb7a0b858" loc="27:/opt/tinyos-main-2.1.2/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb7a0b858"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0xb7b8f7d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0xb7b8f7d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7a0ba30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0xb7a0bc08" loc="28:/opt/tinyos-main-2.1.2/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0xb7a0bc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0xb7a0bde0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0xb7a0bec0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0xb7a0a010"/>
        <function-ref name="actualMicro" scoped="" ref="0xb7a0a0f0"/>
        <function-ref name="adcPrescaler" scoped="" ref="0xb7a0a1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0xb79f8010" loc="60:/opt/tinyos-main-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0xb79f8010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb79f81e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0xb79f91c8" loc="57:/opt/tinyos-main-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0xb79f91c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0xb79f93a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0xb79f9b28" loc="59:/opt/tinyos-main-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0xb79f9b28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb79f9d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0xb79f9560" loc="58:/opt/tinyos-main-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0xb79f9560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb79f9738"/>
        <function-ref name="taskLoop" scoped="" ref="0xb79f9818"/>
        <function-ref name="runNextTask" scoped="" ref="0xb79f98f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0xb7b86600" loc="48:/opt/tinyos-main-2.1.2/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0xb7b86600"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb7b867d8"/>
        <function-ref name="runTask" scoped="" ref="0xb7b868b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0xb7b8ced8" loc="47:/opt/tinyos-main-2.1.2/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0xb7b8ced8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7b8e0c0"/>
        <function-ref name="taskLoop" scoped="" ref="0xb7b8e1a0"/>
        <function-ref name="runNextTask" scoped="" ref="0xb7b8e280"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0xb7b12d30" loc="56:/opt/tinyos-main-2.1.2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0xb7b12d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb7b12f08"/>
        <function-ref name="runTask" scoped="" ref="0xb7b10010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0xb7b109c0" loc="57:/opt/tinyos-main-2.1.2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0xb7b109c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0xb7b10b98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0xb7b124f8" loc="55:/opt/tinyos-main-2.1.2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0xb7b124f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7b126d0"/>
        <function-ref name="taskLoop" scoped="" ref="0xb7b127b0"/>
        <function-ref name="runNextTask" scoped="" ref="0xb7b12890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0xb7afdf18" loc="54:/opt/tinyos-main-2.1.2/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0xb7afdf18"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0xb7aff108"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0xb7b00438" loc="50:/opt/tinyos-main-2.1.2/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0xb7b00438"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0xb7b00610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0xb7afd148" loc="51:/opt/tinyos-main-2.1.2/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0xb7afd148"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0xb7afd320"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMControl" ref="0xb79ef338" loc="14:projectSinkC.nc">
      <component-ref qname="projectSinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMControl" scoped="" ref="0xb79ef338"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb79ef510"/>
        <function-ref name="stopDone" scoped="" ref="0xb79ef5f0"/>
        <function-ref name="start" scoped="" ref="0xb79ef6d0"/>
        <function-ref name="stop" scoped="" ref="0xb79ef7b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0xb79faeb0" loc="11:projectSinkC.nc">
      <component-ref qname="projectSinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0xb79faeb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0xb79f30c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0xb79b8380" loc="15:projectSinkC.nc">
      <component-ref qname="projectSinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xb79b8380"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb79b8558"/>
        <function-ref name="getPayload" scoped="" ref="0xb79b8638"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb79b8718"/>
        <function-ref name="cancel" scoped="" ref="0xb79b87f8"/>
        <function-ref name="sendDone" scoped="" ref="0xb79b88d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0xb79b3608" loc="16:projectSinkC.nc">
      <component-ref qname="projectSinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb79b3608"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb79b37e0"/>
        <function-ref name="payloadLength" scoped="" ref="0xb79b38c0"/>
        <function-ref name="getPayload" scoped="" ref="0xb79b39a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb79b3a80"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb79b3b60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DataTimer" ref="0xb799f010" loc="22:projectSinkC.nc">
      <component-ref qname="projectSinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataTimer" scoped="" ref="0xb799f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7b37900"/>
            <typename><typedef-ref name="TMilli" ref="0xb7b37ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb799db00"/>
        <function-ref name="fired" scoped="" ref="0xb799fd90"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb799d4c0"/>
        <function-ref name="isOneShot" scoped="" ref="0xb799d268"/>
        <function-ref name="getdt" scoped="" ref="0xb799c010"/>
        <function-ref name="gett0" scoped="" ref="0xb799dd58"/>
        <function-ref name="isRunning" scoped="" ref="0xb799d010"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb799f638"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb799d7e0"/>
        <function-ref name="startOneShot" scoped="" ref="0xb799f8b8"/>
        <function-ref name="stop" scoped="" ref="0xb799fb38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Read" ref="0xb7996ad0" loc="29:projectSinkC.nc">
      <component-ref qname="projectSinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0xb7996ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7ed71e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7998108"/>
        <function-ref name="readDone" scoped="" ref="0xb7998360"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0xb79a7d50" loc="18:projectSinkC.nc">
      <component-ref qname="projectSinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb79a7d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb79a7f28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ForwardingTimer" ref="0xb799c3e0" loc="23:projectSinkC.nc">
      <component-ref qname="projectSinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ForwardingTimer" scoped="" ref="0xb799c3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7b37900"/>
            <typename><typedef-ref name="TMilli" ref="0xb7b37ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb799bec8"/>
        <function-ref name="fired" scoped="" ref="0xb799b180"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb799b888"/>
        <function-ref name="isOneShot" scoped="" ref="0xb799b630"/>
        <function-ref name="getdt" scoped="" ref="0xb799a3a8"/>
        <function-ref name="gett0" scoped="" ref="0xb799a150"/>
        <function-ref name="isRunning" scoped="" ref="0xb799b3d8"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb799ca08"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb799bba8"/>
        <function-ref name="startOneShot" scoped="" ref="0xb799cc88"/>
        <function-ref name="stop" scoped="" ref="0xb799cf08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TresholdTimer" ref="0xb79a1c50" loc="21:projectSinkC.nc">
      <component-ref qname="projectSinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TresholdTimer" scoped="" ref="0xb79a1c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7b37900"/>
            <typename><typedef-ref name="TMilli" ref="0xb7b37ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb79a6790"/>
        <function-ref name="fired" scoped="" ref="0xb79a8a20"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb79a6150"/>
        <function-ref name="isOneShot" scoped="" ref="0xb79a8ed0"/>
        <function-ref name="getdt" scoped="" ref="0xb79a6c40"/>
        <function-ref name="gett0" scoped="" ref="0xb79a69e8"/>
        <function-ref name="isRunning" scoped="" ref="0xb79a8c78"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb79a82c8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb79a6470"/>
        <function-ref name="startOneShot" scoped="" ref="0xb79a8548"/>
        <function-ref name="stop" scoped="" ref="0xb79a87c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0xb79aa3b8" loc="17:projectSinkC.nc">
      <component-ref qname="projectSinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb79aa3b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb79aa590"/>
        <function-ref name="source" scoped="" ref="0xb79aa670"/>
        <function-ref name="address" scoped="" ref="0xb79aa750"/>
        <function-ref name="destination" scoped="" ref="0xb79aa830"/>
        <function-ref name="setSource" scoped="" ref="0xb79aa910"/>
        <function-ref name="setDestination" scoped="" ref="0xb79aa9f0"/>
        <function-ref name="type" scoped="" ref="0xb79aaad0"/>
        <function-ref name="setType" scoped="" ref="0xb79aabb0"/>
        <function-ref name="isForMe" scoped="" ref="0xb79aac90"/>
        <function-ref name="setGroup" scoped="" ref="0xb79aad70"/>
        <function-ref name="localGroup" scoped="" ref="0xb79aae50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb797fdf0" loc="45:/opt/tinyos-main-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="projectSinkAppC.Timer1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb797fdf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7b37900"/>
            <typename><typedef-ref name="TMilli" ref="0xb7b37ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb7880900"/>
        <function-ref name="fired" scoped="" ref="0xb797eba0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb78802c0"/>
        <function-ref name="isOneShot" scoped="" ref="0xb7880068"/>
        <function-ref name="getdt" scoped="" ref="0xb7880db0"/>
        <function-ref name="gett0" scoped="" ref="0xb7880b58"/>
        <function-ref name="isRunning" scoped="" ref="0xb797edf8"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb797e448"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb78805e0"/>
        <function-ref name="startOneShot" scoped="" ref="0xb797e6c8"/>
        <function-ref name="stop" scoped="" ref="0xb797e948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0xb79783f0" loc="49:/opt/tinyos-main-2.1.2/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0xb79783f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7b37900"/>
            <typename><typedef-ref name="TMilli" ref="0xb7b37ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb7976ed0"/>
        <function-ref name="fired" scoped="" ref="0xb7976188"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb7976890"/>
        <function-ref name="isOneShot" scoped="" ref="0xb7976638"/>
        <function-ref name="getdt" scoped="" ref="0xb79753a8"/>
        <function-ref name="gett0" scoped="" ref="0xb7975150"/>
        <function-ref name="isRunning" scoped="" ref="0xb79763e0"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb7978a18"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb7976bb0"/>
        <function-ref name="startOneShot" scoped="" ref="0xb7978c98"/>
        <function-ref name="stop" scoped="" ref="0xb7978f18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0xb79723f8" loc="46:/opt/tinyos-main-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0xb79723f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7b37900"/>
            <typename><typedef-ref name="TMilli" ref="0xb7b37ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb7970ed8"/>
        <function-ref name="fired" scoped="" ref="0xb7970190"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb7970898"/>
        <function-ref name="isOneShot" scoped="" ref="0xb7970640"/>
        <function-ref name="getdt" scoped="" ref="0xb796f3a8"/>
        <function-ref name="gett0" scoped="" ref="0xb796f150"/>
        <function-ref name="isRunning" scoped="" ref="0xb79703e8"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb7972a20"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb7970bb8"/>
        <function-ref name="startOneShot" scoped="" ref="0xb7972ca0"/>
        <function-ref name="stop" scoped="" ref="0xb7972f20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0xb796c3c8" loc="47:/opt/tinyos-main-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0xb796c3c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7b37900"/>
            <typename><typedef-ref name="TMilli" ref="0xb7b37ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb796ca10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb7975c30" loc="45:/opt/tinyos-main-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb7975c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7975e08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0xb7960da0" loc="29:/opt/tinyos-main-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0xb7960da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7b37900"/>
            <typename><typedef-ref name="TMilli" ref="0xb7b37ac8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7ed7848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb7963508"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb79639f8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb7963780"/>
        <function-ref name="overflow" scoped="" ref="0xb7963c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb796da60" loc="27:/opt/tinyos-main-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb796da60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb796dc38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0xb79691c8" loc="28:/opt/tinyos-main-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0xb79691c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7b37900"/>
            <typename><typedef-ref name="TMilli" ref="0xb7b37ac8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7ed7848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb7964690"/>
        <function-ref name="fired" scoped="" ref="0xb7969e30"/>
        <function-ref name="startAt" scoped="" ref="0xb7964350"/>
        <function-ref name="isRunning" scoped="" ref="0xb79640d8"/>
        <function-ref name="getAlarm" scoped="" ref="0xb7964908"/>
        <function-ref name="start" scoped="" ref="0xb7969918"/>
        <function-ref name="stop" scoped="" ref="0xb7969bb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0xb78d50c0" loc="26:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xb78d50c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7b37900"/>
            <typename><typedef-ref name="TMilli" ref="0xb7b37ac8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7ed7848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb78d45c8"/>
        <function-ref name="fired" scoped="" ref="0xb78d5d28"/>
        <function-ref name="startAt" scoped="" ref="0xb78d4288"/>
        <function-ref name="isRunning" scoped="" ref="0xb78d4010"/>
        <function-ref name="getAlarm" scoped="" ref="0xb78d4840"/>
        <function-ref name="start" scoped="" ref="0xb78d5810"/>
        <function-ref name="stop" scoped="" ref="0xb78d5ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb795dc78" loc="25:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb795dc78"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0xb7b8f5d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0xb7b8f5d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb795de50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0xb78d4b70" loc="27:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb78d4b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7b37900"/>
            <typename><typedef-ref name="TMilli" ref="0xb7b37ac8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7ed7848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb78d2308"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb78d27f8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb78d2580"/>
        <function-ref name="overflow" scoped="" ref="0xb78d2a70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0xb6ffb240" loc="31:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0xb6ffb240"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0xb6ffb418"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0xb6ffb4f8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0xb6ffb5d8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0xb6ffb6b8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0xb6ffb798"/>
        <function-ref name="setControl" scoped="" ref="0xb6ffb878"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0xb70022d0" loc="26:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xb70022d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7b37900"/>
            <typename><typedef-ref name="TMilli" ref="0xb7b37ac8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7ed7848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb7000840"/>
        <function-ref name="fired" scoped="" ref="0xb7000010"/>
        <function-ref name="startAt" scoped="" ref="0xb7000500"/>
        <function-ref name="isRunning" scoped="" ref="0xb7000288"/>
        <function-ref name="getAlarm" scoped="" ref="0xb7000ab8"/>
        <function-ref name="start" scoped="" ref="0xb7002a20"/>
        <function-ref name="stop" scoped="" ref="0xb7002cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb7003e78" loc="25:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb7003e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7002070"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0xb7000de8" loc="27:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb7000de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7b37900"/>
            <typename><typedef-ref name="TMilli" ref="0xb7b37ac8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7ed7848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb6fff570"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb6fffa60"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb6fff7e8"/>
        <function-ref name="overflow" scoped="" ref="0xb6fffcd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0xb6ff94b8" loc="33:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0xb6ff94b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0xb6ff9690"/>
        <function-ref name="compareBusy" scoped="" ref="0xb6ff9770"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0xb6ff9850"/>
        <function-ref name="countBusy" scoped="" ref="0xb6ff9930"/>
        <function-ref name="getAssr" scoped="" ref="0xb6ff9a10"/>
        <function-ref name="setAssr" scoped="" ref="0xb6ff9af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0xb6ffba68" loc="32:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0xb6ffba68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xb6ff9010"/>
        <function-ref name="fired" scoped="" ref="0xb6ffa5f0"/>
        <function-ref name="get" scoped="" ref="0xb6ffa0d8"/>
        <function-ref name="reset" scoped="" ref="0xb6ffa868"/>
        <function-ref name="isOn" scoped="" ref="0xb6ff9288"/>
        <function-ref name="set" scoped="" ref="0xb6ffa350"/>
        <function-ref name="start" scoped="" ref="0xb6ffaae0"/>
        <function-ref name="stop" scoped="" ref="0xb6ffad58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0xb6ffe010" loc="30:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb6ffe010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xb6ffda68"/>
        <function-ref name="test" scoped="" ref="0xb6ffd578"/>
        <function-ref name="get" scoped="" ref="0xb6ffe658"/>
        <function-ref name="setScale" scoped="" ref="0xb6ffdce0"/>
        <function-ref name="getScale" scoped="" ref="0xb6ffb010"/>
        <function-ref name="reset" scoped="" ref="0xb6ffede8"/>
        <function-ref name="overflow" scoped="" ref="0xb6ffeb70"/>
        <function-ref name="isOn" scoped="" ref="0xb6ffd7f0"/>
        <function-ref name="set" scoped="" ref="0xb6ffe8d0"/>
        <function-ref name="start" scoped="" ref="0xb6ffd088"/>
        <function-ref name="stop" scoped="" ref="0xb6ffd300"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0xb7914010" loc="48:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0xb7914010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0xb79141e8"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0xb79142c8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0xb79143a8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0xb7914488"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0xb7914568"/>
        <function-ref name="setControl" scoped="" ref="0xb7914648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0xb79114f8" loc="50:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0xb79114f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0xb79116d0"/>
        <function-ref name="compareBusy" scoped="" ref="0xb79117b0"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0xb7911890"/>
        <function-ref name="countBusy" scoped="" ref="0xb7911970"/>
        <function-ref name="getAssr" scoped="" ref="0xb7911a50"/>
        <function-ref name="setAssr" scoped="" ref="0xb7911b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0xb7914970" loc="49:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0xb7914970"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xb7913f08"/>
        <function-ref name="fired" scoped="" ref="0xb7913528"/>
        <function-ref name="get" scoped="" ref="0xb7913010"/>
        <function-ref name="reset" scoped="" ref="0xb79137a0"/>
        <function-ref name="isOn" scoped="" ref="0xb79111a0"/>
        <function-ref name="set" scoped="" ref="0xb7913288"/>
        <function-ref name="start" scoped="" ref="0xb7913a18"/>
        <function-ref name="stop" scoped="" ref="0xb7913c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb7919cb0" loc="47:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb7919cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xb7915778"/>
        <function-ref name="test" scoped="" ref="0xb7915288"/>
        <function-ref name="get" scoped="" ref="0xb7916308"/>
        <function-ref name="setScale" scoped="" ref="0xb79159f0"/>
        <function-ref name="getScale" scoped="" ref="0xb7915c90"/>
        <function-ref name="reset" scoped="" ref="0xb7916a98"/>
        <function-ref name="overflow" scoped="" ref="0xb7916820"/>
        <function-ref name="isOn" scoped="" ref="0xb7915500"/>
        <function-ref name="set" scoped="" ref="0xb7916580"/>
        <function-ref name="start" scoped="" ref="0xb7916d10"/>
        <function-ref name="stop" scoped="" ref="0xb7915010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0xb790caf0" loc="50:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0xb790caf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0xb790ccc8"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0xb790cda8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0xb790ce88"/>
        <function-ref name="setInterruptMask" scoped="" ref="0xb790a010"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0xb790a0f0"/>
        <function-ref name="setControl" scoped="" ref="0xb790a1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0xb7908010" loc="52:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0xb7908010"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0xb79081e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0xb7908470" loc="53:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0xb7908470"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0xb7908648"/>
        <function-ref name="compareBusy" scoped="" ref="0xb7908728"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0xb7908808"/>
        <function-ref name="countBusy" scoped="" ref="0xb79088e8"/>
        <function-ref name="getAssr" scoped="" ref="0xb79089c8"/>
        <function-ref name="setAssr" scoped="" ref="0xb7908aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0xb790a4f8" loc="51:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0xb790a4f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xb7909a48"/>
        <function-ref name="fired" scoped="" ref="0xb7909068"/>
        <function-ref name="get" scoped="" ref="0xb790ab40"/>
        <function-ref name="reset" scoped="" ref="0xb79092e0"/>
        <function-ref name="isOn" scoped="" ref="0xb7909cc0"/>
        <function-ref name="set" scoped="" ref="0xb790adb8"/>
        <function-ref name="start" scoped="" ref="0xb7909558"/>
        <function-ref name="stop" scoped="" ref="0xb79097d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb79107e0" loc="49:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb79107e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xb790c288"/>
        <function-ref name="test" scoped="" ref="0xb790dd38"/>
        <function-ref name="get" scoped="" ref="0xb7910e28"/>
        <function-ref name="setScale" scoped="" ref="0xb790c500"/>
        <function-ref name="getScale" scoped="" ref="0xb790c7a0"/>
        <function-ref name="reset" scoped="" ref="0xb790d5d0"/>
        <function-ref name="overflow" scoped="" ref="0xb790d358"/>
        <function-ref name="isOn" scoped="" ref="0xb790c010"/>
        <function-ref name="set" scoped="" ref="0xb790d0b8"/>
        <function-ref name="start" scoped="" ref="0xb790d848"/>
        <function-ref name="stop" scoped="" ref="0xb790dac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0xb78b8bd0" loc="74:/opt/tinyos-main-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0xb78b8bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb78b8da8"/>
        <function-ref name="runTask" scoped="" ref="0xb78b8e88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0xb78b9248" loc="49:/opt/tinyos-main-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xb78b9248"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7b37900"/>
            <typename><typedef-ref name="TMilli" ref="0xb7b37ac8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7ed7848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb78b8708"/>
        <function-ref name="fired" scoped="" ref="0xb78b9eb0"/>
        <function-ref name="startAt" scoped="" ref="0xb78b83c8"/>
        <function-ref name="isRunning" scoped="" ref="0xb78b8150"/>
        <function-ref name="getAlarm" scoped="" ref="0xb78b8980"/>
        <function-ref name="start" scoped="" ref="0xb78b9998"/>
        <function-ref name="stop" scoped="" ref="0xb78b9c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb796af08" loc="48:/opt/tinyos-main-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb796af08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7b37900"/>
            <typename><typedef-ref name="TMilli" ref="0xb7b37ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb78bba18"/>
        <function-ref name="fired" scoped="" ref="0xb78d0cb0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb78bb3d8"/>
        <function-ref name="isOneShot" scoped="" ref="0xb78bb180"/>
        <function-ref name="getdt" scoped="" ref="0xb78bbec8"/>
        <function-ref name="gett0" scoped="" ref="0xb78bbc70"/>
        <function-ref name="isRunning" scoped="" ref="0xb78d0f08"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb78d0558"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb78bb6f8"/>
        <function-ref name="startOneShot" scoped="" ref="0xb78d07d8"/>
        <function-ref name="stop" scoped="" ref="0xb78d0a58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0xb788b798" loc="71:/opt/tinyos-main-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0xb788b798"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb788b970"/>
        <function-ref name="runTask" scoped="" ref="0xb788ba50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0xb788d5a0" loc="49:/opt/tinyos-main-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0xb788d5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7b37900"/>
            <typename><typedef-ref name="TMilli" ref="0xb7b37ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb788b098"/>
        <function-ref name="fired" scoped="" ref="0xb788c330"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb788ca38"/>
        <function-ref name="isOneShot" scoped="" ref="0xb788c7e0"/>
        <function-ref name="getdt" scoped="" ref="0xb788b548"/>
        <function-ref name="gett0" scoped="" ref="0xb788b2f0"/>
        <function-ref name="isRunning" scoped="" ref="0xb788c588"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb788dbc8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb788cd58"/>
        <function-ref name="startOneShot" scoped="" ref="0xb788de48"/>
        <function-ref name="stop" scoped="" ref="0xb788c0d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb78b5210" loc="48:/opt/tinyos-main-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb78b5210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7b37900"/>
            <typename><typedef-ref name="TMilli" ref="0xb7b37ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb788fda8"/>
        <function-ref name="fired" scoped="" ref="0xb788f010"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb788f748"/>
        <function-ref name="isOneShot" scoped="" ref="0xb788f4e0"/>
        <function-ref name="getdt" scoped="" ref="0xb788d2b0"/>
        <function-ref name="gett0" scoped="" ref="0xb788d048"/>
        <function-ref name="isRunning" scoped="" ref="0xb788f278"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb78b5848"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb788fa78"/>
        <function-ref name="startOneShot" scoped="" ref="0xb78b5ad8"/>
        <function-ref name="stop" scoped="" ref="0xb78b5d68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0xb7883bc8" loc="48:/opt/tinyos-main-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0xb7883bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7b37900"/>
            <typename><typedef-ref name="TMilli" ref="0xb7b37ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb7887238"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0xb7887588" loc="49:/opt/tinyos-main-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb7887588"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7b37900"/>
            <typename><typedef-ref name="TMilli" ref="0xb7b37ac8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7ed7848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb7887cd8"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb7882288"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb7882010"/>
        <function-ref name="overflow" scoped="" ref="0xb7882500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb787fbd0" loc="45:/opt/tinyos-main-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="projectSinkAppC.Timer2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb787fbd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7b37900"/>
            <typename><typedef-ref name="TMilli" ref="0xb7b37ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb787d6d8"/>
        <function-ref name="fired" scoped="" ref="0xb787e970"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb787d098"/>
        <function-ref name="isOneShot" scoped="" ref="0xb787ee20"/>
        <function-ref name="getdt" scoped="" ref="0xb787db88"/>
        <function-ref name="gett0" scoped="" ref="0xb787d930"/>
        <function-ref name="isRunning" scoped="" ref="0xb787ebc8"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb787e218"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb787d3b8"/>
        <function-ref name="startOneShot" scoped="" ref="0xb787e498"/>
        <function-ref name="stop" scoped="" ref="0xb787e718"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb787b950" loc="45:/opt/tinyos-main-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="projectSinkAppC.Timer3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb787b950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7b37900"/>
            <typename><typedef-ref name="TMilli" ref="0xb7b37ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb78794c8"/>
        <function-ref name="fired" scoped="" ref="0xb787a768"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb787ae70"/>
        <function-ref name="isOneShot" scoped="" ref="0xb787ac18"/>
        <function-ref name="getdt" scoped="" ref="0xb7879978"/>
        <function-ref name="gett0" scoped="" ref="0xb7879720"/>
        <function-ref name="isRunning" scoped="" ref="0xb787a9c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb787a010"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb78791a8"/>
        <function-ref name="startOneShot" scoped="" ref="0xb787a290"/>
        <function-ref name="stop" scoped="" ref="0xb787a510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0xb78775e0" loc="10:FakeSensorC.nc">
      <component-ref qname="projectSinkAppC.FakeSensorC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0xb78775e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7ed71e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7877c08"/>
        <function-ref name="readDone" scoped="" ref="0xb7877e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0xb786c130" loc="46:/opt/tinyos-main-2.1.2/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0xb786c130"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0xb786c308"/>
        <function-ref name="rand32" scoped="" ref="0xb786c3e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0xb786ebd8" loc="45:/opt/tinyos-main-2.1.2/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0xb786ebd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7ed71e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7871218"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb78759c0" loc="44:/opt/tinyos-main-2.1.2/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb78759c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7875b98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0xb786bc18" loc="48:/opt/tinyos-main-2.1.2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0xb786bc18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0xb786bdf0"/>
        <function-ref name="rand32" scoped="" ref="0xb786bed0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0xb786b358" loc="47:/opt/tinyos-main-2.1.2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0xb786b358"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7ed71e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb786b980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb786cd90" loc="46:/opt/tinyos-main-2.1.2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb786cd90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb786b010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0" ref="0xb6fbe3b0" loc="13:FakeSensorP.nc">
      <component-ref qname="projectSinkAppC.FakeSensorC.FakeSensorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0" scoped="" ref="0xb6fbe3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7b37900"/>
            <typename><typedef-ref name="TMilli" ref="0xb7b37ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb6fbce98"/>
        <function-ref name="fired" scoped="" ref="0xb6fbc150"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb6fbc858"/>
        <function-ref name="isOneShot" scoped="" ref="0xb6fbc600"/>
        <function-ref name="getdt" scoped="" ref="0xb6fbb368"/>
        <function-ref name="gett0" scoped="" ref="0xb6fbb110"/>
        <function-ref name="isRunning" scoped="" ref="0xb6fbc3a8"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb6fbe9d8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb6fbcb78"/>
        <function-ref name="startOneShot" scoped="" ref="0xb6fbec58"/>
        <function-ref name="stop" scoped="" ref="0xb6fbeed8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0xb6fbf350" loc="10:FakeSensorP.nc">
      <component-ref qname="projectSinkAppC.FakeSensorC.FakeSensorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0xb6fbf350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7ed71e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb6fbf978"/>
        <function-ref name="readDone" scoped="" ref="0xb6fbfbd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0xb6fbfec8" loc="12:FakeSensorP.nc">
      <component-ref qname="projectSinkAppC.FakeSensorC.FakeSensorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0xb6fbfec8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0xb6fbe0c0"/>
        <function-ref name="rand32" scoped="" ref="0xb6fbe1a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb6fba0f0" loc="45:/opt/tinyos-main-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="projectSinkAppC.FakeSensorC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb6fba0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7b37900"/>
            <typename><typedef-ref name="TMilli" ref="0xb7b37ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb6fb9be0"/>
        <function-ref name="fired" scoped="" ref="0xb6fbae70"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb6fb95a0"/>
        <function-ref name="isOneShot" scoped="" ref="0xb6fb9348"/>
        <function-ref name="getdt" scoped="" ref="0xb6fb70b8"/>
        <function-ref name="gett0" scoped="" ref="0xb6fb9e38"/>
        <function-ref name="isRunning" scoped="" ref="0xb6fb90f0"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb6fba718"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb6fb98c0"/>
        <function-ref name="startOneShot" scoped="" ref="0xb6fba998"/>
        <function-ref name="stop" scoped="" ref="0xb6fbac18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb78769f0" loc="55:/opt/tinyos-main-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xb78769f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb7876bc8"/>
        <function-ref name="stopDone" scoped="" ref="0xb7876ca8"/>
        <function-ref name="start" scoped="" ref="0xb7876d88"/>
        <function-ref name="stop" scoped="" ref="0xb7876e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xb78532d8" loc="57:/opt/tinyos-main-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xb78532d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb79c9d30"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb78534b0"/>
        <function-ref name="getPayload" scoped="" ref="0xb7853590"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb7853670"/>
        <function-ref name="cancel" scoped="" ref="0xb7853750"/>
        <function-ref name="sendDone" scoped="" ref="0xb7853830"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0xb7852348" loc="59:/opt/tinyos-main-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0xb7852348"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb79c9d30"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb7852520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb78526a0" loc="61:/opt/tinyos-main-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb78526a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb7852878"/>
        <function-ref name="payloadLength" scoped="" ref="0xb7852958"/>
        <function-ref name="getPayload" scoped="" ref="0xb7852a38"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb7852b18"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb7852bf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0xb7849920" loc="64:/opt/tinyos-main-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0xb7849920"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7b37d40"/>
            <typename><typedef-ref name="T32khz" ref="0xb7b37f08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7ed7848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb784e438"/>
        <function-ref name="clear" scoped="" ref="0xb784e7e8"/>
        <function-ref name="isValid" scoped="" ref="0xb784e088"/>
        <function-ref name="set" scoped="" ref="0xb784eb98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0xb783e130" loc="66:/opt/tinyos-main-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0xb783e130"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0xb783e308"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0xb783e3e8"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0xb783e4c8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0xb783e5a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb7853c98" loc="58:/opt/tinyos-main-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb7853c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb79c9d30"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb7853e70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0xb784f010" loc="63:/opt/tinyos-main-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb784f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb784f1e8"/>
        <function-ref name="noAck" scoped="" ref="0xb784f2c8"/>
        <function-ref name="wasAcked" scoped="" ref="0xb784f3a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xb7852d90" loc="62:/opt/tinyos-main-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb7852d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb7851010"/>
        <function-ref name="source" scoped="" ref="0xb78510f0"/>
        <function-ref name="address" scoped="" ref="0xb78511d0"/>
        <function-ref name="destination" scoped="" ref="0xb78512b0"/>
        <function-ref name="setSource" scoped="" ref="0xb7851390"/>
        <function-ref name="setDestination" scoped="" ref="0xb7851470"/>
        <function-ref name="type" scoped="" ref="0xb7851550"/>
        <function-ref name="setType" scoped="" ref="0xb7851630"/>
        <function-ref name="isForMe" scoped="" ref="0xb7851710"/>
        <function-ref name="setGroup" scoped="" ref="0xb78517f0"/>
        <function-ref name="localGroup" scoped="" ref="0xb78518d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0xb78462e8" loc="65:/opt/tinyos-main-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb78462e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7b37900"/>
            <typename><typedef-ref name="TMilli" ref="0xb7b37ac8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7ed7848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb7846de8"/>
        <function-ref name="clear" scoped="" ref="0xb78451b8"/>
        <function-ref name="isValid" scoped="" ref="0xb7846a38"/>
        <function-ref name="set" scoped="" ref="0xb7845568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb7838c00" loc="55:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xb7838c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb7838dd8"/>
        <function-ref name="stopDone" scoped="" ref="0xb7838eb8"/>
        <function-ref name="start" scoped="" ref="0xb7837010"/>
        <function-ref name="stop" scoped="" ref="0xb78370f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0xb7828588" loc="64:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0xb7828588"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb79c9d30"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0xb7828760"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0xb7828840"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0xb7828920"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0xb7828a00"/>
        <function-ref name="setCca" scoped="" ref="0xb7828ae0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0xb7828bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0xb7827260" loc="67:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0xb7827260"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb79c9d30"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0xb78274b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb78355f0" loc="60:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb78355f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb78357c8"/>
        <function-ref name="payloadLength" scoped="" ref="0xb78358a8"/>
        <function-ref name="getPayload" scoped="" ref="0xb7835988"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb7835a68"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb7835b48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xb7837550" loc="56:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xb7837550"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb79c9d30"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb7837728"/>
        <function-ref name="getPayload" scoped="" ref="0xb7837808"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb78378e8"/>
        <function-ref name="cancel" scoped="" ref="0xb78379c8"/>
        <function-ref name="sendDone" scoped="" ref="0xb7837aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0xb78365c8" loc="58:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0xb78365c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb79c9d30"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb78367a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0xb782fdf0" loc="61:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0xb782fdf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0xb7834010"/>
        <function-ref name="setNetwork" scoped="" ref="0xb78340f0"/>
        <function-ref name="getRssi" scoped="" ref="0xb78341d0"/>
        <function-ref name="getNetwork" scoped="" ref="0xb78342b0"/>
        <function-ref name="getPower" scoped="" ref="0xb7834390"/>
        <function-ref name="getLqi" scoped="" ref="0xb7834470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0xb7828db0" loc="65:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0xb7828db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0xb7833010"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0xb78330f0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0xb78331d0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0xb78332b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb7837f10" loc="57:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb7837f10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb79c9d30"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb7836108"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0xb7834690" loc="62:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb7834690"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb7834868"/>
        <function-ref name="noAck" scoped="" ref="0xb7834948"/>
        <function-ref name="wasAcked" scoped="" ref="0xb7834a28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0xb7823760" loc="66:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0xb7823760"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0xb7823938"/>
        <function-ref name="setRetries" scoped="" ref="0xb7823a18"/>
        <function-ref name="getRetries" scoped="" ref="0xb7823af8"/>
        <function-ref name="setRetryDelay" scoped="" ref="0xb7823bd8"/>
        <function-ref name="wasDelivered" scoped="" ref="0xb7823cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xb7836938" loc="59:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb7836938"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb7836b10"/>
        <function-ref name="source" scoped="" ref="0xb7836bf0"/>
        <function-ref name="address" scoped="" ref="0xb7836cd0"/>
        <function-ref name="destination" scoped="" ref="0xb7836db0"/>
        <function-ref name="setSource" scoped="" ref="0xb7836e90"/>
        <function-ref name="setDestination" scoped="" ref="0xb7835010"/>
        <function-ref name="type" scoped="" ref="0xb78350f0"/>
        <function-ref name="setType" scoped="" ref="0xb78351d0"/>
        <function-ref name="isForMe" scoped="" ref="0xb78352b0"/>
        <function-ref name="setGroup" scoped="" ref="0xb7835390"/>
        <function-ref name="localGroup" scoped="" ref="0xb7835470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0xb782da98" loc="63:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0xb782da98"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0xb782dc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb7822440" loc="43:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xb7822440"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb7822618"/>
        <function-ref name="stopDone" scoped="" ref="0xb78226f8"/>
        <function-ref name="start" scoped="" ref="0xb78227d8"/>
        <function-ref name="stop" scoped="" ref="0xb78228b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0xb7813118" loc="55:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0xb7813118"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0xb78132f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0xb7813b00" loc="57:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0xb7813b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0xb7813cd8"/>
        <function-ref name="setRetries" scoped="" ref="0xb7813db8"/>
        <function-ref name="getRetries" scoped="" ref="0xb7813e98"/>
        <function-ref name="setRetryDelay" scoped="" ref="0xb7811010"/>
        <function-ref name="wasDelivered" scoped="" ref="0xb78110f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0xb78192a0" loc="53:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0xb78192a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0xb7819478"/>
        <function-ref name="setNetwork" scoped="" ref="0xb7819558"/>
        <function-ref name="getRssi" scoped="" ref="0xb7819638"/>
        <function-ref name="getNetwork" scoped="" ref="0xb7819718"/>
        <function-ref name="getPower" scoped="" ref="0xb78197f8"/>
        <function-ref name="getLqi" scoped="" ref="0xb78198d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0xb781a760" loc="50:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveSend" scoped="" ref="0xb781a760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb781a938"/>
        <function-ref name="getPayload" scoped="" ref="0xb781aa18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb781aaf8"/>
        <function-ref name="cancel" scoped="" ref="0xb781abd8"/>
        <function-ref name="sendDone" scoped="" ref="0xb781acb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0xb78134e0" loc="56:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0xb78134e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0xb78136b8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0xb7813798"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0xb7813878"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0xb7813958"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0xb7812bd0" loc="47:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0xb7812bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb7812da8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0xb7819af8" loc="54:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb7819af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb7819cd0"/>
        <function-ref name="noAck" scoped="" ref="0xb7819db0"/>
        <function-ref name="wasAcked" scoped="" ref="0xb7819e90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb781bdc0" loc="45:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb781bdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb781e010"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb781e0f0"/>
        <function-ref name="request" scoped="" ref="0xb781e1d0"/>
        <function-ref name="granted" scoped="" ref="0xb781e2b0"/>
        <function-ref name="isOwner" scoped="" ref="0xb781e390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0xb7812460" loc="46:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0xb7812460"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb7812638"/>
        <function-ref name="getPayload" scoped="" ref="0xb7812718"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb78127f8"/>
        <function-ref name="cancel" scoped="" ref="0xb78128d8"/>
        <function-ref name="sendDone" scoped="" ref="0xb78129b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0xb781a010" loc="48:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BarePacket" scoped="" ref="0xb781a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb781a1e8"/>
        <function-ref name="payloadLength" scoped="" ref="0xb781a2c8"/>
        <function-ref name="getPayload" scoped="" ref="0xb781a3a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb781a488"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb781a568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0xb781aee8" loc="51:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveReceive" scoped="" ref="0xb781aee8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb78190e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb78118e0" loc="44:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xb78118e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb7811ab8"/>
        <function-ref name="stopDone" scoped="" ref="0xb7811b98"/>
        <function-ref name="start" scoped="" ref="0xb7811c78"/>
        <function-ref name="stop" scoped="" ref="0xb7811d58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0xb780e9c0" loc="47:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0xb780e9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0xb780eb98"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0xb780ec78"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0xb780ed58"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0xb780ee38"/>
        <function-ref name="setCca" scoped="" ref="0xb780ef18"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0xb780d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb7811ee8" loc="45:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb7811ee8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb780e0e0"/>
        <function-ref name="getPayload" scoped="" ref="0xb780e1c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb780e2a0"/>
        <function-ref name="cancel" scoped="" ref="0xb780e380"/>
        <function-ref name="sendDone" scoped="" ref="0xb780e460"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb780e608" loc="46:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb780e608"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb780e7e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb780d948" loc="39:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xb780d948"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb780db20"/>
        <function-ref name="stopDone" scoped="" ref="0xb780dc00"/>
        <function-ref name="start" scoped="" ref="0xb780dce0"/>
        <function-ref name="stop" scoped="" ref="0xb780ddc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0xb780a748" loc="41:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0xb780a748"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0xb780a920"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0xb780aa00"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0xb780aae0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0xb780abc0"/>
        <function-ref name="setCca" scoped="" ref="0xb780aca0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0xb780ad80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0xb77fdae8" loc="47:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBackoff" scoped="" ref="0xb77fdae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0xb77fdcc0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0xb77fdda0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0xb77fde80"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0xb7807010"/>
        <function-ref name="setCca" scoped="" ref="0xb78070f0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0xb78071d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0xb7801730" loc="50:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0xb7801730"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0xb7801908"/>
        <function-ref name="setNetwork" scoped="" ref="0xb78019e8"/>
        <function-ref name="getRssi" scoped="" ref="0xb7801ac8"/>
        <function-ref name="getNetwork" scoped="" ref="0xb7801ba8"/>
        <function-ref name="getPower" scoped="" ref="0xb7801c88"/>
        <function-ref name="getLqi" scoped="" ref="0xb7801d68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0xb77fd328" loc="46:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Transmit" scoped="" ref="0xb77fd328"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb77fd500"/>
        <function-ref name="cancel" scoped="" ref="0xb77fd5e0"/>
        <function-ref name="modify" scoped="" ref="0xb77fd6c0"/>
        <function-ref name="sendDone" scoped="" ref="0xb77fd7a0"/>
        <function-ref name="resend" scoped="" ref="0xb77fd880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb780a010" loc="40:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb780a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb780a1e8"/>
        <function-ref name="getPayload" scoped="" ref="0xb780a2c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb780a3a8"/>
        <function-ref name="cancel" scoped="" ref="0xb780a488"/>
        <function-ref name="sendDone" scoped="" ref="0xb780a568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0xb7807370" loc="48:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0xb7807370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0xb7807548"/>
        <function-ref name="rand32" scoped="" ref="0xb7807628"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0xb7802d18" loc="45:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0xb7802d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb7802ef0"/>
        <function-ref name="stop" scoped="" ref="0xb7808010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0xb77f0ea0" loc="51:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0xb77f0ea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0xb77f50c0"/>
        <function-ref name="getHeader" scoped="" ref="0xb77f51a0"/>
        <function-ref name="getMetadata" scoped="" ref="0xb77f5280"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0xb78031e0" loc="44:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0xb78031e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0xb78033b8"/>
        <function-ref name="rfOff" scoped="" ref="0xb7803498"/>
        <function-ref name="rxOn" scoped="" ref="0xb7803578"/>
        <function-ref name="startVReg" scoped="" ref="0xb7803658"/>
        <function-ref name="stopVReg" scoped="" ref="0xb7803738"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0xb7803818"/>
        <function-ref name="stopOscillator" scoped="" ref="0xb78038f8"/>
        <function-ref name="startVRegDone" scoped="" ref="0xb78039d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xb77f69e0" loc="49:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xb77f69e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb77f6bb8"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb77f6c98"/>
        <function-ref name="led1On" scoped="" ref="0xb77f6d78"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb77f6e58"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb7801010"/>
        <function-ref name="get" scoped="" ref="0xb78010f0"/>
        <function-ref name="led1Off" scoped="" ref="0xb78011d0"/>
        <function-ref name="led2Off" scoped="" ref="0xb7801550"/>
        <function-ref name="set" scoped="" ref="0xb78012b0"/>
        <function-ref name="led0On" scoped="" ref="0xb7801390"/>
        <function-ref name="led2On" scoped="" ref="0xb7801470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0xb7809010" loc="43:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb7809010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb78091e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb78092c8"/>
        <function-ref name="request" scoped="" ref="0xb78093a8"/>
        <function-ref name="granted" scoped="" ref="0xb7809488"/>
        <function-ref name="isOwner" scoped="" ref="0xb7809568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0xb77ec758" loc="52:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControlState" scoped="" ref="0xb77ec758"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0xb77ec9b0"/>
        <function-ref name="toIdle" scoped="" ref="0xb77eca90"/>
        <function-ref name="isState" scoped="" ref="0xb77ecb70"/>
        <function-ref name="isIdle" scoped="" ref="0xb77ecc50"/>
        <function-ref name="requestState" scoped="" ref="0xb77ecd30"/>
        <function-ref name="forceState" scoped="" ref="0xb77ece10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0xb77eb980" loc="76:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendDone_task" scoped="" ref="0xb77eb980"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb77ebb58"/>
        <function-ref name="runTask" scoped="" ref="0xb77ebc38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0xb77eb170" loc="75:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDone_task" scoped="" ref="0xb77eb170"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb77eb348"/>
        <function-ref name="runTask" scoped="" ref="0xb77eb428"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0xb77ee888" loc="74:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDone_task" scoped="" ref="0xb77ee888"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb77eea60"/>
        <function-ref name="runTask" scoped="" ref="0xb77eeb40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0xb77b7930" loc="45:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0xb77b7930"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0xb77b7b08"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0xb77b7be8"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0xb77b7cc8"/>
        <function-ref name="syncDone" scoped="" ref="0xb77b7da8"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0xb77b7e88"/>
        <function-ref name="setShortAddr" scoped="" ref="0xb77be010"/>
        <function-ref name="setChannel" scoped="" ref="0xb77be0f0"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0xb77be1d0"/>
        <function-ref name="setPanAddr" scoped="" ref="0xb77be2b0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0xb77be390"/>
        <function-ref name="getExtAddr" scoped="" ref="0xb77be470"/>
        <function-ref name="getShortAddr" scoped="" ref="0xb77be550"/>
        <function-ref name="sync" scoped="" ref="0xb77be630"/>
        <function-ref name="getChannel" scoped="" ref="0xb77be790"/>
        <function-ref name="getPanAddr" scoped="" ref="0xb77be870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0xb77bd5a0" loc="47:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadRssi" scoped="" ref="0xb77bd5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7ed71e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb77bdbc8"/>
        <function-ref name="readDone" scoped="" ref="0xb77bde20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0xb77bea40" loc="46:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0xb77bea40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0xb77bec18"/>
        <function-ref name="rfOff" scoped="" ref="0xb77becf8"/>
        <function-ref name="rxOn" scoped="" ref="0xb77bedd8"/>
        <function-ref name="startVReg" scoped="" ref="0xb77beeb8"/>
        <function-ref name="stopVReg" scoped="" ref="0xb77bd010"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0xb77bd0f0"/>
        <function-ref name="stopOscillator" scoped="" ref="0xb77bd1d0"/>
        <function-ref name="startVRegDone" scoped="" ref="0xb77bd2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb77c28f0" loc="44:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb77c28f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb77c2ac8"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb77c2ba8"/>
        <function-ref name="request" scoped="" ref="0xb77c2c88"/>
        <function-ref name="granted" scoped="" ref="0xb77c2d68"/>
        <function-ref name="isOwner" scoped="" ref="0xb77c2e48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0xb77b3490" loc="46:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0xb77b3490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0xb77b3668"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0xb77b3748"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0xb77b3828"/>
        <function-ref name="syncDone" scoped="" ref="0xb77b3908"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0xb77b39e8"/>
        <function-ref name="setShortAddr" scoped="" ref="0xb77b3ac8"/>
        <function-ref name="setChannel" scoped="" ref="0xb77b3ba8"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0xb77b3c88"/>
        <function-ref name="setPanAddr" scoped="" ref="0xb77b3d68"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0xb77b3e48"/>
        <function-ref name="getExtAddr" scoped="" ref="0xb77b3f28"/>
        <function-ref name="getShortAddr" scoped="" ref="0xb77b2018"/>
        <function-ref name="sync" scoped="" ref="0xb77b20f8"/>
        <function-ref name="getChannel" scoped="" ref="0xb77b2258"/>
        <function-ref name="getPanAddr" scoped="" ref="0xb77b2338"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0xb77a4868" loc="66:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0xb77a4868"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb77a4a40"/>
        <function-ref name="write" scoped="" ref="0xb77a4b20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0xb77ad400" loc="50:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalIeeeEui64" scoped="" ref="0xb77ad400"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0xb77ad5d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0xb77ad9c8" loc="52:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StartupTimer" scoped="" ref="0xb77ad9c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7b37d40"/>
            <typename><typedef-ref name="T32khz" ref="0xb7b37f08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7ed7848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb77afe70"/>
        <function-ref name="fired" scoped="" ref="0xb77af640"/>
        <function-ref name="startAt" scoped="" ref="0xb77afb30"/>
        <function-ref name="isRunning" scoped="" ref="0xb77af8b8"/>
        <function-ref name="getAlarm" scoped="" ref="0xb77ae110"/>
        <function-ref name="start" scoped="" ref="0xb77af128"/>
        <function-ref name="stop" scoped="" ref="0xb77af3c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0xb77a6d68" loc="64:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0xb77a6d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb77a4010"/>
        <function-ref name="write" scoped="" ref="0xb77a40f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0xb77aede8" loc="54:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0xb77aede8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb77ac010"/>
        <function-ref name="isInput" scoped="" ref="0xb77ac0f0"/>
        <function-ref name="toggle" scoped="" ref="0xb77ac1d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb77ac2b0"/>
        <function-ref name="get" scoped="" ref="0xb77ac390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb77ac470"/>
        <function-ref name="set" scoped="" ref="0xb77ac550"/>
        <function-ref name="clr" scoped="" ref="0xb77ac630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0xb77b1010" loc="48:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadRssi" scoped="" ref="0xb77b1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7ed71e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb77b1638"/>
        <function-ref name="readDone" scoped="" ref="0xb77b1890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0xb7795d48" loc="126:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="syncDone" scoped="" ref="0xb7795d48"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb7795f20"/>
        <function-ref name="runTask" scoped="" ref="0xb7794018"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0xb77a4d60" loc="67:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0xb77a4d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb779e010"/>
        <function-ref name="write" scoped="" ref="0xb779e0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0xb779e340" loc="68:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0xb779e340"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb779e518"/>
        <function-ref name="write" scoped="" ref="0xb779e5f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0xb77a6340" loc="62:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0xb77a6340"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb77a6518"/>
        <function-ref name="write" scoped="" ref="0xb77a65f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0xb77a5a68" loc="57:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0xb77a5a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0xb77a5c40"/>
        <function-ref name="changed" scoped="" ref="0xb77a5d20"/>
        <function-ref name="amGroup" scoped="" ref="0xb77a5e00"/>
        <function-ref name="setAddress" scoped="" ref="0xb77a5ee0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0xb77ae3e0" loc="53:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0xb77ae3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb77ae5b8"/>
        <function-ref name="isInput" scoped="" ref="0xb77ae698"/>
        <function-ref name="toggle" scoped="" ref="0xb77ae778"/>
        <function-ref name="isOutput" scoped="" ref="0xb77ae858"/>
        <function-ref name="get" scoped="" ref="0xb77ae938"/>
        <function-ref name="makeOutput" scoped="" ref="0xb77aea18"/>
        <function-ref name="set" scoped="" ref="0xb77aeaf8"/>
        <function-ref name="clr" scoped="" ref="0xb77aebd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0xb779ba28" loc="71:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0xb779ba28"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb779bd00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0xb77ac840" loc="55:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VREN" scoped="" ref="0xb77ac840"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb77aca18"/>
        <function-ref name="isInput" scoped="" ref="0xb77acaf8"/>
        <function-ref name="toggle" scoped="" ref="0xb77acbd8"/>
        <function-ref name="isOutput" scoped="" ref="0xb77accb8"/>
        <function-ref name="get" scoped="" ref="0xb77acd98"/>
        <function-ref name="makeOutput" scoped="" ref="0xb77ace78"/>
        <function-ref name="set" scoped="" ref="0xb77ab010"/>
        <function-ref name="clr" scoped="" ref="0xb77ab0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb77b6960" loc="44:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb77b6960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb77b6b38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0xb77a4358" loc="65:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0xb77a4358"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb77a4530"/>
        <function-ref name="write" scoped="" ref="0xb77a4610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0xb779d010" loc="72:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0xb779d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb779d1e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0xb779d430" loc="74:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0xb779d430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb779d608"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb779d6e8"/>
        <function-ref name="request" scoped="" ref="0xb779d7c8"/>
        <function-ref name="granted" scoped="" ref="0xb779d8a8"/>
        <function-ref name="isOwner" scoped="" ref="0xb779d988"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0xb779c428" loc="76:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SyncResource" scoped="" ref="0xb779c428"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb779c600"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb779c6e0"/>
        <function-ref name="request" scoped="" ref="0xb779c7c0"/>
        <function-ref name="granted" scoped="" ref="0xb779c8a0"/>
        <function-ref name="isOwner" scoped="" ref="0xb779c980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0xb77b2508" loc="47:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0xb77b2508"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0xb77b26e0"/>
        <function-ref name="rfOff" scoped="" ref="0xb77b27c0"/>
        <function-ref name="rxOn" scoped="" ref="0xb77b28a0"/>
        <function-ref name="startVReg" scoped="" ref="0xb77b2980"/>
        <function-ref name="stopVReg" scoped="" ref="0xb77b2a60"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0xb77b2b40"/>
        <function-ref name="stopOscillator" scoped="" ref="0xb77b2c20"/>
        <function-ref name="startVRegDone" scoped="" ref="0xb77b2d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0xb77a6848" loc="63:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0xb77a6848"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb77a6a20"/>
        <function-ref name="write" scoped="" ref="0xb77a6b00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0xb779fdc8" loc="61:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0xb779fdc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb77a6010"/>
        <function-ref name="write" scoped="" ref="0xb77a60f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0xb779b1e0" loc="69:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0xb779b1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb779b3b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xb779cb10" loc="78:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xb779cb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb779cce8"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb779cdc8"/>
        <function-ref name="led1On" scoped="" ref="0xb779cea8"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb779a010"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb779a0f0"/>
        <function-ref name="get" scoped="" ref="0xb779a1d0"/>
        <function-ref name="led1Off" scoped="" ref="0xb779a2b0"/>
        <function-ref name="led2Off" scoped="" ref="0xb779a630"/>
        <function-ref name="set" scoped="" ref="0xb779a390"/>
        <function-ref name="led0On" scoped="" ref="0xb779a470"/>
        <function-ref name="led2On" scoped="" ref="0xb779a550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0xb7795568" loc="125:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sync" scoped="" ref="0xb7795568"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb7795740"/>
        <function-ref name="runTask" scoped="" ref="0xb7795820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb77b6cf0" loc="45:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb77b6cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb77b6ec8"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb77b3010"/>
        <function-ref name="request" scoped="" ref="0xb77b30f0"/>
        <function-ref name="granted" scoped="" ref="0xb77b31d0"/>
        <function-ref name="isOwner" scoped="" ref="0xb77b32b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0xb77a1660" loc="60:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0xb77a1660"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb77a1838"/>
        <function-ref name="write" scoped="" ref="0xb77a1918"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEEADR" ref="0xb77a1110" loc="59:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0xb77a1110"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb77a1368"/>
        <function-ref name="write" scoped="" ref="0xb77a1448"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0xb77a79c8" loc="56:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptCCA" scoped="" ref="0xb77a79c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb77a7ba0"/>
        <function-ref name="disable" scoped="" ref="0xb77a7c80"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0xb77a7d60"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0xb77a7e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0xb779dbe0" loc="75:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RssiResource" scoped="" ref="0xb779dbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb779ddb8"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb779de98"/>
        <function-ref name="request" scoped="" ref="0xb779c010"/>
        <function-ref name="granted" scoped="" ref="0xb779c0f0"/>
        <function-ref name="isOwner" scoped="" ref="0xb779c1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0xb779b5f8" loc="70:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0xb779b5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb779b7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb7750290" loc="45:/opt/tinyos-main-2.1.2/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb7750290"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7750468"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0xb7750858" loc="46:/opt/tinyos-main-2.1.2/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm32khz32" scoped="" ref="0xb7750858"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7b37d40"/>
            <typename><typedef-ref name="T32khz" ref="0xb7b37f08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7ed7848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb774fd58"/>
        <function-ref name="fired" scoped="" ref="0xb774f528"/>
        <function-ref name="startAt" scoped="" ref="0xb774fa18"/>
        <function-ref name="isRunning" scoped="" ref="0xb774f7a0"/>
        <function-ref name="getAlarm" scoped="" ref="0xb774d010"/>
        <function-ref name="start" scoped="" ref="0xb774f010"/>
        <function-ref name="stop" scoped="" ref="0xb774f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0xb774ca60" loc="86:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xb774ca60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7b37d40"/>
            <typename><typedef-ref name="T32khz" ref="0xb7b37f08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7ed7848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb7654010"/>
        <function-ref name="fired" scoped="" ref="0xb774b718"/>
        <function-ref name="startAt" scoped="" ref="0xb774bc08"/>
        <function-ref name="isRunning" scoped="" ref="0xb774b990"/>
        <function-ref name="getAlarm" scoped="" ref="0xb7654288"/>
        <function-ref name="start" scoped="" ref="0xb774b200"/>
        <function-ref name="stop" scoped="" ref="0xb774b4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb76544b8" loc="87:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb76544b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7654690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0xb6fa3af0" loc="28:/opt/tinyos-main-2.1.2/tos/platforms/mica/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xb6fa3af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7b37d40"/>
            <typename><typedef-ref name="T32khz" ref="0xb7b37f08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7ed7848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb6fa0068"/>
        <function-ref name="fired" scoped="" ref="0xb6fa1820"/>
        <function-ref name="startAt" scoped="" ref="0xb6fa1d10"/>
        <function-ref name="isRunning" scoped="" ref="0xb6fa1a98"/>
        <function-ref name="getAlarm" scoped="" ref="0xb6fa02e0"/>
        <function-ref name="start" scoped="" ref="0xb6fa1308"/>
        <function-ref name="stop" scoped="" ref="0xb6fa15a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0xb6f9f8e8" loc="30:/opt/tinyos-main-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xb6f9f8e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7b37d40"/>
            <typename><typedef-ref name="TOne" ref="0xb7b169a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7ed71e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb6f9dd90"/>
        <function-ref name="fired" scoped="" ref="0xb6f9d560"/>
        <function-ref name="startAt" scoped="" ref="0xb6f9da50"/>
        <function-ref name="isRunning" scoped="" ref="0xb6f9d7d8"/>
        <function-ref name="getAlarm" scoped="" ref="0xb6f9c048"/>
        <function-ref name="start" scoped="" ref="0xb6f9d048"/>
        <function-ref name="stop" scoped="" ref="0xb6f9d2e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0xb7733ae0" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0xb7733ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0xb7733cb8"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0xb7733d98"/>
        <function-ref name="getInterruptMask" scoped="" ref="0xb7733e78"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0xb7739010"/>
        <function-ref name="setInterruptMask" scoped="" ref="0xb77390f0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0xb77391d0"/>
        <function-ref name="getCtrlClock" scoped="" ref="0xb77392b0"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0xb7739390"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0xb7739470"/>
        <function-ref name="setCtrlClock" scoped="" ref="0xb7739550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0xb772e998" loc="47:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0xb772e998"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7ed71e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0xb772d500"/>
        <function-ref name="test" scoped="" ref="0xb772d010"/>
        <function-ref name="get" scoped="" ref="0xb7738010"/>
        <function-ref name="captured" scoped="" ref="0xb7738528"/>
        <function-ref name="reset" scoped="" ref="0xb77387c8"/>
        <function-ref name="isOn" scoped="" ref="0xb772d288"/>
        <function-ref name="set" scoped="" ref="0xb7738288"/>
        <function-ref name="start" scoped="" ref="0xb7738a40"/>
        <function-ref name="stop" scoped="" ref="0xb7738cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0xb772dc10" loc="48:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0xb772dc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7ed71e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xb772b1a0"/>
        <function-ref name="fired" scoped="" ref="0xb772c790"/>
        <function-ref name="get" scoped="" ref="0xb772c278"/>
        <function-ref name="reset" scoped="" ref="0xb772ca08"/>
        <function-ref name="isOn" scoped="" ref="0xb772b418"/>
        <function-ref name="set" scoped="" ref="0xb772c4f0"/>
        <function-ref name="start" scoped="" ref="0xb772cc80"/>
        <function-ref name="stop" scoped="" ref="0xb772cef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb773eb60" loc="45:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb773eb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7ed71e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xb773a600"/>
        <function-ref name="test" scoped="" ref="0xb773a110"/>
        <function-ref name="get" scoped="" ref="0xb773b200"/>
        <function-ref name="setScale" scoped="" ref="0xb773a878"/>
        <function-ref name="getScale" scoped="" ref="0xb773ab18"/>
        <function-ref name="reset" scoped="" ref="0xb773b990"/>
        <function-ref name="overflow" scoped="" ref="0xb773b718"/>
        <function-ref name="isOn" scoped="" ref="0xb773a388"/>
        <function-ref name="set" scoped="" ref="0xb773b478"/>
        <function-ref name="start" scoped="" ref="0xb773bc08"/>
        <function-ref name="stop" scoped="" ref="0xb773be80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0xb7725610" loc="47:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0xb7725610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0xb77257e8"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0xb77258c8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0xb77259a8"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0xb7725a88"/>
        <function-ref name="setInterruptMask" scoped="" ref="0xb7725b68"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0xb7725c48"/>
        <function-ref name="getCtrlClock" scoped="" ref="0xb7725d28"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0xb7725e08"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0xb7725ee8"/>
        <function-ref name="setCtrlClock" scoped="" ref="0xb7724010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0Ctrl" ref="0xb771b610" loc="53:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0Ctrl" scoped="" ref="0xb771b610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0xb771b7e8"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0xb771b8c8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0xb771b9a8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0xb771ba88"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0xb771bb68"/>
        <function-ref name="setControl" scoped="" ref="0xb771bc48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0xb7721268" loc="49:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0xb7721268"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7ed71e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xb77207d0"/>
        <function-ref name="fired" scoped="" ref="0xb7721dc8"/>
        <function-ref name="get" scoped="" ref="0xb77218b0"/>
        <function-ref name="reset" scoped="" ref="0xb7720068"/>
        <function-ref name="isOn" scoped="" ref="0xb7720a48"/>
        <function-ref name="set" scoped="" ref="0xb7721b28"/>
        <function-ref name="start" scoped="" ref="0xb77202e0"/>
        <function-ref name="stop" scoped="" ref="0xb7720558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0xb7724348" loc="48:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0xb7724348"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7ed71e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0xb7722dc8"/>
        <function-ref name="test" scoped="" ref="0xb77228d8"/>
        <function-ref name="get" scoped="" ref="0xb7724990"/>
        <function-ref name="captured" scoped="" ref="0xb7724ea8"/>
        <function-ref name="reset" scoped="" ref="0xb7722170"/>
        <function-ref name="isOn" scoped="" ref="0xb7722b50"/>
        <function-ref name="set" scoped="" ref="0xb7724c08"/>
        <function-ref name="start" scoped="" ref="0xb77223e8"/>
        <function-ref name="stop" scoped="" ref="0xb7722660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0xb7720e60" loc="50:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0xb7720e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7ed71e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xb771d3e8"/>
        <function-ref name="fired" scoped="" ref="0xb771f9f0"/>
        <function-ref name="get" scoped="" ref="0xb771f4d8"/>
        <function-ref name="reset" scoped="" ref="0xb771fc68"/>
        <function-ref name="isOn" scoped="" ref="0xb771d660"/>
        <function-ref name="set" scoped="" ref="0xb771f750"/>
        <function-ref name="start" scoped="" ref="0xb771fee0"/>
        <function-ref name="stop" scoped="" ref="0xb771d170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0xb771da78" loc="51:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0xb771da78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7ed71e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xb771b010"/>
        <function-ref name="fired" scoped="" ref="0xb771c5f0"/>
        <function-ref name="get" scoped="" ref="0xb771c0d8"/>
        <function-ref name="reset" scoped="" ref="0xb771c868"/>
        <function-ref name="isOn" scoped="" ref="0xb771b288"/>
        <function-ref name="set" scoped="" ref="0xb771c350"/>
        <function-ref name="start" scoped="" ref="0xb771cae0"/>
        <function-ref name="stop" scoped="" ref="0xb771cd58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb77272b8" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb77272b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7ed71e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xb7726d00"/>
        <function-ref name="test" scoped="" ref="0xb7726810"/>
        <function-ref name="get" scoped="" ref="0xb7727900"/>
        <function-ref name="setScale" scoped="" ref="0xb7725010"/>
        <function-ref name="getScale" scoped="" ref="0xb77252b0"/>
        <function-ref name="reset" scoped="" ref="0xb77260a8"/>
        <function-ref name="overflow" scoped="" ref="0xb7727e18"/>
        <function-ref name="isOn" scoped="" ref="0xb7726a88"/>
        <function-ref name="set" scoped="" ref="0xb7727b78"/>
        <function-ref name="start" scoped="" ref="0xb7726320"/>
        <function-ref name="stop" scoped="" ref="0xb7726598"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb76cadb8" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb76cadb8"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0xb7b8f5d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0xb7b8f5d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb76c9010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0xb76c9220" loc="47:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb76c9220"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7ed71e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xb76c1c68"/>
        <function-ref name="test" scoped="" ref="0xb76c1778"/>
        <function-ref name="get" scoped="" ref="0xb76c9868"/>
        <function-ref name="setScale" scoped="" ref="0xb76c1ee0"/>
        <function-ref name="getScale" scoped="" ref="0xb76c01c0"/>
        <function-ref name="reset" scoped="" ref="0xb76c1010"/>
        <function-ref name="overflow" scoped="" ref="0xb76c9d80"/>
        <function-ref name="isOn" scoped="" ref="0xb76c19f0"/>
        <function-ref name="set" scoped="" ref="0xb76c9ae0"/>
        <function-ref name="start" scoped="" ref="0xb76c1288"/>
        <function-ref name="stop" scoped="" ref="0xb76c1500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0xb6f91760" loc="55:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xb6f91760"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0xb7b8f3d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0xb7b8f3d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7b37d40"/>
            <typename><typedef-ref name="TOne" ref="0xb7b169a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7ed71e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb6f8fc18"/>
        <function-ref name="fired" scoped="" ref="0xb6f8f3e8"/>
        <function-ref name="startAt" scoped="" ref="0xb6f8f8d8"/>
        <function-ref name="isRunning" scoped="" ref="0xb6f8f660"/>
        <function-ref name="getAlarm" scoped="" ref="0xb6f8fe90"/>
        <function-ref name="start" scoped="" ref="0xb6f91eb0"/>
        <function-ref name="stop" scoped="" ref="0xb6f8f170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0xb6f8c480" loc="58:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0xb6f8c480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7ed71e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xb6f8a9f0"/>
        <function-ref name="fired" scoped="" ref="0xb6f8a010"/>
        <function-ref name="get" scoped="" ref="0xb6f8cac8"/>
        <function-ref name="reset" scoped="" ref="0xb6f8a288"/>
        <function-ref name="isOn" scoped="" ref="0xb6f8ac68"/>
        <function-ref name="set" scoped="" ref="0xb6f8cd40"/>
        <function-ref name="start" scoped="" ref="0xb6f8a500"/>
        <function-ref name="stop" scoped="" ref="0xb6f8a778"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0xb6f8e178" loc="57:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0xb6f8e178"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7ed71e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xb6f8dc68"/>
        <function-ref name="test" scoped="" ref="0xb6f8d778"/>
        <function-ref name="get" scoped="" ref="0xb6f8e7c0"/>
        <function-ref name="setScale" scoped="" ref="0xb6f8dee0"/>
        <function-ref name="getScale" scoped="" ref="0xb6f8c1c0"/>
        <function-ref name="reset" scoped="" ref="0xb6f8d010"/>
        <function-ref name="overflow" scoped="" ref="0xb6f8ecd8"/>
        <function-ref name="isOn" scoped="" ref="0xb6f8d9f0"/>
        <function-ref name="set" scoped="" ref="0xb6f8ea38"/>
        <function-ref name="start" scoped="" ref="0xb6f8d288"/>
        <function-ref name="stop" scoped="" ref="0xb6f8d500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0xb769e218" loc="24:/opt/tinyos-main-2.1.2/tos/platforms/mica/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb769e218"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7b37d40"/>
            <typename><typedef-ref name="T32khz" ref="0xb7b37f08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7ed7848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb769e968"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb769ee58"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb769ebe0"/>
        <function-ref name="overflow" scoped="" ref="0xb769c110"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0xb769cc18" loc="24:/opt/tinyos-main-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb769cc18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7b37d40"/>
            <typename><typedef-ref name="TOne" ref="0xb7b169a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7ed71e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb7699380"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb7699870"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb76995f8"/>
        <function-ref name="overflow" scoped="" ref="0xb7699ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0xb7697470" loc="45:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb7697470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7b37d40"/>
            <typename><typedef-ref name="TOne" ref="0xb7b169a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7ed71e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb7697bc0"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb768c0d8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb7697e38"/>
        <function-ref name="overflow" scoped="" ref="0xb768c350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0xb768c630" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb768c630"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7ed71e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xb768a0a8"/>
        <function-ref name="test" scoped="" ref="0xb768bba0"/>
        <function-ref name="get" scoped="" ref="0xb768cc78"/>
        <function-ref name="setScale" scoped="" ref="0xb768a320"/>
        <function-ref name="getScale" scoped="" ref="0xb768a5c0"/>
        <function-ref name="reset" scoped="" ref="0xb768b438"/>
        <function-ref name="overflow" scoped="" ref="0xb768b1c0"/>
        <function-ref name="isOn" scoped="" ref="0xb768be18"/>
        <function-ref name="set" scoped="" ref="0xb768cef0"/>
        <function-ref name="start" scoped="" ref="0xb768b6b0"/>
        <function-ref name="stop" scoped="" ref="0xb768b928"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0xb7687ae8" loc="63:/opt/tinyos-main-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0xb7687ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7b37d40"/>
            <typename><typedef-ref name="TOne" ref="0xb7b169a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7ed71e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb7677308"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb76777f8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb7677580"/>
        <function-ref name="overflow" scoped="" ref="0xb7677a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0xb769a7f0" loc="62:/opt/tinyos-main-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb769a7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7b37d40"/>
            <typename><typedef-ref name="T32khz" ref="0xb7b37f08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7ed7848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb7687010"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb7687500"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb7687288"/>
        <function-ref name="overflow" scoped="" ref="0xb7687778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0xb6f9b320" loc="61:/opt/tinyos-main-2.1.2/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xb6f9b320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7b37d40"/>
            <typename><typedef-ref name="T32khz" ref="0xb7b37f08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7ed7848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb6f9a840"/>
        <function-ref name="fired" scoped="" ref="0xb6f9a010"/>
        <function-ref name="startAt" scoped="" ref="0xb6f9a500"/>
        <function-ref name="isRunning" scoped="" ref="0xb6f9a288"/>
        <function-ref name="getAlarm" scoped="" ref="0xb6f9aab8"/>
        <function-ref name="start" scoped="" ref="0xb6f9ba70"/>
        <function-ref name="stop" scoped="" ref="0xb6f9bd10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0xb6f97078" loc="73:/opt/tinyos-main-2.1.2/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmFrom" scoped="" ref="0xb6f97078"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7b37d40"/>
            <typename><typedef-ref name="TOne" ref="0xb7b169a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7ed71e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb6f965c8"/>
        <function-ref name="fired" scoped="" ref="0xb6f97ce0"/>
        <function-ref name="startAt" scoped="" ref="0xb6f96288"/>
        <function-ref name="isRunning" scoped="" ref="0xb6f96010"/>
        <function-ref name="getAlarm" scoped="" ref="0xb6f96840"/>
        <function-ref name="start" scoped="" ref="0xb6f977c8"/>
        <function-ref name="stop" scoped="" ref="0xb6f97a68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0xb6f9ae08" loc="68:/opt/tinyos-main-2.1.2/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb6f9ae08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7b37d40"/>
            <typename><typedef-ref name="T32khz" ref="0xb7b37f08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7ed7848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb6f99570"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb6f99a60"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb6f997e8"/>
        <function-ref name="overflow" scoped="" ref="0xb6f99cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb76557a0" loc="18:/opt/tinyos-main-2.1.2/tos/system/NoInitC.nc">
      <component-ref qname="NoInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb76557a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7655978"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0xb764e660" loc="87:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFO" scoped="" ref="0xb764e660"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb764e838"/>
        <function-ref name="isInput" scoped="" ref="0xb764e918"/>
        <function-ref name="toggle" scoped="" ref="0xb764e9f8"/>
        <function-ref name="isOutput" scoped="" ref="0xb764ead8"/>
        <function-ref name="get" scoped="" ref="0xb764ebb8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb764ec98"/>
        <function-ref name="set" scoped="" ref="0xb764ed78"/>
        <function-ref name="clr" scoped="" ref="0xb764ee58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0xb764d068" loc="88:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFOP" scoped="" ref="0xb764d068"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb764d240"/>
        <function-ref name="isInput" scoped="" ref="0xb764d320"/>
        <function-ref name="toggle" scoped="" ref="0xb764d400"/>
        <function-ref name="isOutput" scoped="" ref="0xb764d4e0"/>
        <function-ref name="get" scoped="" ref="0xb764d5c0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb764d6a0"/>
        <function-ref name="set" scoped="" ref="0xb764d780"/>
        <function-ref name="clr" scoped="" ref="0xb764d860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0xb764da50" loc="89:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0xb764da50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb764dc28"/>
        <function-ref name="isInput" scoped="" ref="0xb764dd08"/>
        <function-ref name="toggle" scoped="" ref="0xb764dde8"/>
        <function-ref name="isOutput" scoped="" ref="0xb764dec8"/>
        <function-ref name="get" scoped="" ref="0xb764c010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb764c0f0"/>
        <function-ref name="set" scoped="" ref="0xb764c1d0"/>
        <function-ref name="clr" scoped="" ref="0xb764c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0xb764fc48" loc="86:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0xb764fc48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb764fe20"/>
        <function-ref name="isInput" scoped="" ref="0xb764ff00"/>
        <function-ref name="toggle" scoped="" ref="0xb764e010"/>
        <function-ref name="isOutput" scoped="" ref="0xb764e0f0"/>
        <function-ref name="get" scoped="" ref="0xb764e1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb764e2b0"/>
        <function-ref name="set" scoped="" ref="0xb764e390"/>
        <function-ref name="clr" scoped="" ref="0xb764e470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0xb764ce78" loc="91:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VREN" scoped="" ref="0xb764ce78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb764b070"/>
        <function-ref name="isInput" scoped="" ref="0xb764b150"/>
        <function-ref name="toggle" scoped="" ref="0xb764b230"/>
        <function-ref name="isOutput" scoped="" ref="0xb764b310"/>
        <function-ref name="get" scoped="" ref="0xb764b3f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb764b4d0"/>
        <function-ref name="set" scoped="" ref="0xb764b5b0"/>
        <function-ref name="clr" scoped="" ref="0xb764b690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0xb764f270" loc="85:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0xb764f270"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb764f448"/>
        <function-ref name="isInput" scoped="" ref="0xb764f528"/>
        <function-ref name="toggle" scoped="" ref="0xb764f608"/>
        <function-ref name="isOutput" scoped="" ref="0xb764f6e8"/>
        <function-ref name="get" scoped="" ref="0xb764f7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb764f8a8"/>
        <function-ref name="set" scoped="" ref="0xb764f988"/>
        <function-ref name="clr" scoped="" ref="0xb764fa68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0xb764c490" loc="90:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFD" scoped="" ref="0xb764c490"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb764c668"/>
        <function-ref name="isInput" scoped="" ref="0xb764c748"/>
        <function-ref name="toggle" scoped="" ref="0xb764c828"/>
        <function-ref name="isOutput" scoped="" ref="0xb764c908"/>
        <function-ref name="get" scoped="" ref="0xb764c9e8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb764cac8"/>
        <function-ref name="set" scoped="" ref="0xb764cba8"/>
        <function-ref name="clr" scoped="" ref="0xb764cc88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0xb76427f0" loc="39:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CaptureSFD" scoped="" ref="0xb76427f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0xb76429c8"/>
        <function-ref name="disable" scoped="" ref="0xb7642aa8"/>
        <function-ref name="captured" scoped="" ref="0xb7642b88"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0xb7642c68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0xb7642ef0" loc="40:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptCCA" scoped="" ref="0xb7642ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb76450e0"/>
        <function-ref name="disable" scoped="" ref="0xb76451c0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0xb76452a0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0xb7645380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0xb7645618" loc="41:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptFIFOP" scoped="" ref="0xb7645618"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb76457f0"/>
        <function-ref name="disable" scoped="" ref="0xb76458d0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0xb76459b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0xb7645a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0xb7641ad0" loc="42:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0xb7641ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0xb7641ca8"/>
        <function-ref name="disable" scoped="" ref="0xb7641d88"/>
        <function-ref name="captured" scoped="" ref="0xb7641e68"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0xb7640010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Capture" ref="0xb7640220" loc="43:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Capture" scoped="" ref="0xb7640220"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7ed71e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0xb7637ca0"/>
        <function-ref name="test" scoped="" ref="0xb76377b0"/>
        <function-ref name="get" scoped="" ref="0xb7640868"/>
        <function-ref name="captured" scoped="" ref="0xb7640d80"/>
        <function-ref name="reset" scoped="" ref="0xb7637048"/>
        <function-ref name="isOn" scoped="" ref="0xb7637a28"/>
        <function-ref name="set" scoped="" ref="0xb7640ae0"/>
        <function-ref name="start" scoped="" ref="0xb76372c0"/>
        <function-ref name="stop" scoped="" ref="0xb7637538"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0xb7635ed8" loc="9:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0xb7635ed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb76340c0"/>
        <function-ref name="fired" scoped="" ref="0xb76341a0"/>
        <function-ref name="disable" scoped="" ref="0xb7634280"/>
        <function-ref name="edge" scoped="" ref="0xb7634360"/>
        <function-ref name="enable" scoped="" ref="0xb7634440"/>
        <function-ref name="getValue" scoped="" ref="0xb7634520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0xb76358e0" loc="8:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0xb76358e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb7635ab8"/>
        <function-ref name="disable" scoped="" ref="0xb7635b98"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0xb7635c78"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0xb7635d58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int6" ref="0xb76236f8" loc="51:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int6" scoped="" ref="0xb76236f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb76238d0"/>
        <function-ref name="fired" scoped="" ref="0xb76239b0"/>
        <function-ref name="disable" scoped="" ref="0xb7623a90"/>
        <function-ref name="edge" scoped="" ref="0xb7623b70"/>
        <function-ref name="enable" scoped="" ref="0xb7623c50"/>
        <function-ref name="getValue" scoped="" ref="0xb7623d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1" ref="0xb7627af0" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1" scoped="" ref="0xb7627af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb7627cc8"/>
        <function-ref name="fired" scoped="" ref="0xb7627da8"/>
        <function-ref name="disable" scoped="" ref="0xb7627e88"/>
        <function-ref name="edge" scoped="" ref="0xb7626010"/>
        <function-ref name="enable" scoped="" ref="0xb76260f0"/>
        <function-ref name="getValue" scoped="" ref="0xb76261d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int4" ref="0xb76255d8" loc="49:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int4" scoped="" ref="0xb76255d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb76257b0"/>
        <function-ref name="fired" scoped="" ref="0xb7625890"/>
        <function-ref name="disable" scoped="" ref="0xb7625970"/>
        <function-ref name="edge" scoped="" ref="0xb7625a50"/>
        <function-ref name="enable" scoped="" ref="0xb7625b30"/>
        <function-ref name="getValue" scoped="" ref="0xb7625c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int7" ref="0xb7622010" loc="52:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int7" scoped="" ref="0xb7622010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb76221e8"/>
        <function-ref name="fired" scoped="" ref="0xb76222c8"/>
        <function-ref name="disable" scoped="" ref="0xb76223a8"/>
        <function-ref name="edge" scoped="" ref="0xb7622488"/>
        <function-ref name="enable" scoped="" ref="0xb7622568"/>
        <function-ref name="getValue" scoped="" ref="0xb7622648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2" ref="0xb7626418" loc="47:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2" scoped="" ref="0xb7626418"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb76265f0"/>
        <function-ref name="fired" scoped="" ref="0xb76266d0"/>
        <function-ref name="disable" scoped="" ref="0xb76267b0"/>
        <function-ref name="edge" scoped="" ref="0xb7626890"/>
        <function-ref name="enable" scoped="" ref="0xb7626970"/>
        <function-ref name="getValue" scoped="" ref="0xb7626a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int5" ref="0xb7625e58" loc="50:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int5" scoped="" ref="0xb7625e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb7623050"/>
        <function-ref name="fired" scoped="" ref="0xb7623130"/>
        <function-ref name="disable" scoped="" ref="0xb7623210"/>
        <function-ref name="edge" scoped="" ref="0xb76232f0"/>
        <function-ref name="enable" scoped="" ref="0xb76233d0"/>
        <function-ref name="getValue" scoped="" ref="0xb76234b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0" ref="0xb7627270" loc="45:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0" scoped="" ref="0xb7627270"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb7627448"/>
        <function-ref name="fired" scoped="" ref="0xb7627528"/>
        <function-ref name="disable" scoped="" ref="0xb7627608"/>
        <function-ref name="edge" scoped="" ref="0xb76276e8"/>
        <function-ref name="enable" scoped="" ref="0xb76277c8"/>
        <function-ref name="getValue" scoped="" ref="0xb76278a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3" ref="0xb7626c98" loc="48:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3" scoped="" ref="0xb7626c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb7626e70"/>
        <function-ref name="fired" scoped="" ref="0xb7625010"/>
        <function-ref name="disable" scoped="" ref="0xb76250f0"/>
        <function-ref name="edge" scoped="" ref="0xb76251d0"/>
        <function-ref name="enable" scoped="" ref="0xb76252b0"/>
        <function-ref name="getValue" scoped="" ref="0xb7625390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig6" ref="0xb761d728" loc="49:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig6" scoped="" ref="0xb761d728"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb761d900"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig1" ref="0xb761e010" loc="44:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig1" scoped="" ref="0xb761e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb761e1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig4" ref="0xb761ed78" loc="47:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig4" scoped="" ref="0xb761ed78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb761d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig7" ref="0xb761dba0" loc="50:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig7" scoped="" ref="0xb761dba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb761dd78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig2" ref="0xb761e488" loc="45:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig2" scoped="" ref="0xb761e488"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb761e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig5" ref="0xb761d2b0" loc="48:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig5" scoped="" ref="0xb761d2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb761d488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig0" ref="0xb761fb50" loc="43:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig0" scoped="" ref="0xb761fb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb761fd28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig3" ref="0xb761e900" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig3" scoped="" ref="0xb761e900"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb761ead8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0xb7620cf0" loc="44:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0xb7620cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb7620ec8"/>
        <function-ref name="fired" scoped="" ref="0xb7602010"/>
        <function-ref name="disable" scoped="" ref="0xb76020f0"/>
        <function-ref name="edge" scoped="" ref="0xb76021d0"/>
        <function-ref name="enable" scoped="" ref="0xb76022b0"/>
        <function-ref name="getValue" scoped="" ref="0xb7602390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0xb7602510" loc="45:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0xb7602510"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb76026e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0xb7601e68" loc="44:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0xb7601e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb7600050"/>
        <function-ref name="fired" scoped="" ref="0xb7600130"/>
        <function-ref name="disable" scoped="" ref="0xb7600210"/>
        <function-ref name="edge" scoped="" ref="0xb76002f0"/>
        <function-ref name="enable" scoped="" ref="0xb76003d0"/>
        <function-ref name="getValue" scoped="" ref="0xb76004b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0xb7600630" loc="45:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0xb7600630"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb7600808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0xb75fe010" loc="44:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0xb75fe010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb75fe1e8"/>
        <function-ref name="fired" scoped="" ref="0xb75fe2c8"/>
        <function-ref name="disable" scoped="" ref="0xb75fe3a8"/>
        <function-ref name="edge" scoped="" ref="0xb75fe488"/>
        <function-ref name="enable" scoped="" ref="0xb75fe568"/>
        <function-ref name="getValue" scoped="" ref="0xb75fe648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0xb75fe7c8" loc="45:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0xb75fe7c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb75fe9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0xb75fc228" loc="44:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0xb75fc228"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb75fc400"/>
        <function-ref name="fired" scoped="" ref="0xb75fc4e0"/>
        <function-ref name="disable" scoped="" ref="0xb75fc5c0"/>
        <function-ref name="edge" scoped="" ref="0xb75fc6a0"/>
        <function-ref name="enable" scoped="" ref="0xb75fc780"/>
        <function-ref name="getValue" scoped="" ref="0xb75fc860"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0xb75fc9e0" loc="45:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0xb75fc9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb75fcbb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0xb75fa408" loc="44:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0xb75fa408"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb75fa5e0"/>
        <function-ref name="fired" scoped="" ref="0xb75fa6c0"/>
        <function-ref name="disable" scoped="" ref="0xb75fa7a0"/>
        <function-ref name="edge" scoped="" ref="0xb75fa880"/>
        <function-ref name="enable" scoped="" ref="0xb75fa960"/>
        <function-ref name="getValue" scoped="" ref="0xb75faa40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0xb75fabc0" loc="45:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0xb75fabc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb75fad98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0xb75f75e8" loc="44:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0xb75f75e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb75f77c0"/>
        <function-ref name="fired" scoped="" ref="0xb75f78a0"/>
        <function-ref name="disable" scoped="" ref="0xb75f7980"/>
        <function-ref name="edge" scoped="" ref="0xb75f7a60"/>
        <function-ref name="enable" scoped="" ref="0xb75f7b40"/>
        <function-ref name="getValue" scoped="" ref="0xb75f7c20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0xb75f7da0" loc="45:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0xb75f7da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb75f6010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0xb75f5840" loc="44:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0xb75f5840"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb75f5a18"/>
        <function-ref name="fired" scoped="" ref="0xb75f5af8"/>
        <function-ref name="disable" scoped="" ref="0xb75f5bd8"/>
        <function-ref name="edge" scoped="" ref="0xb75f5cb8"/>
        <function-ref name="enable" scoped="" ref="0xb75f5d98"/>
        <function-ref name="getValue" scoped="" ref="0xb75f5e78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0xb75f4010" loc="45:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0xb75f4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb75f41e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0xb75f3a08" loc="44:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0xb75f3a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb75f3be0"/>
        <function-ref name="fired" scoped="" ref="0xb75f3cc0"/>
        <function-ref name="disable" scoped="" ref="0xb75f3da0"/>
        <function-ref name="edge" scoped="" ref="0xb75f3e80"/>
        <function-ref name="enable" scoped="" ref="0xb75f2010"/>
        <function-ref name="getValue" scoped="" ref="0xb75f20f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0xb75f2270" loc="45:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0xb75f2270"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb75f2448"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC_CCA" ref="0xb75eb250" loc="51:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC_CCA" scoped="" ref="0xb75eb250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb75eb428"/>
        <function-ref name="isInput" scoped="" ref="0xb75eb508"/>
        <function-ref name="toggle" scoped="" ref="0xb75eb5e8"/>
        <function-ref name="isOutput" scoped="" ref="0xb75eb6c8"/>
        <function-ref name="get" scoped="" ref="0xb75eb7a8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb75eb888"/>
        <function-ref name="set" scoped="" ref="0xb75eb968"/>
        <function-ref name="clr" scoped="" ref="0xb75eba48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0xb75eeb80" loc="47:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0xb75eeb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb75eed58"/>
        <function-ref name="disable" scoped="" ref="0xb75eee38"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0xb75eef18"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0xb75eb010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCATask" ref="0xb75eaac0" loc="69:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCATask" scoped="" ref="0xb75eaac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb75eac98"/>
        <function-ref name="runTask" scoped="" ref="0xb75ead78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0xb7477880" loc="69:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0xb7477880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7477b58"/>
        <function-ref name="write" scoped="" ref="0xb7477c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0xb747ec38" loc="47:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0xb747ec38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb747ee10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0xb747ae50" loc="63:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0xb747ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7479050"/>
        <function-ref name="write" scoped="" ref="0xb7479130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0xb74766a8" loc="72:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0xb74766a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7476880"/>
        <function-ref name="write" scoped="" ref="0xb7476960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0xb7476ae0" loc="73:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0xb7476ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7476cb8"/>
        <function-ref name="write" scoped="" ref="0xb7476d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0xb7470cb8" loc="94:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0xb7470cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7470e90"/>
        <function-ref name="write" scoped="" ref="0xb746f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0xb7471b20" loc="90:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0xb7471b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7471cf8"/>
        <function-ref name="write" scoped="" ref="0xb7471dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0xb747c6c0" loc="50:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0xb747c6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb747c898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0xb74712b0" loc="88:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0xb74712b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7471488"/>
        <function-ref name="write" scoped="" ref="0xb7471568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0xb74796e8" loc="65:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0xb74796e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb74798c0"/>
        <function-ref name="write" scoped="" ref="0xb74799a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0xb7477010" loc="67:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0xb7477010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb74771e8"/>
        <function-ref name="write" scoped="" ref="0xb74772c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0xb7474468" loc="79:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0xb7474468"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7474640"/>
        <function-ref name="write" scoped="" ref="0xb7474720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0xb7476f18" loc="74:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0xb7476f18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7475108"/>
        <function-ref name="write" scoped="" ref="0xb74751e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0xb747e070" loc="42:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0xb747e070"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0xb747e248"/>
        <function-ref name="abortRelease" scoped="" ref="0xb747e328"/>
        <function-ref name="attemptRelease" scoped="" ref="0xb747e408"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0xb747b4e8" loc="54:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0xb747b4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb747b6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0xb747b840" loc="55:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0xb747b840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb747ba98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0xb747bc18" loc="56:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0xb747bc18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb747bdf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0xb74716e8" loc="89:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0xb74716e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb74718c0"/>
        <function-ref name="write" scoped="" ref="0xb74719a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0xb747cd70" loc="52:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0xb747cd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb747b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0xb7479b20" loc="66:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0xb7479b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7479cf8"/>
        <function-ref name="write" scoped="" ref="0xb7479dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0xb74792b0" loc="64:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0xb74792b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7479488"/>
        <function-ref name="write" scoped="" ref="0xb7479568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0xb747e8e0" loc="46:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0xb747e8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb747eab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0xb7470880" loc="93:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0xb7470880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7470a58"/>
        <function-ref name="write" scoped="" ref="0xb7470b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0xb7470010" loc="91:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0xb7470010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb74701e8"/>
        <function-ref name="write" scoped="" ref="0xb74702c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0xb74748a0" loc="80:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0xb74748a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7474a78"/>
        <function-ref name="write" scoped="" ref="0xb7474b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0xb7473e38" loc="87:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0xb7473e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7471050"/>
        <function-ref name="write" scoped="" ref="0xb7471130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0xb74757a0" loc="76:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0xb74757a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7475978"/>
        <function-ref name="write" scoped="" ref="0xb7475a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0xb746f190" loc="97:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0xb746f190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0xb746f568"/>
        <function-ref name="writeDone" scoped="" ref="0xb746f648"/>
        <function-ref name="write" scoped="" ref="0xb746f728"/>
        <function-ref name="beginRead" scoped="" ref="0xb746f808"/>
        <function-ref name="readDone" scoped="" ref="0xb746f8e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0xb747e588" loc="45:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0xb747e588"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb747e760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0xb747aa18" loc="62:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0xb747aa18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb747abf0"/>
        <function-ref name="write" scoped="" ref="0xb747acd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0xb7477448" loc="68:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0xb7477448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7477620"/>
        <function-ref name="write" scoped="" ref="0xb7477700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0xb7475368" loc="75:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0xb7475368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7475540"/>
        <function-ref name="write" scoped="" ref="0xb7475620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0xb7477db8" loc="70:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0xb7477db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7476010"/>
        <function-ref name="write" scoped="" ref="0xb74760f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0xb747c010" loc="48:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0xb747c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb747c1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0xb7476270" loc="71:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0xb7476270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7476448"/>
        <function-ref name="write" scoped="" ref="0xb7476528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb747f9a0" loc="41:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb747f9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb747fb78"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb747fc58"/>
        <function-ref name="request" scoped="" ref="0xb747fd38"/>
        <function-ref name="granted" scoped="" ref="0xb747fe18"/>
        <function-ref name="isOwner" scoped="" ref="0xb747fef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0xb747a010" loc="57:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0xb747a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb747a1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0xb747a6c0" loc="59:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0xb747a6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb747a898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0xb7473a00" loc="86:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0xb7473a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7473bd8"/>
        <function-ref name="write" scoped="" ref="0xb7473cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0xb74735c8" loc="85:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0xb74735c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb74737a0"/>
        <function-ref name="write" scoped="" ref="0xb7473880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0xb747b190" loc="53:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0xb747b190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb747b368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0xb7473190" loc="82:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0xb7473190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7473368"/>
        <function-ref name="write" scoped="" ref="0xb7473448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0xb7470448" loc="92:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0xb7470448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7470620"/>
        <function-ref name="write" scoped="" ref="0xb7470700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0xb7474cd8" loc="81:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0xb7474cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7474eb0"/>
        <function-ref name="write" scoped="" ref="0xb7473010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0xb747c368" loc="49:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0xb747c368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb747c540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0xb7474030" loc="78:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0xb7474030"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7474208"/>
        <function-ref name="write" scoped="" ref="0xb74742e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0xb747ca18" loc="51:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0xb747ca18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb747cbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0xb7475bd8" loc="77:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0xb7475bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7475db0"/>
        <function-ref name="write" scoped="" ref="0xb7475e90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0xb747a368" loc="58:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0xb747a368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb747a540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0xb746fa68" loc="98:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0xb746fa68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0xb746fc40"/>
        <function-ref name="writeDone" scoped="" ref="0xb746fd20"/>
        <function-ref name="write" scoped="" ref="0xb746fe00"/>
        <function-ref name="beginRead" scoped="" ref="0xb746fee0"/>
        <function-ref name="readDone" scoped="" ref="0xb746e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0xb75c4340" loc="41:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Fifo" scoped="" ref="0xb75c4340"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0xb75c4518"/>
        <function-ref name="writeDone" scoped="" ref="0xb75c45f8"/>
        <function-ref name="write" scoped="" ref="0xb75c46d8"/>
        <function-ref name="beginRead" scoped="" ref="0xb75c47b8"/>
        <function-ref name="readDone" scoped="" ref="0xb75c4898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0xb75c5a90" loc="40:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0xb75c5a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0xb75c5c68"/>
        <function-ref name="abortRelease" scoped="" ref="0xb75c5d48"/>
        <function-ref name="attemptRelease" scoped="" ref="0xb75c5e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0xb75c4d88" loc="42:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ram" scoped="" ref="0xb75c4d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0xb7ed71e8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb75c3010"/>
        <function-ref name="write" scoped="" ref="0xb75c30f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0xb75c3600" loc="43:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Reg" scoped="" ref="0xb75c3600"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb75c37d8"/>
        <function-ref name="write" scoped="" ref="0xb75c38b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb75c5340" loc="39:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb75c5340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb75c5518"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb75c55f8"/>
        <function-ref name="request" scoped="" ref="0xb75c56d8"/>
        <function-ref name="granted" scoped="" ref="0xb75c57b8"/>
        <function-ref name="isOwner" scoped="" ref="0xb75c5898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0xb75c3dd8" loc="44:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Strobe" scoped="" ref="0xb75c3dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb75c1010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0xb75b6dc8" loc="55:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0xb75b6dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb75ba010"/>
        <function-ref name="sendDone" scoped="" ref="0xb75ba0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0xb75bec28" loc="46:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Fifo" scoped="" ref="0xb75bec28"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0xb75bee00"/>
        <function-ref name="writeDone" scoped="" ref="0xb75beee0"/>
        <function-ref name="write" scoped="" ref="0xb75bd010"/>
        <function-ref name="beginRead" scoped="" ref="0xb75bd0f0"/>
        <function-ref name="readDone" scoped="" ref="0xb75bd1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0xb75c19b0" loc="44:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0xb75c19b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0xb75c1b88"/>
        <function-ref name="abortRelease" scoped="" ref="0xb75c1c68"/>
        <function-ref name="attemptRelease" scoped="" ref="0xb75c1d48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0xb75bba88" loc="54:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0xb75bba88"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0xb75bbc60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0xb75ba308" loc="56:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WorkingState" scoped="" ref="0xb75ba308"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0xb75ba4e0"/>
        <function-ref name="toIdle" scoped="" ref="0xb75ba5c0"/>
        <function-ref name="isState" scoped="" ref="0xb75ba6a0"/>
        <function-ref name="isIdle" scoped="" ref="0xb75ba780"/>
        <function-ref name="requestState" scoped="" ref="0xb75ba860"/>
        <function-ref name="forceState" scoped="" ref="0xb75ba940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0xb75bca70" loc="53:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0xb75bca70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb75bcc48"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb75bcd28"/>
        <function-ref name="request" scoped="" ref="0xb75bce08"/>
        <function-ref name="granted" scoped="" ref="0xb75bcee8"/>
        <function-ref name="isOwner" scoped="" ref="0xb75bb010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0xb75bd6a0" loc="47:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ram" scoped="" ref="0xb75bd6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0xb7ed71e8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb75bd878"/>
        <function-ref name="write" scoped="" ref="0xb75bd958"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0xb75bde48" loc="48:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Reg" scoped="" ref="0xb75bde48"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb75bc050"/>
        <function-ref name="write" scoped="" ref="0xb75bc130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xb75baab0" loc="57:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xb75baab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb75bac88"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb75bad68"/>
        <function-ref name="led1On" scoped="" ref="0xb75bae48"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb75baf28"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb75b9018"/>
        <function-ref name="get" scoped="" ref="0xb75b90f8"/>
        <function-ref name="led1Off" scoped="" ref="0xb75b91d8"/>
        <function-ref name="led2Off" scoped="" ref="0xb75b9558"/>
        <function-ref name="set" scoped="" ref="0xb75b92b8"/>
        <function-ref name="led0On" scoped="" ref="0xb75b9398"/>
        <function-ref name="led2On" scoped="" ref="0xb75b9478"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb75be1f8" loc="45:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb75be1f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb75be3d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb75be4b0"/>
        <function-ref name="request" scoped="" ref="0xb75be590"/>
        <function-ref name="granted" scoped="" ref="0xb75be670"/>
        <function-ref name="isOwner" scoped="" ref="0xb75be750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0xb75b2818" loc="88:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grant" scoped="" ref="0xb75b2818"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb75b29f0"/>
        <function-ref name="runTask" scoped="" ref="0xb75b2ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0xb75bc630" loc="49:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Strobe" scoped="" ref="0xb75bc630"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb75bc808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0xb757de40" loc="67:/opt/tinyos-main-2.1.2/tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0xb757de40"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0xb7580050"/>
        <function-ref name="toIdle" scoped="" ref="0xb7580130"/>
        <function-ref name="isState" scoped="" ref="0xb7580210"/>
        <function-ref name="isIdle" scoped="" ref="0xb75802f0"/>
        <function-ref name="requestState" scoped="" ref="0xb75803d0"/>
        <function-ref name="forceState" scoped="" ref="0xb75804b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0xb757b100" loc="66:/opt/tinyos-main-2.1.2/tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0xb757b100"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0xb757b2d8"/>
        <function-ref name="toIdle" scoped="" ref="0xb757b3b8"/>
        <function-ref name="isState" scoped="" ref="0xb757b498"/>
        <function-ref name="isIdle" scoped="" ref="0xb757b578"/>
        <function-ref name="requestState" scoped="" ref="0xb757b658"/>
        <function-ref name="forceState" scoped="" ref="0xb757b738"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb7578128" loc="66:/opt/tinyos-main-2.1.2/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb7578128"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7578300"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0xb7578758" loc="67:/opt/tinyos-main-2.1.2/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0xb7578758"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0xb7578930"/>
        <function-ref name="toIdle" scoped="" ref="0xb7578a10"/>
        <function-ref name="isState" scoped="" ref="0xb7578af0"/>
        <function-ref name="isIdle" scoped="" ref="0xb7578bd0"/>
        <function-ref name="requestState" scoped="" ref="0xb7578cb0"/>
        <function-ref name="forceState" scoped="" ref="0xb7578d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0xb74ab8d8" loc="43:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0xb74ab8d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb74abab0"/>
        <function-ref name="sendDone" scoped="" ref="0xb74abb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0xb74ab5a0" loc="42:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0xb74ab5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0xb74ab778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb757cb70" loc="39:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb757cb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb757cd48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb757cea8" loc="40:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb757cea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb74ab0c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb74ab1a0"/>
        <function-ref name="request" scoped="" ref="0xb74ab280"/>
        <function-ref name="granted" scoped="" ref="0xb74ab360"/>
        <function-ref name="isOwner" scoped="" ref="0xb74ab440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0xb7566648" loc="84:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0xb7566648"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb7566820"/>
        <function-ref name="sendDone" scoped="" ref="0xb7566900"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0xb756ad50" loc="82:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0xb756ad50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0xb756af28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb756a9d0" loc="81:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb756a9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb756aba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0xb7566010" loc="83:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0xb7566010"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0xb75661e8"/>
        <function-ref name="splitReadWrite" scoped="" ref="0xb75662c8"/>
        <function-ref name="splitRead" scoped="" ref="0xb75663a8"/>
        <function-ref name="write" scoped="" ref="0xb7566488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb7566d98" loc="85:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb7566d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb7564010"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb75640f0"/>
        <function-ref name="request" scoped="" ref="0xb75641d0"/>
        <function-ref name="granted" scoped="" ref="0xb75642b0"/>
        <function-ref name="isOwner" scoped="" ref="0xb7564390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0xb7539860" loc="296:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0xb7539860"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb7539a38"/>
        <function-ref name="runTask" scoped="" ref="0xb7539b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0xb755fd10" loc="94:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0xb755fd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb755fee8"/>
        <function-ref name="sendDone" scoped="" ref="0xb755e010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceArbiter" ref="0xb755c158" loc="99:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceArbiter" scoped="" ref="0xb755c158"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb755c330"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb755c410"/>
        <function-ref name="request" scoped="" ref="0xb755c4f0"/>
        <function-ref name="granted" scoped="" ref="0xb755c5d0"/>
        <function-ref name="isOwner" scoped="" ref="0xb755c6b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0xb755f370" loc="92:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0xb755f370"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0xb755f548"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb755f010" loc="91:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb755f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb755f1e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0xb754d4d0" loc="98:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0xb754d4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0xb754d6a8"/>
        <function-ref name="sleep" scoped="" ref="0xb755db10"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0xb754d868"/>
        <function-ref name="dataReady" scoped="" ref="0xb755dbf0"/>
        <function-ref name="initMaster" scoped="" ref="0xb754da28"/>
        <function-ref name="setMasterBit" scoped="" ref="0xb754db08"/>
        <function-ref name="enableInterrupt" scoped="" ref="0xb754dbe8"/>
        <function-ref name="read" scoped="" ref="0xb754dcc8"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0xb754dda8"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0xb754de88"/>
        <function-ref name="setClock" scoped="" ref="0xb755d010"/>
        <function-ref name="isInterruptPending" scoped="" ref="0xb755d0f0"/>
        <function-ref name="setClockPolarity" scoped="" ref="0xb755d1d0"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0xb755d330"/>
        <function-ref name="setDataOrder" scoped="" ref="0xb755d410"/>
        <function-ref name="write" scoped="" ref="0xb755d4f0"/>
        <function-ref name="enableSpi" scoped="" ref="0xb755d5d0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0xb755d6b0"/>
        <function-ref name="getClockPhase" scoped="" ref="0xb755d790"/>
        <function-ref name="getClock" scoped="" ref="0xb755d870"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0xb755d950"/>
        <function-ref name="getClockPolarity" scoped="" ref="0xb754d788"/>
        <function-ref name="setClockPhase" scoped="" ref="0xb754d948"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0xb755da30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0xb755f6f8" loc="93:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0xb755f6f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0xb755f8d0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0xb755f9b0"/>
        <function-ref name="splitRead" scoped="" ref="0xb755fa90"/>
        <function-ref name="write" scoped="" ref="0xb755fb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb755e488" loc="95:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb755e488"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb755e660"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb755e740"/>
        <function-ref name="request" scoped="" ref="0xb755e820"/>
        <function-ref name="granted" scoped="" ref="0xb755e900"/>
        <function-ref name="isOwner" scoped="" ref="0xb755e9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0xb754a7b8" loc="100:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0xb754a7b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0xb754a990"/>
        <function-ref name="userId" scoped="" ref="0xb754aa70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0xb754ac38" loc="101:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0xb754ac38"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0xb754ae10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0xb75213d0" loc="76:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0xb75213d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0xb75215a8"/>
        <function-ref name="sleep" scoped="" ref="0xb751ea30"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0xb7521768"/>
        <function-ref name="dataReady" scoped="" ref="0xb751eb10"/>
        <function-ref name="initMaster" scoped="" ref="0xb7521928"/>
        <function-ref name="setMasterBit" scoped="" ref="0xb7521a08"/>
        <function-ref name="enableInterrupt" scoped="" ref="0xb7521ae8"/>
        <function-ref name="read" scoped="" ref="0xb7521bc8"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0xb7521ca8"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0xb7521d88"/>
        <function-ref name="setClock" scoped="" ref="0xb7521e68"/>
        <function-ref name="isInterruptPending" scoped="" ref="0xb751e010"/>
        <function-ref name="setClockPolarity" scoped="" ref="0xb751e0f0"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0xb751e250"/>
        <function-ref name="setDataOrder" scoped="" ref="0xb751e330"/>
        <function-ref name="write" scoped="" ref="0xb751e410"/>
        <function-ref name="enableSpi" scoped="" ref="0xb751e4f0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0xb751e5d0"/>
        <function-ref name="getClockPhase" scoped="" ref="0xb751e6b0"/>
        <function-ref name="getClock" scoped="" ref="0xb751e790"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0xb751e870"/>
        <function-ref name="getClockPolarity" scoped="" ref="0xb7521688"/>
        <function-ref name="setClockPhase" scoped="" ref="0xb7521848"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0xb751e950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0xb75174a0" loc="81:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0xb75174a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7517678"/>
        <function-ref name="isInput" scoped="" ref="0xb7517758"/>
        <function-ref name="toggle" scoped="" ref="0xb7517838"/>
        <function-ref name="isOutput" scoped="" ref="0xb7517918"/>
        <function-ref name="get" scoped="" ref="0xb75179f8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7517ad8"/>
        <function-ref name="set" scoped="" ref="0xb7517bb8"/>
        <function-ref name="clr" scoped="" ref="0xb7517c98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0xb7518050" loc="79:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0xb7518050"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7518228"/>
        <function-ref name="isInput" scoped="" ref="0xb7518308"/>
        <function-ref name="toggle" scoped="" ref="0xb75183e8"/>
        <function-ref name="isOutput" scoped="" ref="0xb75184c8"/>
        <function-ref name="get" scoped="" ref="0xb75185a8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7518688"/>
        <function-ref name="set" scoped="" ref="0xb7518768"/>
        <function-ref name="clr" scoped="" ref="0xb7518848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0xb7516658" loc="78:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0xb7516658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7516830"/>
        <function-ref name="isInput" scoped="" ref="0xb7516910"/>
        <function-ref name="toggle" scoped="" ref="0xb75169f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7516ad0"/>
        <function-ref name="get" scoped="" ref="0xb7516bb0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7516c90"/>
        <function-ref name="set" scoped="" ref="0xb7516d70"/>
        <function-ref name="clr" scoped="" ref="0xb7516e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0xb7516198" loc="75:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0xb7516198"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb7516370"/>
        <function-ref name="stop" scoped="" ref="0xb7516450"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0xb7517ea0" loc="82:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0xb7517ea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0xb75150c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0xb751d7e0" loc="74:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0xb751d7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0xb751d9b8"/>
        <function-ref name="sleep" scoped="" ref="0xb751adb0"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0xb751db78"/>
        <function-ref name="dataReady" scoped="" ref="0xb751ae90"/>
        <function-ref name="initMaster" scoped="" ref="0xb751dd38"/>
        <function-ref name="setMasterBit" scoped="" ref="0xb751de18"/>
        <function-ref name="enableInterrupt" scoped="" ref="0xb751def8"/>
        <function-ref name="read" scoped="" ref="0xb751a010"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0xb751a0f0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0xb751a1d0"/>
        <function-ref name="setClock" scoped="" ref="0xb751a2b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0xb751a390"/>
        <function-ref name="setClockPolarity" scoped="" ref="0xb751a470"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0xb751a5d0"/>
        <function-ref name="setDataOrder" scoped="" ref="0xb751a6b0"/>
        <function-ref name="write" scoped="" ref="0xb751a790"/>
        <function-ref name="enableSpi" scoped="" ref="0xb751a870"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0xb751a950"/>
        <function-ref name="getClockPhase" scoped="" ref="0xb751aa30"/>
        <function-ref name="getClock" scoped="" ref="0xb751ab10"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0xb751abf0"/>
        <function-ref name="getClockPolarity" scoped="" ref="0xb751da98"/>
        <function-ref name="setClockPhase" scoped="" ref="0xb751dc58"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0xb751acd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0xb7518a38" loc="80:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0xb7518a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7518c10"/>
        <function-ref name="isInput" scoped="" ref="0xb7518cf0"/>
        <function-ref name="toggle" scoped="" ref="0xb7518dd0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7518eb0"/>
        <function-ref name="get" scoped="" ref="0xb7517010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb75170f0"/>
        <function-ref name="set" scoped="" ref="0xb75171d0"/>
        <function-ref name="clr" scoped="" ref="0xb75172b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0xb74ed8b0" loc="86:/opt/tinyos-main-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0xb74ed8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0xb74eda98"/>
        <function-ref name="immediateRequested" scoped="" ref="0xb74edb78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0xb74b7208" loc="89:/opt/tinyos-main-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0xb74b7208"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0xb74b73f0"/>
        <function-ref name="configure" scoped="" ref="0xb74b74d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb74ed170" loc="85:/opt/tinyos-main-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb74ed170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb74ed358"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb74ed438"/>
        <function-ref name="request" scoped="" ref="0xb74ed518"/>
        <function-ref name="granted" scoped="" ref="0xb74ed5f8"/>
        <function-ref name="isOwner" scoped="" ref="0xb74ed6d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0xb74edcb8" loc="87:/opt/tinyos-main-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0xb74edcb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0xb74ede90"/>
        <function-ref name="userId" scoped="" ref="0xb74b7010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb6f13200" loc="44:/opt/tinyos-main-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb6f13200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb6f133d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0xb6f13538" loc="45:/opt/tinyos-main-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0xb6f13538"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0xb6f13710"/>
        <function-ref name="isEmpty" scoped="" ref="0xb6f137f0"/>
        <function-ref name="isEnqueued" scoped="" ref="0xb6f138d0"/>
        <function-ref name="dequeue" scoped="" ref="0xb6f139b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0xb6f12cb8" loc="52:/opt/tinyos-main-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0xb6f12cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0xb6f12ea0"/>
        <function-ref name="immediateRequested" scoped="" ref="0xb6f11010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0xb6f11610" loc="56:/opt/tinyos-main-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0xb6f11610"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0xb6f117f8"/>
        <function-ref name="configure" scoped="" ref="0xb6f118d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0xb6f11a38" loc="57:/opt/tinyos-main-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0xb6f11a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0xb6f11c10"/>
        <function-ref name="isEmpty" scoped="" ref="0xb6f11cf0"/>
        <function-ref name="isEnqueued" scoped="" ref="0xb6f11dd0"/>
        <function-ref name="dequeue" scoped="" ref="0xb6f11eb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb6f12578" loc="51:/opt/tinyos-main-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb6f12578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb6f12760"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb6f12840"/>
        <function-ref name="request" scoped="" ref="0xb6f12920"/>
        <function-ref name="granted" scoped="" ref="0xb6f12a00"/>
        <function-ref name="isOwner" scoped="" ref="0xb6f12ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0xb6f11150" loc="53:/opt/tinyos-main-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0xb6f11150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0xb6f11328"/>
        <function-ref name="userId" scoped="" ref="0xb6f11408"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0xb6f0f050" loc="69:/opt/tinyos-main-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0xb6f0f050"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb6f0f228"/>
        <function-ref name="runTask" scoped="" ref="0xb6f0f308"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0xb74b2800" loc="45:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
      <component-ref qname="HplCC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0xb74b2800"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb74b29d8"/>
        <function-ref name="isInput" scoped="" ref="0xb74b2ab8"/>
        <function-ref name="toggle" scoped="" ref="0xb74b2b98"/>
        <function-ref name="isOutput" scoped="" ref="0xb74b2c78"/>
        <function-ref name="get" scoped="" ref="0xb74b2d58"/>
        <function-ref name="makeOutput" scoped="" ref="0xb74b2e38"/>
        <function-ref name="set" scoped="" ref="0xb74b2f18"/>
        <function-ref name="clr" scoped="" ref="0xb74b1010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb74b58e8" loc="40:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
      <component-ref qname="HplCC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb74b58e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb74b5ac0"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb74b5ba0"/>
        <function-ref name="request" scoped="" ref="0xb74b5c80"/>
        <function-ref name="granted" scoped="" ref="0xb74b5d60"/>
        <function-ref name="isOwner" scoped="" ref="0xb74b5e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubResource" ref="0xb74b20d0" loc="44:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
      <component-ref qname="HplCC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubResource" scoped="" ref="0xb74b20d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb74b22a8"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb74b2388"/>
        <function-ref name="request" scoped="" ref="0xb74b2468"/>
        <function-ref name="granted" scoped="" ref="0xb74b2548"/>
        <function-ref name="isOwner" scoped="" ref="0xb74b2628"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0xb74aacb0" loc="46:/opt/tinyos-main-2.1.2/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xb74aacb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb74aae88"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb74a7010"/>
        <function-ref name="led1On" scoped="" ref="0xb74a70f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb74a71d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb74a72b0"/>
        <function-ref name="get" scoped="" ref="0xb74a7390"/>
        <function-ref name="led1Off" scoped="" ref="0xb74a7470"/>
        <function-ref name="led2Off" scoped="" ref="0xb74a77f0"/>
        <function-ref name="set" scoped="" ref="0xb74a7550"/>
        <function-ref name="led0On" scoped="" ref="0xb74a7630"/>
        <function-ref name="led2On" scoped="" ref="0xb74a7710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0xb74a30b0" loc="50:/opt/tinyos-main-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0xb74a30b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb74a3288"/>
        <function-ref name="isInput" scoped="" ref="0xb74a3368"/>
        <function-ref name="toggle" scoped="" ref="0xb74a3448"/>
        <function-ref name="isOutput" scoped="" ref="0xb74a3528"/>
        <function-ref name="get" scoped="" ref="0xb74a3608"/>
        <function-ref name="makeOutput" scoped="" ref="0xb74a36e8"/>
        <function-ref name="set" scoped="" ref="0xb74a37c8"/>
        <function-ref name="clr" scoped="" ref="0xb74a38a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb74a4090" loc="46:/opt/tinyos-main-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb74a4090"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb74a4268"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0xb74a3a98" loc="51:/opt/tinyos-main-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0xb74a3a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb74a3c70"/>
        <function-ref name="isInput" scoped="" ref="0xb74a3d50"/>
        <function-ref name="toggle" scoped="" ref="0xb74a3e30"/>
        <function-ref name="isOutput" scoped="" ref="0xb74a3f10"/>
        <function-ref name="get" scoped="" ref="0xb74a2010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb74a20f0"/>
        <function-ref name="set" scoped="" ref="0xb74a21d0"/>
        <function-ref name="clr" scoped="" ref="0xb74a22b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0xb74a43d8" loc="47:/opt/tinyos-main-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xb74a43d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb74a45b0"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb74a4690"/>
        <function-ref name="led1On" scoped="" ref="0xb74a4770"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb74a4850"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb74a4930"/>
        <function-ref name="get" scoped="" ref="0xb74a4a10"/>
        <function-ref name="led1Off" scoped="" ref="0xb74a4af0"/>
        <function-ref name="led2Off" scoped="" ref="0xb74a4e70"/>
        <function-ref name="set" scoped="" ref="0xb74a4bd0"/>
        <function-ref name="led0On" scoped="" ref="0xb74a4cb0"/>
        <function-ref name="led2On" scoped="" ref="0xb74a4d90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0xb74a24a0" loc="52:/opt/tinyos-main-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0xb74a24a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb74a2678"/>
        <function-ref name="isInput" scoped="" ref="0xb74a2758"/>
        <function-ref name="toggle" scoped="" ref="0xb74a2838"/>
        <function-ref name="isOutput" scoped="" ref="0xb74a2918"/>
        <function-ref name="get" scoped="" ref="0xb74a29f8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb74a2ad8"/>
        <function-ref name="set" scoped="" ref="0xb74a2bb8"/>
        <function-ref name="clr" scoped="" ref="0xb74a2c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0xb74a6e50" loc="44:/opt/tinyos-main-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0xb74a6e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7492050"/>
        <function-ref name="isInput" scoped="" ref="0xb7492130"/>
        <function-ref name="toggle" scoped="" ref="0xb7492210"/>
        <function-ref name="isOutput" scoped="" ref="0xb74922f0"/>
        <function-ref name="get" scoped="" ref="0xb74923d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb74924b0"/>
        <function-ref name="set" scoped="" ref="0xb7492590"/>
        <function-ref name="clr" scoped="" ref="0xb7492670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0xb7492880" loc="45:/opt/tinyos-main-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0xb7492880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7492a58"/>
        <function-ref name="isInput" scoped="" ref="0xb7492b38"/>
        <function-ref name="toggle" scoped="" ref="0xb7492c18"/>
        <function-ref name="isOutput" scoped="" ref="0xb7492cf8"/>
        <function-ref name="get" scoped="" ref="0xb7492dd8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7492eb8"/>
        <function-ref name="set" scoped="" ref="0xb7491010"/>
        <function-ref name="clr" scoped="" ref="0xb74910f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0xb7491c88" loc="47:/opt/tinyos-main-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb7491c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7491e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0xb7491300" loc="46:/opt/tinyos-main-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0xb7491300"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb74914d8"/>
        <function-ref name="isInput" scoped="" ref="0xb74915b8"/>
        <function-ref name="toggle" scoped="" ref="0xb7491698"/>
        <function-ref name="isOutput" scoped="" ref="0xb7491778"/>
        <function-ref name="get" scoped="" ref="0xb7491858"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7491938"/>
        <function-ref name="set" scoped="" ref="0xb7491a18"/>
        <function-ref name="clr" scoped="" ref="0xb7491af8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0xb74625c8" loc="69:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0xb74625c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb74628a0"/>
        <function-ref name="write" scoped="" ref="0xb7462980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0xb7468920" loc="47:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0xb7468920"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb7468af8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0xb7464af8" loc="63:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0xb7464af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7464cd0"/>
        <function-ref name="write" scoped="" ref="0xb7464db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0xb7461448" loc="72:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0xb7461448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7461620"/>
        <function-ref name="write" scoped="" ref="0xb7461700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0xb7461880" loc="73:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0xb7461880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7461a58"/>
        <function-ref name="write" scoped="" ref="0xb7461b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0xb745bb20" loc="94:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0xb745bb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb745bcf8"/>
        <function-ref name="write" scoped="" ref="0xb745bdd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0xb745ca00" loc="90:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0xb745ca00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb745cbd8"/>
        <function-ref name="write" scoped="" ref="0xb745ccb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0xb7467368" loc="50:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0xb7467368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb7467540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0xb745c190" loc="88:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0xb745c190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb745c368"/>
        <function-ref name="write" scoped="" ref="0xb745c448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0xb7463448" loc="65:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0xb7463448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7463620"/>
        <function-ref name="write" scoped="" ref="0xb7463700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0xb7463cb8" loc="67:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0xb7463cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7463e90"/>
        <function-ref name="write" scoped="" ref="0xb7462010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0xb745e2b0" loc="79:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0xb745e2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb745e488"/>
        <function-ref name="write" scoped="" ref="0xb745e568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0xb7461cb8" loc="74:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0xb7461cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7461e90"/>
        <function-ref name="write" scoped="" ref="0xb745f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0xb7469c78" loc="42:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0xb7469c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0xb7469e50"/>
        <function-ref name="abortRelease" scoped="" ref="0xb7468010"/>
        <function-ref name="attemptRelease" scoped="" ref="0xb74680f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0xb7465190" loc="54:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0xb7465190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb7465368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0xb74654e8" loc="55:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0xb74654e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb7465740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0xb74658c0" loc="56:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0xb74658c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb7465a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0xb745c5c8" loc="89:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0xb745c5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb745c7a0"/>
        <function-ref name="write" scoped="" ref="0xb745c880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0xb7467a18" loc="52:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0xb7467a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb7467bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0xb7463880" loc="66:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0xb7463880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7463a58"/>
        <function-ref name="write" scoped="" ref="0xb7463b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0xb7463010" loc="64:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0xb7463010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb74631e8"/>
        <function-ref name="write" scoped="" ref="0xb74632c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0xb74685c8" loc="46:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0xb74685c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb74687a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0xb745b6e8" loc="93:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0xb745b6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb745b8c0"/>
        <function-ref name="write" scoped="" ref="0xb745b9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0xb745ce38" loc="91:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0xb745ce38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb745b050"/>
        <function-ref name="write" scoped="" ref="0xb745b130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0xb745e6e8" loc="80:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0xb745e6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb745e8c0"/>
        <function-ref name="write" scoped="" ref="0xb745e9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0xb745dcb8" loc="87:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0xb745dcb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb745de90"/>
        <function-ref name="write" scoped="" ref="0xb745c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0xb745f5c8" loc="76:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0xb745f5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb745f7a0"/>
        <function-ref name="write" scoped="" ref="0xb745f880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0xb745a010" loc="97:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0xb745a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0xb745a3e8"/>
        <function-ref name="writeDone" scoped="" ref="0xb745a4c8"/>
        <function-ref name="write" scoped="" ref="0xb745a5a8"/>
        <function-ref name="beginRead" scoped="" ref="0xb745a688"/>
        <function-ref name="readDone" scoped="" ref="0xb745a768"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0xb7468270" loc="45:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0xb7468270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb7468448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0xb74646c0" loc="62:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0xb74646c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7464898"/>
        <function-ref name="write" scoped="" ref="0xb7464978"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0xb7462190" loc="68:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0xb7462190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7462368"/>
        <function-ref name="write" scoped="" ref="0xb7462448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0xb745f190" loc="75:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0xb745f190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb745f368"/>
        <function-ref name="write" scoped="" ref="0xb745f448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0xb7462b00" loc="70:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0xb7462b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7462cd8"/>
        <function-ref name="write" scoped="" ref="0xb7462db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0xb7468c78" loc="48:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0xb7468c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb7468e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0xb7461010" loc="71:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0xb7461010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb74611e8"/>
        <function-ref name="write" scoped="" ref="0xb74612c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb74695c0" loc="41:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb74695c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb7469798"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb7469878"/>
        <function-ref name="request" scoped="" ref="0xb7469958"/>
        <function-ref name="granted" scoped="" ref="0xb7469a38"/>
        <function-ref name="isOwner" scoped="" ref="0xb7469b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0xb7465c18" loc="57:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0xb7465c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb7465df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0xb7464368" loc="59:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0xb7464368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb7464540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0xb745d880" loc="86:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0xb745d880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb745da58"/>
        <function-ref name="write" scoped="" ref="0xb745db38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0xb745d448" loc="85:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0xb745d448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb745d620"/>
        <function-ref name="write" scoped="" ref="0xb745d700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0xb7467d70" loc="53:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0xb7467d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb7465010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0xb745d010" loc="82:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0xb745d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb745d1e8"/>
        <function-ref name="write" scoped="" ref="0xb745d2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0xb745b2b0" loc="92:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0xb745b2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb745b488"/>
        <function-ref name="write" scoped="" ref="0xb745b568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0xb745eb20" loc="81:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0xb745eb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb745ecf8"/>
        <function-ref name="write" scoped="" ref="0xb745edd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0xb7467010" loc="49:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0xb7467010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb74671e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0xb745fe38" loc="78:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0xb745fe38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb745e050"/>
        <function-ref name="write" scoped="" ref="0xb745e130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0xb74676c0" loc="51:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0xb74676c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb7467898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0xb745fa00" loc="77:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0xb745fa00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb745fbd8"/>
        <function-ref name="write" scoped="" ref="0xb745fcb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0xb7464010" loc="58:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0xb7464010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb74641e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0xb745a8e8" loc="98:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0xb745a8e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0xb745aac0"/>
        <function-ref name="writeDone" scoped="" ref="0xb745aba0"/>
        <function-ref name="write" scoped="" ref="0xb745ac80"/>
        <function-ref name="beginRead" scoped="" ref="0xb745ad60"/>
        <function-ref name="readDone" scoped="" ref="0xb745ae40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0xb744fe38" loc="69:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0xb744fe38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb744e208"/>
        <function-ref name="write" scoped="" ref="0xb744e2e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0xb7454368" loc="47:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0xb7454368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb7454540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0xb74514b8" loc="63:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0xb74514b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7451690"/>
        <function-ref name="write" scoped="" ref="0xb7451770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0xb744ecd8" loc="72:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0xb744ecd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb744eeb0"/>
        <function-ref name="write" scoped="" ref="0xb744d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0xb744d190" loc="73:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0xb744d190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb744d368"/>
        <function-ref name="write" scoped="" ref="0xb744d448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0xb7447448" loc="94:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0xb7447448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7447620"/>
        <function-ref name="write" scoped="" ref="0xb7447700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0xb74482b0" loc="90:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0xb74482b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7448488"/>
        <function-ref name="write" scoped="" ref="0xb7448568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0xb7454d70" loc="50:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0xb7454d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb7453010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0xb7449a00" loc="88:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0xb7449a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7449bd8"/>
        <function-ref name="write" scoped="" ref="0xb7449cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0xb7451d28" loc="65:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0xb7451d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7451f00"/>
        <function-ref name="write" scoped="" ref="0xb744f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0xb744f5c8" loc="67:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0xb744f5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb744f7a0"/>
        <function-ref name="write" scoped="" ref="0xb744f880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0xb744cb20" loc="79:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0xb744cb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb744ccf8"/>
        <function-ref name="write" scoped="" ref="0xb744cdd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0xb744d5c8" loc="74:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0xb744d5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb744d7a0"/>
        <function-ref name="write" scoped="" ref="0xb744d880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0xb74556c8" loc="42:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0xb74556c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0xb74558a0"/>
        <function-ref name="abortRelease" scoped="" ref="0xb7455980"/>
        <function-ref name="attemptRelease" scoped="" ref="0xb7455a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0xb7453b98" loc="54:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0xb7453b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb7453d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0xb7453ef0" loc="55:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0xb7453ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb7452188"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0xb7452308" loc="56:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0xb7452308"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb74524e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0xb7449e38" loc="89:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0xb7449e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7448050"/>
        <function-ref name="write" scoped="" ref="0xb7448130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0xb74534e8" loc="52:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0xb74534e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb74536c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0xb744f190" loc="66:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0xb744f190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb744f368"/>
        <function-ref name="write" scoped="" ref="0xb744f448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0xb74518f0" loc="64:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0xb74518f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7451ac8"/>
        <function-ref name="write" scoped="" ref="0xb7451ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0xb7454010" loc="46:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0xb7454010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb74541e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0xb7447010" loc="93:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0xb7447010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb74471e8"/>
        <function-ref name="write" scoped="" ref="0xb74472c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0xb74486e8" loc="91:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0xb74486e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb74488c0"/>
        <function-ref name="write" scoped="" ref="0xb74489a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0xb744b010" loc="80:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0xb744b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb744b1e8"/>
        <function-ref name="write" scoped="" ref="0xb744b2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0xb74495c8" loc="87:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0xb74495c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb74497a0"/>
        <function-ref name="write" scoped="" ref="0xb7449880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0xb744de38" loc="76:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0xb744de38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb744c050"/>
        <function-ref name="write" scoped="" ref="0xb744c130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0xb7447880" loc="97:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0xb7447880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0xb7447c58"/>
        <function-ref name="writeDone" scoped="" ref="0xb7447d38"/>
        <function-ref name="write" scoped="" ref="0xb7447e18"/>
        <function-ref name="beginRead" scoped="" ref="0xb7447ef8"/>
        <function-ref name="readDone" scoped="" ref="0xb7446010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0xb7455be0" loc="45:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0xb7455be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb7455db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0xb7451080" loc="62:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0xb7451080"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7451258"/>
        <function-ref name="write" scoped="" ref="0xb7451338"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0xb744fa00" loc="68:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0xb744fa00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb744fbd8"/>
        <function-ref name="write" scoped="" ref="0xb744fcb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0xb744da00" loc="75:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0xb744da00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb744dbd8"/>
        <function-ref name="write" scoped="" ref="0xb744dcb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0xb744e468" loc="70:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0xb744e468"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb744e640"/>
        <function-ref name="write" scoped="" ref="0xb744e720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0xb74546c0" loc="48:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0xb74546c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb7454898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0xb744e8a0" loc="71:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0xb744e8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb744ea78"/>
        <function-ref name="write" scoped="" ref="0xb744eb58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb7455010" loc="41:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb7455010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb74551e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb74552c8"/>
        <function-ref name="request" scoped="" ref="0xb74553a8"/>
        <function-ref name="granted" scoped="" ref="0xb7455488"/>
        <function-ref name="isOwner" scoped="" ref="0xb7455568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0xb7452660" loc="57:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0xb7452660"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb7452838"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0xb7452d10" loc="59:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0xb7452d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb7452ee8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0xb7449190" loc="86:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0xb7449190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7449368"/>
        <function-ref name="write" scoped="" ref="0xb7449448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0xb744bcb8" loc="85:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0xb744bcb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb744be90"/>
        <function-ref name="write" scoped="" ref="0xb7449010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0xb7453840" loc="53:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0xb7453840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb7453a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0xb744b880" loc="82:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0xb744b880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb744ba58"/>
        <function-ref name="write" scoped="" ref="0xb744bb38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0xb7448b20" loc="92:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0xb7448b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7448cf8"/>
        <function-ref name="write" scoped="" ref="0xb7448dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0xb744b448" loc="81:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0xb744b448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb744b620"/>
        <function-ref name="write" scoped="" ref="0xb744b700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0xb7454a18" loc="49:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0xb7454a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb7454bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0xb744c6e8" loc="78:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0xb744c6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb744c8c0"/>
        <function-ref name="write" scoped="" ref="0xb744c9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0xb7453190" loc="51:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0xb7453190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb7453368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0xb744c2b0" loc="77:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0xb744c2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb744c488"/>
        <function-ref name="write" scoped="" ref="0xb744c568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0xb74529b8" loc="58:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0xb74529b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb7452b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0xb7446190" loc="98:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0xb7446190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0xb7446368"/>
        <function-ref name="writeDone" scoped="" ref="0xb7446448"/>
        <function-ref name="write" scoped="" ref="0xb7446528"/>
        <function-ref name="beginRead" scoped="" ref="0xb7446608"/>
        <function-ref name="readDone" scoped="" ref="0xb74466e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0xb7443970" loc="54:/opt/tinyos-main-2.1.2/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0xb7443970"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0xb7443b48"/>
        <function-ref name="changed" scoped="" ref="0xb7443c28"/>
        <function-ref name="amGroup" scoped="" ref="0xb7443d08"/>
        <function-ref name="setAddress" scoped="" ref="0xb7443de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0xb74371e8" loc="40:/opt/tinyos-main-2.1.2/tos/platforms/micaz/LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalIeeeEui64" scoped="" ref="0xb74371e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0xb74373c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0xb742d808" loc="46:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0xb742d808"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0xb742d9e0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0xb742dac0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0xb742dba0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0xb742dc80"/>
        <function-ref name="setCca" scoped="" ref="0xb742dd60"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0xb742de40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0xb742c8e0" loc="47:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EnergyIndicator" scoped="" ref="0xb742c8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0xb742cab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0xb742d0f0" loc="45:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Transmit" scoped="" ref="0xb742d0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb742d2c8"/>
        <function-ref name="cancel" scoped="" ref="0xb742d3a8"/>
        <function-ref name="modify" scoped="" ref="0xb742d488"/>
        <function-ref name="sendDone" scoped="" ref="0xb742d568"/>
        <function-ref name="resend" scoped="" ref="0xb742d648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0xb7430c10" loc="44:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0xb7430c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb7430de8"/>
        <function-ref name="stop" scoped="" ref="0xb7430ec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0xb742cd48" loc="48:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteIndicator" scoped="" ref="0xb742cd48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0xb742cf20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0xb7416570" loc="51:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0xb7416570"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0xb7416748"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0xb7416828"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0xb7416908"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0xb74169e8"/>
        <function-ref name="setCca" scoped="" ref="0xb7416ac8"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0xb7416ba8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0xb74122b0" loc="58:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0xb74122b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7b37d40"/>
            <typename><typedef-ref name="T32khz" ref="0xb7b37f08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7ed7848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb7412db0"/>
        <function-ref name="clear" scoped="" ref="0xb7410170"/>
        <function-ref name="isValid" scoped="" ref="0xb7412a00"/>
        <function-ref name="set" scoped="" ref="0xb7410520"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0xb7406d70" loc="78:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0xb7406d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7405010"/>
        <function-ref name="write" scoped="" ref="0xb74050f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0xb7405300" loc="79:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0xb7405300"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb74054d8"/>
        <function-ref name="write" scoped="" ref="0xb74055b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0xb7416e68" loc="52:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EnergyIndicator" scoped="" ref="0xb7416e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0xb7415050"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0xb7407598" loc="72:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0xb7407598"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb7407770"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0xb7409840" loc="60:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CaptureSFD" scoped="" ref="0xb7409840"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0xb7409a18"/>
        <function-ref name="disable" scoped="" ref="0xb7409af8"/>
        <function-ref name="captured" scoped="" ref="0xb7409bd8"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0xb7409cb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0xb74158c8" loc="55:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BackoffTimer" scoped="" ref="0xb74158c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7b37d40"/>
            <typename><typedef-ref name="T32khz" ref="0xb7b37f08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7ed7848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb7414d90"/>
        <function-ref name="fired" scoped="" ref="0xb7414560"/>
        <function-ref name="startAt" scoped="" ref="0xb7414a50"/>
        <function-ref name="isRunning" scoped="" ref="0xb74147d8"/>
        <function-ref name="getAlarm" scoped="" ref="0xb7413048"/>
        <function-ref name="start" scoped="" ref="0xb7414048"/>
        <function-ref name="stop" scoped="" ref="0xb74142e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0xb74132f8" loc="56:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0xb74132f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0xb74134d0"/>
        <function-ref name="setNetwork" scoped="" ref="0xb74135b0"/>
        <function-ref name="getRssi" scoped="" ref="0xb7413690"/>
        <function-ref name="getNetwork" scoped="" ref="0xb7413770"/>
        <function-ref name="getPower" scoped="" ref="0xb7413850"/>
        <function-ref name="getLqi" scoped="" ref="0xb7413930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0xb7408338" loc="68:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0xb7408338"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7408510"/>
        <function-ref name="write" scoped="" ref="0xb74085f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0xb7408840" loc="69:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0xb7408840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7408a18"/>
        <function-ref name="write" scoped="" ref="0xb7408af8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0xb7400a60" loc="83:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0xb7400a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb7400c38"/>
        <function-ref name="sfd_dropped" scoped="" ref="0xb7400d18"/>
        <function-ref name="sfd" scoped="" ref="0xb7400df8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb7417d88" loc="50:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb7417d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb7416010"/>
        <function-ref name="cancel" scoped="" ref="0xb74160f0"/>
        <function-ref name="modify" scoped="" ref="0xb74161d0"/>
        <function-ref name="sendDone" scoped="" ref="0xb74162b0"/>
        <function-ref name="resend" scoped="" ref="0xb7416390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0xb740a588" loc="66:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0xb740a588"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0xb740a760"/>
        <function-ref name="abortRelease" scoped="" ref="0xb740a840"/>
        <function-ref name="attemptRelease" scoped="" ref="0xb740a920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0xb74079c8" loc="73:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0xb74079c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb7407ba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0xb740f9a8" loc="62:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0xb740f9a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb740fb80"/>
        <function-ref name="isInput" scoped="" ref="0xb740fc60"/>
        <function-ref name="toggle" scoped="" ref="0xb740fd40"/>
        <function-ref name="isOutput" scoped="" ref="0xb740fe20"/>
        <function-ref name="get" scoped="" ref="0xb740ff00"/>
        <function-ref name="makeOutput" scoped="" ref="0xb740e010"/>
        <function-ref name="set" scoped="" ref="0xb740e0f0"/>
        <function-ref name="clr" scoped="" ref="0xb740e1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb74174f0" loc="48:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb74174f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb74176c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0xb7413b38" loc="57:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0xb7413b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0xb7413d10"/>
        <function-ref name="getHeader" scoped="" ref="0xb7413df0"/>
        <function-ref name="getMetadata" scoped="" ref="0xb7413ed0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0xb7409170" loc="59:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0xb7409170"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb7409348"/>
        <function-ref name="isSet" scoped="" ref="0xb7409428"/>
        <function-ref name="cancel" scoped="" ref="0xb7409508"/>
        <function-ref name="set" scoped="" ref="0xb74095e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0xb7407e08" loc="74:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0xb7407e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb74060f0"/>
        <function-ref name="write" scoped="" ref="0xb74061d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0xb740ee10" loc="65:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0xb740ee10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb740a010"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb740a0f0"/>
        <function-ref name="request" scoped="" ref="0xb740a1d0"/>
        <function-ref name="granted" scoped="" ref="0xb740a2b0"/>
        <function-ref name="isOwner" scoped="" ref="0xb740a390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0xb7409eb8" loc="61:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0xb7409eb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb740f188"/>
        <function-ref name="isInput" scoped="" ref="0xb740f268"/>
        <function-ref name="toggle" scoped="" ref="0xb740f348"/>
        <function-ref name="isOutput" scoped="" ref="0xb740f428"/>
        <function-ref name="get" scoped="" ref="0xb740f508"/>
        <function-ref name="makeOutput" scoped="" ref="0xb740f5e8"/>
        <function-ref name="set" scoped="" ref="0xb740f6c8"/>
        <function-ref name="clr" scoped="" ref="0xb740f7a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0xb74057c8" loc="80:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0xb74057c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb74059a0"/>
        <function-ref name="write" scoped="" ref="0xb7405a80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0xb7405ca8" loc="81:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0xb7405ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7405e80"/>
        <function-ref name="write" scoped="" ref="0xb7404010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0xb7408d28" loc="70:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0xb7408d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb7408f00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0xb740e3d0" loc="63:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFD" scoped="" ref="0xb740e3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb740e5a8"/>
        <function-ref name="isInput" scoped="" ref="0xb740e688"/>
        <function-ref name="toggle" scoped="" ref="0xb740e768"/>
        <function-ref name="isOutput" scoped="" ref="0xb740e848"/>
        <function-ref name="get" scoped="" ref="0xb740e928"/>
        <function-ref name="makeOutput" scoped="" ref="0xb740ea08"/>
        <function-ref name="set" scoped="" ref="0xb740eae8"/>
        <function-ref name="clr" scoped="" ref="0xb740ebc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xb7402010" loc="84:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xb7402010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb74021e8"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb74022c8"/>
        <function-ref name="led1On" scoped="" ref="0xb74023a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb7402488"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb7402568"/>
        <function-ref name="get" scoped="" ref="0xb7402648"/>
        <function-ref name="led1Off" scoped="" ref="0xb7402728"/>
        <function-ref name="led2Off" scoped="" ref="0xb7402aa8"/>
        <function-ref name="set" scoped="" ref="0xb7402808"/>
        <function-ref name="led0On" scoped="" ref="0xb74028e8"/>
        <function-ref name="led2On" scoped="" ref="0xb74029c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0xb7406850" loc="77:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0xb7406850"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7406a28"/>
        <function-ref name="write" scoped="" ref="0xb7406b08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0xb7417890" loc="49:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0xb7417890"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb7417a68"/>
        <function-ref name="stop" scoped="" ref="0xb7417b48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0xb740ab48" loc="67:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0xb740ab48"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0xb740ad20"/>
        <function-ref name="writeDone" scoped="" ref="0xb740ae00"/>
        <function-ref name="write" scoped="" ref="0xb740aee0"/>
        <function-ref name="beginRead" scoped="" ref="0xb7408010"/>
        <function-ref name="readDone" scoped="" ref="0xb74080f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0xb7407168" loc="71:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0xb7407168"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb7407340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0xb7406410" loc="76:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0xb7406410"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb74065e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0xb7415300" loc="53:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteIndicator" scoped="" ref="0xb7415300"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0xb74154d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0xb73a9880" loc="69:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0xb73a9880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb73a9b58"/>
        <function-ref name="write" scoped="" ref="0xb73a9c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0xb73afbf8" loc="47:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0xb73afbf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb73afdd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0xb73abe50" loc="63:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0xb73abe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb73aa050"/>
        <function-ref name="write" scoped="" ref="0xb73aa130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0xb73a86a8" loc="72:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0xb73a86a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb73a8880"/>
        <function-ref name="write" scoped="" ref="0xb73a8960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0xb73a8ae0" loc="73:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0xb73a8ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb73a8cb8"/>
        <function-ref name="write" scoped="" ref="0xb73a8d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0xb73a2cb8" loc="94:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0xb73a2cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb73a2e90"/>
        <function-ref name="write" scoped="" ref="0xb73a1010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0xb73a3b20" loc="90:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0xb73a3b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb73a3cf8"/>
        <function-ref name="write" scoped="" ref="0xb73a3dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0xb73ae6c0" loc="50:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0xb73ae6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb73ae898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0xb73a32b0" loc="88:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0xb73a32b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb73a3488"/>
        <function-ref name="write" scoped="" ref="0xb73a3568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0xb73aa6e8" loc="65:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0xb73aa6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb73aa8c0"/>
        <function-ref name="write" scoped="" ref="0xb73aa9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0xb73a9010" loc="67:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0xb73a9010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb73a91e8"/>
        <function-ref name="write" scoped="" ref="0xb73a92c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0xb73a5468" loc="79:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0xb73a5468"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb73a5640"/>
        <function-ref name="write" scoped="" ref="0xb73a5720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0xb73a8f18" loc="74:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0xb73a8f18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb73a7108"/>
        <function-ref name="write" scoped="" ref="0xb73a71e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0xb73af030" loc="42:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0xb73af030"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0xb73af208"/>
        <function-ref name="abortRelease" scoped="" ref="0xb73af2e8"/>
        <function-ref name="attemptRelease" scoped="" ref="0xb73af3c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0xb73ad4e8" loc="54:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0xb73ad4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb73ad6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0xb73ad840" loc="55:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0xb73ad840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb73ada98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0xb73adc18" loc="56:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0xb73adc18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb73addf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0xb73a36e8" loc="89:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0xb73a36e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb73a38c0"/>
        <function-ref name="write" scoped="" ref="0xb73a39a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0xb73aed70" loc="52:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0xb73aed70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb73ad010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0xb73aab20" loc="66:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0xb73aab20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb73aacf8"/>
        <function-ref name="write" scoped="" ref="0xb73aadd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0xb73aa2b0" loc="64:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0xb73aa2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb73aa488"/>
        <function-ref name="write" scoped="" ref="0xb73aa568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0xb73af8a0" loc="46:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0xb73af8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb73afa78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0xb73a2880" loc="93:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0xb73a2880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb73a2a58"/>
        <function-ref name="write" scoped="" ref="0xb73a2b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0xb73a2010" loc="91:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0xb73a2010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb73a21e8"/>
        <function-ref name="write" scoped="" ref="0xb73a22c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0xb73a58a0" loc="80:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0xb73a58a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb73a5a78"/>
        <function-ref name="write" scoped="" ref="0xb73a5b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0xb73a4e38" loc="87:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0xb73a4e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb73a3050"/>
        <function-ref name="write" scoped="" ref="0xb73a3130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0xb73a77a0" loc="76:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0xb73a77a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb73a7978"/>
        <function-ref name="write" scoped="" ref="0xb73a7a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0xb73a1190" loc="97:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0xb73a1190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0xb73a1568"/>
        <function-ref name="writeDone" scoped="" ref="0xb73a1648"/>
        <function-ref name="write" scoped="" ref="0xb73a1728"/>
        <function-ref name="beginRead" scoped="" ref="0xb73a1808"/>
        <function-ref name="readDone" scoped="" ref="0xb73a18e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0xb73af548" loc="45:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0xb73af548"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb73af720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0xb73aba18" loc="62:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0xb73aba18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb73abbf0"/>
        <function-ref name="write" scoped="" ref="0xb73abcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0xb73a9448" loc="68:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0xb73a9448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb73a9620"/>
        <function-ref name="write" scoped="" ref="0xb73a9700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0xb73a7368" loc="75:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0xb73a7368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb73a7540"/>
        <function-ref name="write" scoped="" ref="0xb73a7620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0xb73a9db8" loc="70:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0xb73a9db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb73a8010"/>
        <function-ref name="write" scoped="" ref="0xb73a80f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0xb73ae010" loc="48:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0xb73ae010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb73ae1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0xb73a8270" loc="71:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0xb73a8270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb73a8448"/>
        <function-ref name="write" scoped="" ref="0xb73a8528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb73b0950" loc="41:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb73b0950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb73b0b28"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb73b0c08"/>
        <function-ref name="request" scoped="" ref="0xb73b0ce8"/>
        <function-ref name="granted" scoped="" ref="0xb73b0dc8"/>
        <function-ref name="isOwner" scoped="" ref="0xb73b0ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0xb73ab010" loc="57:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0xb73ab010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb73ab1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0xb73ab6c0" loc="59:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0xb73ab6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb73ab898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0xb73a4a00" loc="86:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0xb73a4a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb73a4bd8"/>
        <function-ref name="write" scoped="" ref="0xb73a4cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0xb73a45c8" loc="85:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0xb73a45c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb73a47a0"/>
        <function-ref name="write" scoped="" ref="0xb73a4880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0xb73ad190" loc="53:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0xb73ad190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb73ad368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0xb73a4190" loc="82:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0xb73a4190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb73a4368"/>
        <function-ref name="write" scoped="" ref="0xb73a4448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0xb73a2448" loc="92:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0xb73a2448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb73a2620"/>
        <function-ref name="write" scoped="" ref="0xb73a2700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0xb73a5cd8" loc="81:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0xb73a5cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb73a5eb0"/>
        <function-ref name="write" scoped="" ref="0xb73a4010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0xb73ae368" loc="49:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0xb73ae368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb73ae540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0xb73a5030" loc="78:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0xb73a5030"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb73a5208"/>
        <function-ref name="write" scoped="" ref="0xb73a52e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0xb73aea18" loc="51:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0xb73aea18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb73aebf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0xb73a7bd8" loc="77:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0xb73a7bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb73a7db0"/>
        <function-ref name="write" scoped="" ref="0xb73a7e90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0xb73ab368" loc="58:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0xb73ab368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb73ab540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0xb73a1a68" loc="98:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0xb73a1a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0xb73a1c40"/>
        <function-ref name="writeDone" scoped="" ref="0xb73a1d20"/>
        <function-ref name="write" scoped="" ref="0xb73a1e00"/>
        <function-ref name="beginRead" scoped="" ref="0xb73a1ee0"/>
        <function-ref name="readDone" scoped="" ref="0xb73a0010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0xb739bce0" loc="42:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0xb739bce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb739beb8"/>
        <function-ref name="sfd_dropped" scoped="" ref="0xb7398010"/>
        <function-ref name="sfd" scoped="" ref="0xb73980f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb7398298" loc="43:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb7398298"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb7398470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0xb7398730" loc="44:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketIndicator" scoped="" ref="0xb7398730"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0xb7398908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0xb739b840" loc="41:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0xb739b840"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb739ba18"/>
        <function-ref name="stop" scoped="" ref="0xb739baf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0xb73924c0" loc="54:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFO" scoped="" ref="0xb73924c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7392698"/>
        <function-ref name="isInput" scoped="" ref="0xb7392778"/>
        <function-ref name="toggle" scoped="" ref="0xb7392858"/>
        <function-ref name="isOutput" scoped="" ref="0xb7392938"/>
        <function-ref name="get" scoped="" ref="0xb7392a18"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7392af8"/>
        <function-ref name="set" scoped="" ref="0xb7392bd8"/>
        <function-ref name="clr" scoped="" ref="0xb7392cb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0xb738e680" loc="64:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0xb738e680"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0xb738e858"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0xb738e938"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0xb738ea18"/>
        <function-ref name="syncDone" scoped="" ref="0xb738eaf8"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0xb738ebd8"/>
        <function-ref name="setShortAddr" scoped="" ref="0xb738ecb8"/>
        <function-ref name="setChannel" scoped="" ref="0xb738ed98"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0xb738ee78"/>
        <function-ref name="setPanAddr" scoped="" ref="0xb738d010"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0xb738d0f0"/>
        <function-ref name="getExtAddr" scoped="" ref="0xb738d1d0"/>
        <function-ref name="getShortAddr" scoped="" ref="0xb738d2b0"/>
        <function-ref name="sync" scoped="" ref="0xb738d390"/>
        <function-ref name="getChannel" scoped="" ref="0xb738d4f0"/>
        <function-ref name="getPanAddr" scoped="" ref="0xb738d5d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0xb7381b88" loc="148:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveDone_task" scoped="" ref="0xb7381b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb7381d60"/>
        <function-ref name="runTask" scoped="" ref="0xb7381e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0xb738d980" loc="65:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0xb738d980"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7b37d40"/>
            <typename><typedef-ref name="T32khz" ref="0xb7b37f08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7ed7848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb738c4a8"/>
        <function-ref name="clear" scoped="" ref="0xb738c858"/>
        <function-ref name="isValid" scoped="" ref="0xb738c0f8"/>
        <function-ref name="set" scoped="" ref="0xb738cc08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0xb7392ed0" loc="55:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFOP" scoped="" ref="0xb7392ed0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb73910c0"/>
        <function-ref name="isInput" scoped="" ref="0xb73911a0"/>
        <function-ref name="toggle" scoped="" ref="0xb7391280"/>
        <function-ref name="isOutput" scoped="" ref="0xb7391360"/>
        <function-ref name="get" scoped="" ref="0xb7391440"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7391520"/>
        <function-ref name="set" scoped="" ref="0xb7391600"/>
        <function-ref name="clr" scoped="" ref="0xb73916e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0xb738aaa0" loc="69:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0xb738aaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb738ac78"/>
        <function-ref name="write" scoped="" ref="0xb738ad58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0xb7389010" loc="70:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0xb7389010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb73891e8"/>
        <function-ref name="write" scoped="" ref="0xb73892c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0xb73899b8" loc="72:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0xb73899b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7389b90"/>
        <function-ref name="write" scoped="" ref="0xb7389c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0xb738f878" loc="62:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0xb738f878"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0xb738fa50"/>
        <function-ref name="setNetwork" scoped="" ref="0xb738fb30"/>
        <function-ref name="getRssi" scoped="" ref="0xb738fc10"/>
        <function-ref name="getNetwork" scoped="" ref="0xb738fcf0"/>
        <function-ref name="getPower" scoped="" ref="0xb738fdd0"/>
        <function-ref name="getLqi" scoped="" ref="0xb738feb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0xb7394c70" loc="49:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0xb7394c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb7394e48"/>
        <function-ref name="sfd_dropped" scoped="" ref="0xb7394f28"/>
        <function-ref name="sfd" scoped="" ref="0xb7393018"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0xb738f010" loc="60:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0xb738f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb738f1e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0xb7393a30" loc="53:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0xb7393a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7393c08"/>
        <function-ref name="isInput" scoped="" ref="0xb7393ce8"/>
        <function-ref name="toggle" scoped="" ref="0xb7393dc8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7393ea8"/>
        <function-ref name="get" scoped="" ref="0xb7392010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb73920f0"/>
        <function-ref name="set" scoped="" ref="0xb73921d0"/>
        <function-ref name="clr" scoped="" ref="0xb73922b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0xb7389eb8" loc="73:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0xb7389eb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb73880c0"/>
        <function-ref name="write" scoped="" ref="0xb73881a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb7394430" loc="47:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb7394430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7394608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0xb738e108" loc="63:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0xb738e108"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0xb738e2e0"/>
        <function-ref name="getHeader" scoped="" ref="0xb738e3c0"/>
        <function-ref name="getMetadata" scoped="" ref="0xb738e4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb73931c0" loc="50:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb73931c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb7393398"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0xb73900a0" loc="58:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0xb73900a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb7390278"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb7390358"/>
        <function-ref name="request" scoped="" ref="0xb7390438"/>
        <function-ref name="granted" scoped="" ref="0xb7390518"/>
        <function-ref name="isOwner" scoped="" ref="0xb73905f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0xb73894d8" loc="71:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0xb73894d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb73896b0"/>
        <function-ref name="write" scoped="" ref="0xb7389790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0xb7390820" loc="59:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0xb7390820"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0xb73909f8"/>
        <function-ref name="writeDone" scoped="" ref="0xb7390ad8"/>
        <function-ref name="write" scoped="" ref="0xb7390bb8"/>
        <function-ref name="beginRead" scoped="" ref="0xb7390c98"/>
        <function-ref name="readDone" scoped="" ref="0xb7390d78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0xb73883d0" loc="74:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0xb73883d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb73886a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0xb7393658" loc="51:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketIndicator" scoped="" ref="0xb7393658"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0xb7393830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xb7388838" loc="76:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xb7388838"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb7388a10"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb7388af0"/>
        <function-ref name="led1On" scoped="" ref="0xb7388bd0"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb7388cb0"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb7388d90"/>
        <function-ref name="get" scoped="" ref="0xb7388e70"/>
        <function-ref name="led1Off" scoped="" ref="0xb7387010"/>
        <function-ref name="led2Off" scoped="" ref="0xb7387390"/>
        <function-ref name="set" scoped="" ref="0xb73870f0"/>
        <function-ref name="led0On" scoped="" ref="0xb73871d0"/>
        <function-ref name="led2On" scoped="" ref="0xb73872b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0xb738a580" loc="68:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0xb738a580"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb738a758"/>
        <function-ref name="write" scoped="" ref="0xb738a838"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0xb738a140" loc="67:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0xb738a140"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb738a318"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0xb7391978" loc="56:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptFIFOP" scoped="" ref="0xb7391978"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb7391b50"/>
        <function-ref name="disable" scoped="" ref="0xb7391c30"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0xb7391d10"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0xb7391df0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0xb738f440" loc="61:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0xb738f440"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb738f698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0xb73947d0" loc="48:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0xb73947d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb73949a8"/>
        <function-ref name="stop" scoped="" ref="0xb7394a88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0xb7349060" loc="44:/opt/tinyos-main-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0xb7349060"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0xb7349238"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0xb734dba0" loc="41:/opt/tinyos-main-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0xb734dba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0xb734dd78"/>
        <function-ref name="setNetwork" scoped="" ref="0xb734de58"/>
        <function-ref name="getRssi" scoped="" ref="0xb734a010"/>
        <function-ref name="getNetwork" scoped="" ref="0xb734a0f0"/>
        <function-ref name="getPower" scoped="" ref="0xb734a1d0"/>
        <function-ref name="getLqi" scoped="" ref="0xb734a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0xb73496b8" loc="46:/opt/tinyos-main-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0xb73496b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7b37d40"/>
            <typename><typedef-ref name="T32khz" ref="0xb7b37f08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7ed7848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb73481d8"/>
        <function-ref name="clear" scoped="" ref="0xb7348588"/>
        <function-ref name="isValid" scoped="" ref="0xb7349e08"/>
        <function-ref name="set" scoped="" ref="0xb7348938"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0xb734aaa0" loc="43:/opt/tinyos-main-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0xb734aaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0xb734ac78"/>
        <function-ref name="getHeader" scoped="" ref="0xb734ad58"/>
        <function-ref name="getMetadata" scoped="" ref="0xb734ae38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0xb7345888" loc="48:/opt/tinyos-main-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0xb7345888"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb7345a60"/>
        <function-ref name="isSet" scoped="" ref="0xb7345b40"/>
        <function-ref name="cancel" scoped="" ref="0xb7345c20"/>
        <function-ref name="set" scoped="" ref="0xb7345d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0xb7346100" loc="47:/opt/tinyos-main-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb7346100"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7b37900"/>
            <typename><typedef-ref name="TMilli" ref="0xb7b37ac8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7ed7848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb7346c00"/>
        <function-ref name="clear" scoped="" ref="0xb7345010"/>
        <function-ref name="isValid" scoped="" ref="0xb7346850"/>
        <function-ref name="set" scoped="" ref="0xb73453c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0xb734a520" loc="42:/opt/tinyos-main-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0xb734a520"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb734a6f8"/>
        <function-ref name="noAck" scoped="" ref="0xb734a7d8"/>
        <function-ref name="wasAcked" scoped="" ref="0xb734a8b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0xb7341a40" loc="49:/opt/tinyos-main-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0xb7341a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0xb7341c18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0xb7344668" loc="46:/opt/tinyos-main-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0xb7344668"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0xb7344840"/>
        <function-ref name="setNetwork" scoped="" ref="0xb7344920"/>
        <function-ref name="getRssi" scoped="" ref="0xb7344a00"/>
        <function-ref name="getNetwork" scoped="" ref="0xb7344ae0"/>
        <function-ref name="getPower" scoped="" ref="0xb7344bc0"/>
        <function-ref name="getLqi" scoped="" ref="0xb7344ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0xb733c930" loc="56:/opt/tinyos-main-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb733c930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb733cb08"/>
        <function-ref name="payloadLength" scoped="" ref="0xb733cbe8"/>
        <function-ref name="getPayload" scoped="" ref="0xb733ccc8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb733cda8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb733ce88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0xb7340100" loc="51:/opt/tinyos-main-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0xb7340100"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7b37d40"/>
            <typename><typedef-ref name="T32khz" ref="0xb7b37f08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7ed7848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb7340c00"/>
        <function-ref name="clear" scoped="" ref="0xb733e010"/>
        <function-ref name="isValid" scoped="" ref="0xb7340850"/>
        <function-ref name="set" scoped="" ref="0xb733e3c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0xb73414b0" loc="48:/opt/tinyos-main-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0xb73414b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0xb7341688"/>
        <function-ref name="getHeader" scoped="" ref="0xb7341768"/>
        <function-ref name="getMetadata" scoped="" ref="0xb7341848"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0xb733c308" loc="53:/opt/tinyos-main-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0xb733c308"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb733c4e0"/>
        <function-ref name="isSet" scoped="" ref="0xb733c5c0"/>
        <function-ref name="cancel" scoped="" ref="0xb733c6a0"/>
        <function-ref name="set" scoped="" ref="0xb733c780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0xb733a1e0" loc="57:/opt/tinyos-main-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime32khz" scoped="" ref="0xb733a1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7b37d40"/>
            <typename><typedef-ref name="T32khz" ref="0xb7b37f08"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb733a828"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0xb733ac38" loc="58:/opt/tinyos-main-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0xb733ac38"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7b37900"/>
            <typename><typedef-ref name="TMilli" ref="0xb7b37ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb7339298"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0xb733eaf8" loc="52:/opt/tinyos-main-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb733eaf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7b37900"/>
            <typename><typedef-ref name="TMilli" ref="0xb7b37ac8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7ed7848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb733d6b8"/>
        <function-ref name="clear" scoped="" ref="0xb733da68"/>
        <function-ref name="isValid" scoped="" ref="0xb733d308"/>
        <function-ref name="set" scoped="" ref="0xb733de18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0xb7344f10" loc="47:/opt/tinyos-main-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0xb7344f10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb7341108"/>
        <function-ref name="noAck" scoped="" ref="0xb73411e8"/>
        <function-ref name="wasAcked" scoped="" ref="0xb73412c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0xb730c5d8" loc="48:/opt/tinyos-main-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0xb730c5d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7b37d40"/>
            <typename><typedef-ref name="T32khz" ref="0xb7b37f08"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb730cc20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0xb730b010" loc="49:/opt/tinyos-main-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb730b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7b37d40"/>
            <typename><typedef-ref name="T32khz" ref="0xb7b37f08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7ed7848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb730b760"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb730bc50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb730b9d8"/>
        <function-ref name="overflow" scoped="" ref="0xb730bec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb7309378" loc="45:/opt/tinyos-main-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb7309378"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7b37900"/>
            <typename><typedef-ref name="TMilli" ref="0xb7b37ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb7308e58"/>
        <function-ref name="fired" scoped="" ref="0xb7308110"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb7308818"/>
        <function-ref name="isOneShot" scoped="" ref="0xb73085c0"/>
        <function-ref name="getdt" scoped="" ref="0xb7306348"/>
        <function-ref name="gett0" scoped="" ref="0xb73060f0"/>
        <function-ref name="isRunning" scoped="" ref="0xb7308368"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb73099a0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb7308b38"/>
        <function-ref name="startOneShot" scoped="" ref="0xb7309c20"/>
        <function-ref name="stop" scoped="" ref="0xb7309ea0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0xb72ffbd8" loc="69:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0xb72ffbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb72ffeb0"/>
        <function-ref name="write" scoped="" ref="0xb72fe010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0xb7304190" loc="47:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0xb7304190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb7304368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0xb7300270" loc="63:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0xb7300270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7300448"/>
        <function-ref name="write" scoped="" ref="0xb7300528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0xb72fea00" loc="72:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0xb72fea00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb72febd8"/>
        <function-ref name="write" scoped="" ref="0xb72fecb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0xb72fee38" loc="73:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0xb72fee38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb72fd050"/>
        <function-ref name="write" scoped="" ref="0xb72fd130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0xb72f7190" loc="94:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0xb72f7190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb72f7368"/>
        <function-ref name="write" scoped="" ref="0xb72f7448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0xb72f8010" loc="90:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0xb72f8010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb72f81e8"/>
        <function-ref name="write" scoped="" ref="0xb72f82c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0xb7304b98" loc="50:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0xb7304b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb7304d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0xb72f96e8" loc="88:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0xb72f96e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb72f98c0"/>
        <function-ref name="write" scoped="" ref="0xb72f99a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0xb7300ae0" loc="65:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0xb7300ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7300cb8"/>
        <function-ref name="write" scoped="" ref="0xb7300d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0xb72ff368" loc="67:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0xb72ff368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb72ff540"/>
        <function-ref name="write" scoped="" ref="0xb72ff620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0xb72fb880" loc="79:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0xb72fb880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb72fba58"/>
        <function-ref name="write" scoped="" ref="0xb72fbb38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0xb72fd2b0" loc="74:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0xb72fd2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb72fd488"/>
        <function-ref name="write" scoped="" ref="0xb72fd568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0xb73055a0" loc="42:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0xb73055a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0xb7305778"/>
        <function-ref name="abortRelease" scoped="" ref="0xb7305858"/>
        <function-ref name="attemptRelease" scoped="" ref="0xb7305938"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0xb7303910" loc="54:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0xb7303910"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb7303ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0xb7303c68" loc="55:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0xb7303c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb7303ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0xb7301080" loc="56:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0xb7301080"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb7301258"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0xb72f9b20" loc="89:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0xb72f9b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb72f9cf8"/>
        <function-ref name="write" scoped="" ref="0xb72f9dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0xb7303260" loc="52:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0xb7303260"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb7303438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0xb7300f18" loc="66:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0xb7300f18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb72ff108"/>
        <function-ref name="write" scoped="" ref="0xb72ff1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0xb73006a8" loc="64:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0xb73006a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7300880"/>
        <function-ref name="write" scoped="" ref="0xb7300960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0xb7305e10" loc="46:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0xb7305e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb7304010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0xb72f8cb8" loc="93:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0xb72f8cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb72f8e90"/>
        <function-ref name="write" scoped="" ref="0xb72f7010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0xb72f8448" loc="91:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0xb72f8448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb72f8620"/>
        <function-ref name="write" scoped="" ref="0xb72f8700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0xb72fbcb8" loc="80:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0xb72fbcb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb72fbe90"/>
        <function-ref name="write" scoped="" ref="0xb72fa010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0xb72f92b0" loc="87:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0xb72f92b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb72f9488"/>
        <function-ref name="write" scoped="" ref="0xb72f9568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0xb72fdb20" loc="76:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0xb72fdb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb72fdcf8"/>
        <function-ref name="write" scoped="" ref="0xb72fddd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0xb72f75c8" loc="97:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0xb72f75c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0xb72f79a0"/>
        <function-ref name="writeDone" scoped="" ref="0xb72f7a80"/>
        <function-ref name="write" scoped="" ref="0xb72f7b60"/>
        <function-ref name="beginRead" scoped="" ref="0xb72f7c40"/>
        <function-ref name="readDone" scoped="" ref="0xb72f7d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0xb7305ab8" loc="45:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0xb7305ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb7305c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0xb7301de0" loc="62:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0xb7301de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7300010"/>
        <function-ref name="write" scoped="" ref="0xb73000f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0xb72ff7a0" loc="68:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0xb72ff7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb72ff978"/>
        <function-ref name="write" scoped="" ref="0xb72ffa58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0xb72fd6e8" loc="75:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0xb72fd6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb72fd8c0"/>
        <function-ref name="write" scoped="" ref="0xb72fd9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0xb72fe190" loc="70:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0xb72fe190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb72fe368"/>
        <function-ref name="write" scoped="" ref="0xb72fe448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0xb73044e8" loc="48:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0xb73044e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb73046c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0xb72fe5c8" loc="71:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0xb72fe5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb72fe7a0"/>
        <function-ref name="write" scoped="" ref="0xb72fe880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb734bed0" loc="41:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb734bed0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb73050c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb73051a0"/>
        <function-ref name="request" scoped="" ref="0xb7305280"/>
        <function-ref name="granted" scoped="" ref="0xb7305360"/>
        <function-ref name="isOwner" scoped="" ref="0xb7305440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0xb73013d8" loc="57:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0xb73013d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb73015b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0xb7301a88" loc="59:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0xb7301a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb7301c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0xb72fae38" loc="86:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0xb72fae38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb72f9050"/>
        <function-ref name="write" scoped="" ref="0xb72f9130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0xb72faa00" loc="85:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0xb72faa00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb72fabd8"/>
        <function-ref name="write" scoped="" ref="0xb72facb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0xb73035b8" loc="53:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0xb73035b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb7303790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0xb72fa5c8" loc="82:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0xb72fa5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb72fa7a0"/>
        <function-ref name="write" scoped="" ref="0xb72fa880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0xb72f8880" loc="92:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0xb72f8880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb72f8a58"/>
        <function-ref name="write" scoped="" ref="0xb72f8b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0xb72fa190" loc="81:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0xb72fa190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb72fa368"/>
        <function-ref name="write" scoped="" ref="0xb72fa448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0xb7304840" loc="49:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0xb7304840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb7304a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0xb72fb448" loc="78:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0xb72fb448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb72fb620"/>
        <function-ref name="write" scoped="" ref="0xb72fb700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0xb7304ef0" loc="51:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0xb7304ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb73030e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0xb72fb010" loc="77:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0xb72fb010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb72fb1e8"/>
        <function-ref name="write" scoped="" ref="0xb72fb2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0xb7301730" loc="58:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0xb7301730"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb7301908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0xb72f7ea0" loc="98:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0xb72f7ea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0xb72f60c0"/>
        <function-ref name="writeDone" scoped="" ref="0xb72f61a0"/>
        <function-ref name="write" scoped="" ref="0xb72f6280"/>
        <function-ref name="beginRead" scoped="" ref="0xb72f6360"/>
        <function-ref name="readDone" scoped="" ref="0xb72f6440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0xb72e2338" loc="67:/opt/tinyos-main-2.1.2/tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0xb72e2338"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0xb72e2510"/>
        <function-ref name="toIdle" scoped="" ref="0xb72e25f0"/>
        <function-ref name="isState" scoped="" ref="0xb72e26d0"/>
        <function-ref name="isIdle" scoped="" ref="0xb72e27b0"/>
        <function-ref name="requestState" scoped="" ref="0xb72e2890"/>
        <function-ref name="forceState" scoped="" ref="0xb72e2970"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb72dd898" loc="44:/opt/tinyos-main-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb72dd898"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb72dda70"/>
        <function-ref name="getPayload" scoped="" ref="0xb72ddb50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb72ddc30"/>
        <function-ref name="cancel" scoped="" ref="0xb72ddd10"/>
        <function-ref name="sendDone" scoped="" ref="0xb72dddf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb72dd128" loc="40:/opt/tinyos-main-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb72dd128"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb72dd300"/>
        <function-ref name="getPayload" scoped="" ref="0xb72dd3e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb72dd4c0"/>
        <function-ref name="cancel" scoped="" ref="0xb72dd5a0"/>
        <function-ref name="sendDone" scoped="" ref="0xb72dd680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb72d9228" loc="45:/opt/tinyos-main-2.1.2/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb72d9228"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb72d9400"/>
        <function-ref name="getPayload" scoped="" ref="0xb72d94e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb72d95c0"/>
        <function-ref name="cancel" scoped="" ref="0xb72d96a0"/>
        <function-ref name="sendDone" scoped="" ref="0xb72d9780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb72dc740" loc="40:/opt/tinyos-main-2.1.2/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb72dc740"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb72dc918"/>
        <function-ref name="getPayload" scoped="" ref="0xb72dc9f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb72dcad8"/>
        <function-ref name="cancel" scoped="" ref="0xb72dcbb8"/>
        <function-ref name="sendDone" scoped="" ref="0xb72dcc98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0xb72d8190" loc="47:/opt/tinyos-main-2.1.2/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0xb72d8190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0xb72d8368"/>
        <function-ref name="rand32" scoped="" ref="0xb72d8448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb72dce08" loc="41:/opt/tinyos-main-2.1.2/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb72dce08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb72d9010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0xb72d8630" loc="48:/opt/tinyos-main-2.1.2/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0xb72d8630"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0xb72d8808"/>
        <function-ref name="getHeader" scoped="" ref="0xb72d88e8"/>
        <function-ref name="getMetadata" scoped="" ref="0xb72d89c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0xb72d98f8" loc="46:/opt/tinyos-main-2.1.2/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0xb72d98f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0xb72d9ad0"/>
        <function-ref name="toIdle" scoped="" ref="0xb72d9bb0"/>
        <function-ref name="isState" scoped="" ref="0xb72d9c90"/>
        <function-ref name="isIdle" scoped="" ref="0xb72d9d70"/>
        <function-ref name="requestState" scoped="" ref="0xb72d9e50"/>
        <function-ref name="forceState" scoped="" ref="0xb72d8010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0xb72db770" loc="67:/opt/tinyos-main-2.1.2/tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0xb72db770"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0xb72db948"/>
        <function-ref name="toIdle" scoped="" ref="0xb72dba28"/>
        <function-ref name="isState" scoped="" ref="0xb72dbb08"/>
        <function-ref name="isIdle" scoped="" ref="0xb72dbbe8"/>
        <function-ref name="requestState" scoped="" ref="0xb72dbcc8"/>
        <function-ref name="forceState" scoped="" ref="0xb72dbda8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb72cb688" loc="47:/opt/tinyos-main-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb72cb688"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb72cb860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb72dfdf8" loc="42:/opt/tinyos-main-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb72dfdf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb72cb010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0xb72cb260" loc="43:/opt/tinyos-main-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DuplicateReceive" scoped="" ref="0xb72cb260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb72cb438"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb72c7010" loc="49:/opt/tinyos-main-2.1.2/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb72c7010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb72c71e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb72c8b48" loc="45:/opt/tinyos-main-2.1.2/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb72c8b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb72c8d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb72c83d8" loc="43:/opt/tinyos-main-2.1.2/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb72c83d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb72c85b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0xb72c73d0" loc="50:/opt/tinyos-main-2.1.2/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0xb72c73d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0xb72c75a8"/>
        <function-ref name="getHeader" scoped="" ref="0xb72c7688"/>
        <function-ref name="getMetadata" scoped="" ref="0xb72c7768"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0xb72c8800" loc="44:/opt/tinyos-main-2.1.2/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DuplicateReceive" scoped="" ref="0xb72c8800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb72c89d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb72ae420" loc="75:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb72ae420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb72ae5f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb72ae7d0" loc="76:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb72ae7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb72ae9a8"/>
        <function-ref name="getPayload" scoped="" ref="0xb72aea88"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb72aeb68"/>
        <function-ref name="cancel" scoped="" ref="0xb72aec48"/>
        <function-ref name="sendDone" scoped="" ref="0xb72aed28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb72b05b0" loc="65:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb72b05b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb72b0788"/>
        <function-ref name="getPayload" scoped="" ref="0xb72b0868"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb72b0948"/>
        <function-ref name="cancel" scoped="" ref="0xb72b0a28"/>
        <function-ref name="sendDone" scoped="" ref="0xb72b0b08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0xb72af098" loc="68:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveSend" scoped="" ref="0xb72af098"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb72af270"/>
        <function-ref name="getPayload" scoped="" ref="0xb72af350"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb72af430"/>
        <function-ref name="cancel" scoped="" ref="0xb72af510"/>
        <function-ref name="sendDone" scoped="" ref="0xb72af5f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb72b0c90" loc="66:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb72b0c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb72b0e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb72deed8" loc="64:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb72deed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb72b00c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb72b01a0"/>
        <function-ref name="request" scoped="" ref="0xb72b0280"/>
        <function-ref name="granted" scoped="" ref="0xb72b0360"/>
        <function-ref name="isOwner" scoped="" ref="0xb72b0440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0xb72af820" loc="69:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveReceive" scoped="" ref="0xb72af820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb72af9f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0xb72afc00" loc="71:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BarePacket" scoped="" ref="0xb72afc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb72afdd8"/>
        <function-ref name="payloadLength" scoped="" ref="0xb72afeb8"/>
        <function-ref name="getPayload" scoped="" ref="0xb72ae010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb72ae0f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb72ae1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb72a69c8" loc="58:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb72a69c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb72a6ba0"/>
        <function-ref name="getPayload" scoped="" ref="0xb72a6c80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb72a6d60"/>
        <function-ref name="cancel" scoped="" ref="0xb72a6e40"/>
        <function-ref name="sendDone" scoped="" ref="0xb72a6f20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb72a5148" loc="59:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb72a5148"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb72a5320"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0xb728beb0" loc="180:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantTask" scoped="" ref="0xb728beb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb728a0c0"/>
        <function-ref name="runTask" scoped="" ref="0xb728a1a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0xb72a54e0" loc="60:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0xb72a54e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0xb72a56b8"/>
        <function-ref name="setNetwork" scoped="" ref="0xb72a5798"/>
        <function-ref name="getRssi" scoped="" ref="0xb72a5878"/>
        <function-ref name="getNetwork" scoped="" ref="0xb72a5958"/>
        <function-ref name="getPower" scoped="" ref="0xb72a5a38"/>
        <function-ref name="getLqi" scoped="" ref="0xb72a5b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0xb72a76d8" loc="51:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveSend" scoped="" ref="0xb72a76d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb72a78b0"/>
        <function-ref name="getPayload" scoped="" ref="0xb72a7990"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb72a7a70"/>
        <function-ref name="cancel" scoped="" ref="0xb72a7b50"/>
        <function-ref name="sendDone" scoped="" ref="0xb72a7c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0xb72a4310" loc="62:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0xb72a4310"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0xb72a44e8"/>
        <function-ref name="isEmpty" scoped="" ref="0xb72a45c8"/>
        <function-ref name="isEnqueued" scoped="" ref="0xb72a46a8"/>
        <function-ref name="dequeue" scoped="" ref="0xb72a4788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0xb72a5d00" loc="61:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0xb72a5d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0xb72a5ed8"/>
        <function-ref name="getHeader" scoped="" ref="0xb72a4010"/>
        <function-ref name="getMetadata" scoped="" ref="0xb72a40f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0xb72a7308" loc="49:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0xb72a7308"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb72a74e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb72a83c0" loc="46:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb72a83c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb72a8598"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb72a8678"/>
        <function-ref name="request" scoped="" ref="0xb72a8758"/>
        <function-ref name="granted" scoped="" ref="0xb72a8838"/>
        <function-ref name="isOwner" scoped="" ref="0xb72a8918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0xb72a8b00" loc="48:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0xb72a8b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb72a8cd8"/>
        <function-ref name="getPayload" scoped="" ref="0xb72a8db8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb72a8e98"/>
        <function-ref name="cancel" scoped="" ref="0xb72a7010"/>
        <function-ref name="sendDone" scoped="" ref="0xb72a70f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0xb72a7e60" loc="52:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveReceive" scoped="" ref="0xb72a7e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb72a6050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0xb72a6258" loc="54:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BarePacket" scoped="" ref="0xb72a6258"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb72a6430"/>
        <function-ref name="payloadLength" scoped="" ref="0xb72a6510"/>
        <function-ref name="getPayload" scoped="" ref="0xb72a65f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb72a66d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb72a67b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb72aa4b8" loc="44:/opt/tinyos-main-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb72aa4b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb72aa690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0xb72aa7f0" loc="45:/opt/tinyos-main-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0xb72aa7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0xb72aa9c8"/>
        <function-ref name="isEmpty" scoped="" ref="0xb72aaaa8"/>
        <function-ref name="isEnqueued" scoped="" ref="0xb72aab88"/>
        <function-ref name="dequeue" scoped="" ref="0xb72aac68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb72721d0" loc="46:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xb72721d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb72723a8"/>
        <function-ref name="stopDone" scoped="" ref="0xb7272488"/>
        <function-ref name="start" scoped="" ref="0xb7272568"/>
        <function-ref name="stop" scoped="" ref="0xb7272648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb72710a8" loc="51:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb72710a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb7271280"/>
        <function-ref name="getPayload" scoped="" ref="0xb7271360"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb7271440"/>
        <function-ref name="cancel" scoped="" ref="0xb7271520"/>
        <function-ref name="sendDone" scoped="" ref="0xb7271600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb7271810" loc="52:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb7271810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb72719e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb7273010" loc="43:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb7273010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb72731e8"/>
        <function-ref name="getPayload" scoped="" ref="0xb72732c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb72733a8"/>
        <function-ref name="cancel" scoped="" ref="0xb7273488"/>
        <function-ref name="sendDone" scoped="" ref="0xb7273568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0xb7273ab8" loc="45:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0xb7273ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0xb7273c90"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0xb7273d70"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0xb7273e50"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0xb7272010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0xb7272840" loc="47:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendState" scoped="" ref="0xb7272840"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0xb7272a18"/>
        <function-ref name="toIdle" scoped="" ref="0xb7272af8"/>
        <function-ref name="isState" scoped="" ref="0xb7272bd8"/>
        <function-ref name="isIdle" scoped="" ref="0xb7272cb8"/>
        <function-ref name="requestState" scoped="" ref="0xb7272d98"/>
        <function-ref name="forceState" scoped="" ref="0xb7272e78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0xb7271c30" loc="53:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0xb7271c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb7271e08"/>
        <function-ref name="stopDone" scoped="" ref="0xb7271ee8"/>
        <function-ref name="start" scoped="" ref="0xb7270010"/>
        <function-ref name="stop" scoped="" ref="0xb72700f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb72736f0" loc="44:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb72736f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb72738c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0xb7270898" loc="41:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0xb7270898"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0xb7270a70"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0xb7270b50"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0xb7270c30"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0xb7270d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0xb726f8c0" loc="67:/opt/tinyos-main-2.1.2/tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0xb726f8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0xb726fa98"/>
        <function-ref name="toIdle" scoped="" ref="0xb726fb78"/>
        <function-ref name="isState" scoped="" ref="0xb726fc58"/>
        <function-ref name="isIdle" scoped="" ref="0xb726fd38"/>
        <function-ref name="requestState" scoped="" ref="0xb726fe18"/>
        <function-ref name="forceState" scoped="" ref="0xb726fef8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb7267148" loc="45:/opt/tinyos-main-2.1.2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb7267148"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb7267320"/>
        <function-ref name="getPayload" scoped="" ref="0xb7267400"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb72674e0"/>
        <function-ref name="cancel" scoped="" ref="0xb72675c0"/>
        <function-ref name="sendDone" scoped="" ref="0xb72676a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb72742c0" loc="40:/opt/tinyos-main-2.1.2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb72742c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb7274498"/>
        <function-ref name="getPayload" scoped="" ref="0xb7274578"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb7274658"/>
        <function-ref name="cancel" scoped="" ref="0xb7274738"/>
        <function-ref name="sendDone" scoped="" ref="0xb7274818"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0xb72749c0" loc="41:/opt/tinyos-main-2.1.2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0xb72749c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0xb7274b98"/>
        <function-ref name="setRetries" scoped="" ref="0xb7274c78"/>
        <function-ref name="getRetries" scoped="" ref="0xb7274d58"/>
        <function-ref name="setRetryDelay" scoped="" ref="0xb7274e38"/>
        <function-ref name="wasDelivered" scoped="" ref="0xb7274f18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0xb72645f0" loc="44:/opt/tinyos-main-2.1.2/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb72645f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb72647c8"/>
        <function-ref name="noAck" scoped="" ref="0xb72648a8"/>
        <function-ref name="wasAcked" scoped="" ref="0xb7264988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0xb7267df0" loc="40:/opt/tinyos-main-2.1.2/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0xb7267df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0xb7264010"/>
        <function-ref name="setRetries" scoped="" ref="0xb72640f0"/>
        <function-ref name="getRetries" scoped="" ref="0xb72641d0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0xb72642b0"/>
        <function-ref name="wasDelivered" scoped="" ref="0xb7264390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb7254df0" loc="59:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb7254df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb7253010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb7254688" loc="58:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb7254688"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb7254860"/>
        <function-ref name="getPayload" scoped="" ref="0xb7254940"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb7254a20"/>
        <function-ref name="cancel" scoped="" ref="0xb7254b00"/>
        <function-ref name="sendDone" scoped="" ref="0xb7254be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0xb7252010" loc="62:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0xb7252010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0xb72521e8"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0xb72522c8"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0xb72523a8"/>
        <function-ref name="syncDone" scoped="" ref="0xb7252488"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0xb7252568"/>
        <function-ref name="setShortAddr" scoped="" ref="0xb7252648"/>
        <function-ref name="setChannel" scoped="" ref="0xb7252728"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0xb7252808"/>
        <function-ref name="setPanAddr" scoped="" ref="0xb72528e8"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0xb72529c8"/>
        <function-ref name="getExtAddr" scoped="" ref="0xb7252aa8"/>
        <function-ref name="getShortAddr" scoped="" ref="0xb7252b88"/>
        <function-ref name="sync" scoped="" ref="0xb7252c68"/>
        <function-ref name="getChannel" scoped="" ref="0xb7252dc8"/>
        <function-ref name="getPanAddr" scoped="" ref="0xb7252ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0xb7255dc8" loc="54:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0xb7255dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb79c9d30"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0xb7254010"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0xb72540f0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0xb72541d0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0xb72542b0"/>
        <function-ref name="setCca" scoped="" ref="0xb7254390"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0xb7254470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0xb7255750" loc="53:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0xb7255750"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb79c9d30"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0xb7255928"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0xb7251870" loc="64:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBackoff" scoped="" ref="0xb7251870"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0xb7251a48"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0xb7251b28"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0xb7251c08"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0xb7251ce8"/>
        <function-ref name="setCca" scoped="" ref="0xb7251dc8"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0xb7251ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb7256c78" loc="52:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb7256c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb7256e50"/>
        <function-ref name="payloadLength" scoped="" ref="0xb7255010"/>
        <function-ref name="getPayload" scoped="" ref="0xb72550f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb72551d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb72552b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xb725bc68" loc="48:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xb725bc68"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb79c9d30"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb725be40"/>
        <function-ref name="getPayload" scoped="" ref="0xb725bf20"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb7258018"/>
        <function-ref name="cancel" scoped="" ref="0xb72580f8"/>
        <function-ref name="sendDone" scoped="" ref="0xb72581d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0xb7258cd8" loc="50:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0xb7258cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb79c9d30"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb7258eb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0xb72531d0" loc="60:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0xb72531d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0xb72533a8"/>
        <function-ref name="setNetwork" scoped="" ref="0xb7253488"/>
        <function-ref name="getRssi" scoped="" ref="0xb7253568"/>
        <function-ref name="getNetwork" scoped="" ref="0xb7253648"/>
        <function-ref name="getPower" scoped="" ref="0xb7253728"/>
        <function-ref name="getLqi" scoped="" ref="0xb7253808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0xb7251130" loc="63:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0xb7251130"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0xb7251388"/>
        <function-ref name="changed" scoped="" ref="0xb7251468"/>
        <function-ref name="amGroup" scoped="" ref="0xb7251548"/>
        <function-ref name="setAddress" scoped="" ref="0xb7251628"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0xb72539f0" loc="61:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0xb72539f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0xb7253bc8"/>
        <function-ref name="getHeader" scoped="" ref="0xb7253ca8"/>
        <function-ref name="getMetadata" scoped="" ref="0xb7253d88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb7258640" loc="49:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb7258640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb79c9d30"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb7258818"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xb72507d0" loc="67:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xb72507d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb72509a8"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb7250a88"/>
        <function-ref name="led1On" scoped="" ref="0xb7250b68"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb7250c48"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb7250d28"/>
        <function-ref name="get" scoped="" ref="0xb7250e08"/>
        <function-ref name="led1Off" scoped="" ref="0xb7250ee8"/>
        <function-ref name="led2Off" scoped="" ref="0xb724f2b0"/>
        <function-ref name="set" scoped="" ref="0xb724f010"/>
        <function-ref name="led0On" scoped="" ref="0xb724f0f0"/>
        <function-ref name="led2On" scoped="" ref="0xb724f1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xb7256060" loc="51:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb7256060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb7256238"/>
        <function-ref name="source" scoped="" ref="0xb7256318"/>
        <function-ref name="address" scoped="" ref="0xb72563f8"/>
        <function-ref name="destination" scoped="" ref="0xb72564d8"/>
        <function-ref name="setSource" scoped="" ref="0xb72565b8"/>
        <function-ref name="setDestination" scoped="" ref="0xb7256698"/>
        <function-ref name="type" scoped="" ref="0xb7256778"/>
        <function-ref name="setType" scoped="" ref="0xb7256858"/>
        <function-ref name="isForMe" scoped="" ref="0xb7256938"/>
        <function-ref name="setGroup" scoped="" ref="0xb7256a18"/>
        <function-ref name="localGroup" scoped="" ref="0xb7256af8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioResource" ref="0xb7250108" loc="66:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioResource" scoped="" ref="0xb7250108"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb72502e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb72503c0"/>
        <function-ref name="request" scoped="" ref="0xb72504a0"/>
        <function-ref name="granted" scoped="" ref="0xb7250580"/>
        <function-ref name="isOwner" scoped="" ref="0xb7250660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xb72026a0" loc="49:/opt/tinyos-main-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="projectSinkAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xb72026a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb7202878"/>
        <function-ref name="getPayload" scoped="" ref="0xb7202958"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb7202a38"/>
        <function-ref name="cancel" scoped="" ref="0xb7202b18"/>
        <function-ref name="sendDone" scoped="" ref="0xb7202bf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb7202d38" loc="50:/opt/tinyos-main-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="projectSinkAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb7202d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb7202f10"/>
        <function-ref name="payloadLength" scoped="" ref="0xb71b8010"/>
        <function-ref name="getPayload" scoped="" ref="0xb71b80f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb71b81d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb71b82b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xb71b83f0" loc="51:/opt/tinyos-main-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="projectSinkAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb71b83f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb71b85c8"/>
        <function-ref name="source" scoped="" ref="0xb71b86a8"/>
        <function-ref name="address" scoped="" ref="0xb71b8788"/>
        <function-ref name="destination" scoped="" ref="0xb71b8868"/>
        <function-ref name="setSource" scoped="" ref="0xb71b8948"/>
        <function-ref name="setDestination" scoped="" ref="0xb71b8a28"/>
        <function-ref name="type" scoped="" ref="0xb71b8b08"/>
        <function-ref name="setType" scoped="" ref="0xb71b8be8"/>
        <function-ref name="isForMe" scoped="" ref="0xb71b8cc8"/>
        <function-ref name="setGroup" scoped="" ref="0xb71b8da8"/>
        <function-ref name="localGroup" scoped="" ref="0xb71b8e88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0xb71b7010" loc="52:/opt/tinyos-main-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="projectSinkAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0xb71b7010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb71b71e8"/>
        <function-ref name="noAck" scoped="" ref="0xb71b72c8"/>
        <function-ref name="wasAcked" scoped="" ref="0xb71b73a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xb6e869b0" loc="49:/opt/tinyos-main-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="projectSinkAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xb6e869b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6e86b88"/>
        <function-ref name="getPayload" scoped="" ref="0xb6e86c68"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6e86d48"/>
        <function-ref name="cancel" scoped="" ref="0xb6e86e28"/>
        <function-ref name="sendDone" scoped="" ref="0xb6e86f08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb6e82070" loc="50:/opt/tinyos-main-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="projectSinkAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb6e82070"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6e82248"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6e82328"/>
        <function-ref name="getPayload" scoped="" ref="0xb6e82408"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6e824e8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6e825c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xb6e82708" loc="51:/opt/tinyos-main-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="projectSinkAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb6e82708"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb6e828e0"/>
        <function-ref name="source" scoped="" ref="0xb6e829c0"/>
        <function-ref name="address" scoped="" ref="0xb6e82aa0"/>
        <function-ref name="destination" scoped="" ref="0xb6e82b80"/>
        <function-ref name="setSource" scoped="" ref="0xb6e82c60"/>
        <function-ref name="setDestination" scoped="" ref="0xb6e82d40"/>
        <function-ref name="type" scoped="" ref="0xb6e82e20"/>
        <function-ref name="setType" scoped="" ref="0xb6e82f00"/>
        <function-ref name="isForMe" scoped="" ref="0xb6e81010"/>
        <function-ref name="setGroup" scoped="" ref="0xb6e810f0"/>
        <function-ref name="localGroup" scoped="" ref="0xb6e811d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0xb6e81330" loc="52:/opt/tinyos-main-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="projectSinkAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0xb6e81330"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb6e81508"/>
        <function-ref name="noAck" scoped="" ref="0xb6e815e8"/>
        <function-ref name="wasAcked" scoped="" ref="0xb6e816c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xb6e7c060" loc="44:/opt/tinyos-main-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="projectSinkAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xb6e7c060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6e7c238"/>
        <function-ref name="getPayload" scoped="" ref="0xb6e7c318"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6e7c3f8"/>
        <function-ref name="cancel" scoped="" ref="0xb6e7c4d8"/>
        <function-ref name="sendDone" scoped="" ref="0xb6e7c5b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0xb6e7c728" loc="46:/opt/tinyos-main-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="projectSinkAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb6e7c728"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6e7c900"/>
        <function-ref name="getPayload" scoped="" ref="0xb6e7c9e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6e7cac0"/>
        <function-ref name="cancel" scoped="" ref="0xb6e7cba0"/>
        <function-ref name="sendDone" scoped="" ref="0xb6e7cc80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0xb6e7cdc0" loc="47:/opt/tinyos-main-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="projectSinkAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb6e7cdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb6e7b010"/>
        <function-ref name="source" scoped="" ref="0xb6e7b0f0"/>
        <function-ref name="address" scoped="" ref="0xb6e7b1d0"/>
        <function-ref name="destination" scoped="" ref="0xb6e7b2b0"/>
        <function-ref name="setSource" scoped="" ref="0xb6e7b390"/>
        <function-ref name="setDestination" scoped="" ref="0xb6e7b470"/>
        <function-ref name="type" scoped="" ref="0xb6e7b550"/>
        <function-ref name="setType" scoped="" ref="0xb6e7b630"/>
        <function-ref name="isForMe" scoped="" ref="0xb6e7b710"/>
        <function-ref name="setGroup" scoped="" ref="0xb6e7b7f0"/>
        <function-ref name="localGroup" scoped="" ref="0xb6e7b8d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb71ed688" loc="43:/opt/tinyos-main-2.1.2/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb71ed688"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb71ed860"/>
        <function-ref name="getPayload" scoped="" ref="0xb71ed940"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb71eda20"/>
        <function-ref name="cancel" scoped="" ref="0xb71edb00"/>
        <function-ref name="sendDone" scoped="" ref="0xb71edbe0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0xb71e8ca8" loc="48:/opt/tinyos-main-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xb71e8ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb79c9d30"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb71e8e90"/>
        <function-ref name="getPayload" scoped="" ref="0xb71c0010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb71c00f0"/>
        <function-ref name="cancel" scoped="" ref="0xb71c01d0"/>
        <function-ref name="sendDone" scoped="" ref="0xb71c02b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb71e8538" loc="46:/opt/tinyos-main-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb71e8538"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb71e8720"/>
        <function-ref name="getPayload" scoped="" ref="0xb71e8800"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb71e88e0"/>
        <function-ref name="cancel" scoped="" ref="0xb71e89c0"/>
        <function-ref name="sendDone" scoped="" ref="0xb71e8aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0xb71bf010" loc="50:/opt/tinyos-main-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb71bf010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb71bf1e8"/>
        <function-ref name="payloadLength" scoped="" ref="0xb71bf2c8"/>
        <function-ref name="getPayload" scoped="" ref="0xb71bf3a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb71bf488"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb71bf568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0xb71bf6e8" loc="169:/opt/tinyos-main-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0xb71bf6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb71bf8c0"/>
        <function-ref name="runTask" scoped="" ref="0xb71bf9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0xb71bfb20" loc="126:/opt/tinyos-main-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0xb71bfb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb71bfcf8"/>
        <function-ref name="runTask" scoped="" ref="0xb71bfdd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0xb71c03f0" loc="49:/opt/tinyos-main-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb71c03f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb71c05c8"/>
        <function-ref name="source" scoped="" ref="0xb71c06a8"/>
        <function-ref name="address" scoped="" ref="0xb71c0788"/>
        <function-ref name="destination" scoped="" ref="0xb71c0868"/>
        <function-ref name="setSource" scoped="" ref="0xb71c0948"/>
        <function-ref name="setDestination" scoped="" ref="0xb71c0a28"/>
        <function-ref name="type" scoped="" ref="0xb71c0b08"/>
        <function-ref name="setType" scoped="" ref="0xb71c0be8"/>
        <function-ref name="isForMe" scoped="" ref="0xb71c0cc8"/>
        <function-ref name="setGroup" scoped="" ref="0xb71c0da8"/>
        <function-ref name="localGroup" scoped="" ref="0xb71c0e88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb71b5d60" loc="46:/opt/tinyos-main-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="projectSinkAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb71b5d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb71b1010"/>
        <function-ref name="payloadLength" scoped="" ref="0xb71b10f0"/>
        <function-ref name="getPayload" scoped="" ref="0xb71b11d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb71b12b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb71b1390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb71b5a48" loc="45:/opt/tinyos-main-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="projectSinkAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb71b5a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb71b5c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xb71b14d0" loc="47:/opt/tinyos-main-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="projectSinkAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb71b14d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb71b16a8"/>
        <function-ref name="source" scoped="" ref="0xb71b1788"/>
        <function-ref name="address" scoped="" ref="0xb71b1868"/>
        <function-ref name="destination" scoped="" ref="0xb71b1948"/>
        <function-ref name="setSource" scoped="" ref="0xb71b1a28"/>
        <function-ref name="setDestination" scoped="" ref="0xb71b1b08"/>
        <function-ref name="type" scoped="" ref="0xb71b1be8"/>
        <function-ref name="setType" scoped="" ref="0xb71b1cc8"/>
        <function-ref name="isForMe" scoped="" ref="0xb71b1da8"/>
        <function-ref name="setGroup" scoped="" ref="0xb71b1e88"/>
        <function-ref name="localGroup" scoped="" ref="0xb71b0010"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/opt/tinyos-main-2.1.2/tos/interfaces/Init.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0xb7aeb138" loc="62:/opt/tinyos-main-2.1.2/tos/interfaces/Init.nc">
        <documentation loc="53:/opt/tinyos-main-2.1.2/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7b89628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/opt/tinyos-main-2.1.2/tos/interfaces/Boot.nc">
      <documentation loc="42:/opt/tinyos-main-2.1.2/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0xb7aee588" loc="60:/opt/tinyos-main-2.1.2/tos/interfaces/Boot.nc">
        <documentation loc="51:/opt/tinyos-main-2.1.2/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0xb7ae34e8" loc="60:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7ed71e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7ed7848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0xb7ae3390" loc="60:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7ed7848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0xb7ae9a80" loc="31:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7ed71e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0xb7ae4168" loc="39:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7ed7848"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7ed7848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0xb7ae4010" loc="39:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7ed7848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0xb7ae4830" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7ed7848"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7ed7848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0xb7ae46d8" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7ed7848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0xb7ae4d88" loc="53:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/opt/tinyos-main-2.1.2/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0xb7ad7138" loc="44:/opt/tinyos-main-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0xb7ad7520" loc="45:/opt/tinyos-main-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7b916e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0xb7ad8990" loc="42:/opt/tinyos-main-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0xb7ad7cf0" loc="47:/opt/tinyos-main-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7b916e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0xb7ad8d50" loc="43:/opt/tinyos-main-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7b916e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0xb7ad78f8" loc="46:/opt/tinyos-main-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xb7ad8250" loc="40:/opt/tinyos-main-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0xb7ad85e0" loc="41:/opt/tinyos-main-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/opt/tinyos-main-2.1.2/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/opt/tinyos-main-2.1.2/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0xb7b8c390" loc="57:/opt/tinyos-main-2.1.2/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/opt/tinyos-main-2.1.2/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0xb7b8cc98" loc="72:/opt/tinyos-main-2.1.2/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/opt/tinyos-main-2.1.2/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0xb7b8c7d0" loc="65:/opt/tinyos-main-2.1.2/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/opt/tinyos-main-2.1.2/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7b916e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/opt/tinyos-main-2.1.2/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0xb7b87b68" loc="67:/opt/tinyos-main-2.1.2/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/opt/tinyos-main-2.1.2/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7b89628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0xb7b86090" loc="75:/opt/tinyos-main-2.1.2/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/opt/tinyos-main-2.1.2/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/opt/tinyos-main-2.1.2/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/opt/tinyos-main-2.1.2/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0xb7b107e8" loc="76:/opt/tinyos-main-2.1.2/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/opt/tinyos-main-2.1.2/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/opt/tinyos-main-2.1.2/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/opt/tinyos-main-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0xb7afdbb8" loc="62:/opt/tinyos-main-2.1.2/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/opt/tinyos-main-2.1.2/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0xb7b4b340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/opt/tinyos-main-2.1.2/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/opt/tinyos-main-2.1.2/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0xb7b00e70" loc="52:/opt/tinyos-main-2.1.2/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/opt/tinyos-main-2.1.2/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/opt/tinyos-main-2.1.2/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/opt/tinyos-main-2.1.2/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0xb79f02e0" loc="113:/opt/tinyos-main-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/opt/tinyos-main-2.1.2/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7b89628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0xb79f0188" loc="113:/opt/tinyos-main-2.1.2/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7b89628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0xb79ef058" loc="138:/opt/tinyos-main-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/opt/tinyos-main-2.1.2/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7b89628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0xb79f0ed0" loc="138:/opt/tinyos-main-2.1.2/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7b89628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0xb79f3a90" loc="104:/opt/tinyos-main-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/opt/tinyos-main-2.1.2/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7b89628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xb79f07f0" loc="130:/opt/tinyos-main-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/opt/tinyos-main-2.1.2/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7b89628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/opt/tinyos-main-2.1.2/tos/interfaces/AMSend.nc">
      <function command="" provided="0" name="send" ref="0xb79bed98" loc="80:/opt/tinyos-main-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="60:/opt/tinyos-main-2.1.2/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7b89628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb79c7270"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0xb79be838" loc="80:/opt/tinyos-main-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb79c7270"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0xb79bea50" loc="80:/opt/tinyos-main-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb79bec30" loc="80:/opt/tinyos-main-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0xb79bba88" loc="135:/opt/tinyos-main-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="126:/opt/tinyos-main-2.1.2/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb79bb728" loc="135:/opt/tinyos-main-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb79bb908" loc="135:/opt/tinyos-main-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0xb79bb1c8" loc="123:/opt/tinyos-main-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="113:/opt/tinyos-main-2.1.2/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0xb79bdb80" loc="96:/opt/tinyos-main-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="82:/opt/tinyos-main-2.1.2/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7b89628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb79bda28" loc="96:/opt/tinyos-main-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0xb79ba898" loc="110:/opt/tinyos-main-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="98:/opt/tinyos-main-2.1.2/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7b89628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb79ba540" loc="110:/opt/tinyos-main-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0xb79ba738" loc="110:/opt/tinyos-main-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7b89628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/opt/tinyos-main-2.1.2/tos/interfaces/Packet.nc">
      <documentation loc="42:/opt/tinyos-main-2.1.2/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0xb79b91c0" loc="65:/opt/tinyos-main-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="58:/opt/tinyos-main-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb79b9068" loc="65:/opt/tinyos-main-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0xb79b9b90" loc="78:/opt/tinyos-main-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="67:/opt/tinyos-main-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb79b9a38" loc="78:/opt/tinyos-main-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0xb79b6b10" loc="126:/opt/tinyos-main-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="109:/opt/tinyos-main-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb79b67b0" loc="126:/opt/tinyos-main-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb79b6990" loc="126:/opt/tinyos-main-2.1.2/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0xb79b61c8" loc="106:/opt/tinyos-main-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="96:/opt/tinyos-main-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0xb79b5818" loc="94:/opt/tinyos-main-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="80:/opt/tinyos-main-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb79b54d8" loc="94:/opt/tinyos-main-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb79b56b8" loc="94:/opt/tinyos-main-2.1.2/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
      <documentation loc="36:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb79f1620" loc="53:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb79f1620"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0xb79a2f00" loc="136:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="132:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7ed7848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0xb79a4bb8" loc="83:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="80:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0xb79a3d20" loc="114:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="100:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7ed7848"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7ed7848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0xb79a39d8" loc="114:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7ed7848"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0xb79a3bc0" loc="114:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7ed7848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0xb79a3530" loc="98:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="94:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7b916e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0xb79a1888" loc="151:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="146:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7ed7848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0xb79a1358" loc="144:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="138:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7ed7848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0xb79a3070" loc="92:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="86:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7b916e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0xb79f1c78" loc="64:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="56:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7ed7848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0xb79f1b20" loc="64:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7ed7848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0xb79a28e0" loc="129:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="116:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7ed7848"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7ed7848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0xb79a2598" loc="129:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7ed7848"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0xb79a2780" loc="129:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7ed7848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0xb79a4320" loc="73:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="66:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7ed7848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0xb79a41c8" loc="73:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7ed7848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xb79a47f0" loc="78:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="75:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/opt/tinyos-main-2.1.2/tos/interfaces/Read.nc">
      <documentation loc="33:/opt/tinyos-main-2.1.2/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0xb799aab8" loc="49:/opt/tinyos-main-2.1.2/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0xb799aab8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0xb7996010" loc="55:/opt/tinyos-main-2.1.2/tos/interfaces/Read.nc">
        <documentation loc="50:/opt/tinyos-main-2.1.2/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7b89628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0xb79967c0" loc="63:/opt/tinyos-main-2.1.2/tos/interfaces/Read.nc">
        <documentation loc="57:/opt/tinyos-main-2.1.2/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7b89628"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0xb799aab8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0xb7996490" loc="63:/opt/tinyos-main-2.1.2/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7b89628"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0xb7996660" loc="63:/opt/tinyos-main-2.1.2/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0xb799aab8"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/opt/tinyos-main-2.1.2/tos/interfaces/Receive.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0xb79f2ba0" loc="78:/opt/tinyos-main-2.1.2/tos/interfaces/Receive.nc">
        <documentation loc="58:/opt/tinyos-main-2.1.2/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
              <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb79f2658" loc="78:/opt/tinyos-main-2.1.2/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0xb79f2838" loc="78:/opt/tinyos-main-2.1.2/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb79f2a18" loc="78:/opt/tinyos-main-2.1.2/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0xb79adc50" loc="177:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0xb79c7010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb79adaf8" loc="177:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0xb79b05d0" loc="88:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0xb79c7270"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb79b0478" loc="88:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0xb79b4518" loc="68:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0xb79c7270"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0xb79b4bb0" loc="78:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0xb79c7270"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb79b4a58" loc="78:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0xb79b1ed0" loc="121:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb79c7270"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb79b1b68" loc="121:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0xb79b1d70" loc="121:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb79c7270"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0xb79b11e8" loc="103:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb79c7270"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb79b0e50" loc="103:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0xb79b1088" loc="103:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb79c7270"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0xb79ac5f0" loc="147:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0xb79c9d30"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb79ac498" loc="147:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0xb79ad170" loc="162:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0xb79c9d30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb79acdf8" loc="162:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0xb79ad010" loc="162:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0xb79c9d30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0xb79aea90" loc="136:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7b916e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb79ae938" loc="136:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0xb79a98e8" loc="187:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0xb79c7010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb79a9588" loc="187:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0xb79a9788" loc="187:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0xb79c7010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0xb79aa1a8" loc="195:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0xb79c7010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/opt/tinyos-main-2.1.2/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/opt/tinyos-main-2.1.2/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb796fbd0" loc="53:/opt/tinyos-main-2.1.2/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb796fbd0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0xb796c0c8" loc="61:/opt/tinyos-main-2.1.2/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/opt/tinyos-main-2.1.2/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7ed7848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/opt/tinyos-main-2.1.2/tos/lib/timer/Counter.nc">
      <documentation loc="36:/opt/tinyos-main-2.1.2/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb79613c8" loc="57:/opt/tinyos-main-2.1.2/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb79613c8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0xb7961530" loc="57:/opt/tinyos-main-2.1.2/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb7961530"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0xb7961a18" loc="64:/opt/tinyos-main-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="59:/opt/tinyos-main-2.1.2/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb7961530"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0xb7960510" loc="76:/opt/tinyos-main-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="73:/opt/tinyos-main-2.1.2/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0xb7960010" loc="71:/opt/tinyos-main-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="66:/opt/tinyos-main-2.1.2/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7b916e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0xb7960910" loc="82:/opt/tinyos-main-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="78:/opt/tinyos-main-2.1.2/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/opt/tinyos-main-2.1.2/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/opt/tinyos-main-2.1.2/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb7967420" loc="56:/opt/tinyos-main-2.1.2/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb7967420"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0xb7967588" loc="56:/opt/tinyos-main-2.1.2/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb7967588"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0xb7965848" loc="109:/opt/tinyos-main-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/opt/tinyos-main-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb7967588"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0xb7966528" loc="78:/opt/tinyos-main-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/opt/tinyos-main-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0xb7965200" loc="103:/opt/tinyos-main-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/opt/tinyos-main-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb7967588"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb7967588"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0xb7966ea0" loc="103:/opt/tinyos-main-2.1.2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb7967588"/></type-var>
          </variable>
          <variable name="dt" ref="0xb79650a0" loc="103:/opt/tinyos-main-2.1.2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb7967588"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0xb7966998" loc="88:/opt/tinyos-main-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/opt/tinyos-main-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7b916e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0xb7965cd8" loc="116:/opt/tinyos-main-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/opt/tinyos-main-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb7967588"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0xb7967bb8" loc="66:/opt/tinyos-main-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/opt/tinyos-main-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb7967588"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0xb7967a60" loc="66:/opt/tinyos-main-2.1.2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb7967588"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xb79660c8" loc="73:/opt/tinyos-main-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/opt/tinyos-main-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="42:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControl" ref="0xb794fbc0" loc="45:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="44:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb7b2fb80"/>
            <typename><typedef-ref name="Atm128TimerControl_t" ref="0xb7b2fda8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0xb79451a8" loc="53:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="52:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb7b29c80"/>
            <typename><typedef-ref name="Atm128_TIFR_t" ref="0xb7b29ea8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0xb79466e0" loc="49:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="48:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb7b2b560"/>
            <typename><typedef-ref name="Atm128_TIMSK_t" ref="0xb7b2b788"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0xb7946ce8" loc="50:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb7b2b560"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0xb7b2b788"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0xb7946b90" loc="50:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb7b2b560"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0xb7b2b788"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0xb79457b0" loc="54:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb7b29c80"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0xb7b29ea8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0xb7945658" loc="54:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb7b29c80"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0xb7b29ea8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0xb7946228" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb7b2fb80"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0xb7b2fda8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0xb79460d0" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb7b2fb80"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0xb7b2fda8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="15:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
      <documentation loc="11:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="controlBusy" ref="0xb793ece8" loc="38:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; @return TRUE if TCCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareBusy" ref="0xb793c1c8" loc="44:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="40:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; @return TRUE if OCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer0Asynchronous" ref="0xb793e8d0" loc="32:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="29:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 0 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0xb793c688" loc="50:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; @return TRUE if TCNT0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0xb7944dd8" loc="21:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="17:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer0 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb7b2dd10"/>
            <typename><typedef-ref name="Atm128Assr_t" ref="0xb7b2c010"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0xb793e3f0" loc="27:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="23:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer0 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb7b2dd10"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0xb7b2c010"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0xb793e298" loc="27:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb7b2dd10"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0xb7b2c010"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0xb79485b8" loc="41:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb79485b8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0xb79414f0" loc="74:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7b916e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0xb7943498" loc="58:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0xb7948ab0" loc="48:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb79485b8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0xb79438a0" loc="62:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0xb7941950" loc="80:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7b916e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xb7943058" loc="54:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb79485b8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0xb7948ee0" loc="54:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb79485b8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0xb7943ca8" loc="65:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xb79410c8" loc="68:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0xb7951bd8" loc="55:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0xb7951bd8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0xb794b438" loc="98:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0xb794db08" loc="87:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7b916e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0xb794e0f8" loc="61:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0xb7951bd8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0xb794b9c8" loc="104:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0xb794b870" loc="104:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0xb794be58" loc="110:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0xb794eec0" loc="75:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0xb794eaa0" loc="70:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0xb794b010" loc="93:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7b916e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xb794e670" loc="67:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0xb7951bd8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0xb794e518" loc="67:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0xb7951bd8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0xb794d2e8" loc="78:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xb794d6e0" loc="81:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/opt/tinyos-main-2.1.2/tos/interfaces/Random.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0xb7871f18" loc="52:/opt/tinyos-main-2.1.2/tos/interfaces/Random.nc">
        <documentation loc="48:/opt/tinyos-main-2.1.2/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7ed71e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0xb7871a70" loc="46:/opt/tinyos-main-2.1.2/tos/interfaces/Random.nc">
        <documentation loc="42:/opt/tinyos-main-2.1.2/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7ed7848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/opt/tinyos-main-2.1.2/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0xb786e118" loc="53:/opt/tinyos-main-2.1.2/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0xb786e118"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0xb786e768" loc="64:/opt/tinyos-main-2.1.2/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/opt/tinyos-main-2.1.2/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7b89628"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0xb786e118"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0xb786e610" loc="64:/opt/tinyos-main-2.1.2/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0xb786e118"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/opt/tinyos-main-2.1.2/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0xb784f870" loc="35:/opt/tinyos-main-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb784f870"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0xb784f9d8" loc="35:/opt/tinyos-main-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb784f9d8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0xb784abd8" loc="63:/opt/tinyos-main-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/opt/tinyos-main-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb784f9d8"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb784aa80" loc="63:/opt/tinyos-main-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0xb7847698" loc="70:/opt/tinyos-main-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/opt/tinyos-main-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7847540" loc="70:/opt/tinyos-main-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0xb784a088" loc="49:/opt/tinyos-main-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/opt/tinyos-main-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7b916e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb784ff08" loc="49:/opt/tinyos-main-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xb7849170" loc="78:/opt/tinyos-main-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/opt/tinyos-main-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb784f9d8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7847de8" loc="78:/opt/tinyos-main-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0xb7849010" loc="78:/opt/tinyos-main-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb784f9d8"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/opt/tinyos-main-2.1.2/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0xb7840170" loc="65:/opt/tinyos-main-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/opt/tinyos-main-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7ed71e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7842da0" loc="65:/opt/tinyos-main-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0xb7840010" loc="65:/opt/tinyos-main-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7ed71e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0xb7840c30" loc="71:/opt/tinyos-main-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/opt/tinyos-main-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7ed71e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7840ad8" loc="71:/opt/tinyos-main-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0xb78428c8" loc="57:/opt/tinyos-main-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/opt/tinyos-main-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7ed71e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0xb7842248" loc="52:/opt/tinyos-main-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/opt/tinyos-main-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7ed71e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0xb78420f0" loc="52:/opt/tinyos-main-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7ed71e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/opt/tinyos-main-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0xb784d3b8" loc="59:/opt/tinyos-main-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/opt/tinyos-main-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7b89628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb784d260" loc="59:/opt/tinyos-main-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0xb784deb0" loc="71:/opt/tinyos-main-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/opt/tinyos-main-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7b89628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb784dd58" loc="71:/opt/tinyos-main-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0xb784c950" loc="85:/opt/tinyos-main-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/opt/tinyos-main-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7b916e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb784c7f8" loc="85:/opt/tinyos-main-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0xb7828020" loc="95:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7829eb0" loc="95:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0xb782bef8" loc="81:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb782bda0" loc="81:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0xb782b090" loc="66:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7ed71e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0xb782cf28" loc="66:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7ed71e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0xb782c9a0" loc="60:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7ed71e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0xb782c848" loc="60:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7ed71e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0xb782b688" loc="73:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7b916e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0xb782b530" loc="73:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7b916e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0xb78297e0" loc="88:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7829688" loc="88:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/opt/tinyos-main-2.1.2/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0xb7821988" loc="59:/opt/tinyos-main-2.1.2/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/opt/tinyos-main-2.1.2/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb79c7270"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0xb7821610" loc="59:/opt/tinyos-main-2.1.2/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb79c7270"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0xb7821828" loc="59:/opt/tinyos-main-2.1.2/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0xb7832cd0" loc="56:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0xb7832978" loc="56:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0xb7832b70" loc="56:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0xb782fc88" loc="77:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0xb782f908" loc="77:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0xb782fb28" loc="77:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0xb7831368" loc="64:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0xb7ed8630"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0xb7831210" loc="64:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0xb782f310" loc="75:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0xb782f1b8" loc="75:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0xb78324b0" loc="47:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0xb7832358" loc="47:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0xb7831a30" loc="72:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0xb78318d8" loc="72:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/opt/tinyos-main-2.1.2/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0xb7825960" loc="65:/opt/tinyos-main-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/opt/tinyos-main-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7ed71e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7825808" loc="65:/opt/tinyos-main-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0xb7833d58" loc="46:/opt/tinyos-main-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/opt/tinyos-main-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7ed71e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb78339c0" loc="46:/opt/tinyos-main-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0xb7833bf8" loc="46:/opt/tinyos-main-2.1.2/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7ed71e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0xb7825010" loc="59:/opt/tinyos-main-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/opt/tinyos-main-2.1.2/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7ed71e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7824e70" loc="59:/opt/tinyos-main-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0xb7824950" loc="53:/opt/tinyos-main-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/opt/tinyos-main-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7ed71e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb78245b8" loc="53:/opt/tinyos-main-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0xb78247f0" loc="53:/opt/tinyos-main-2.1.2/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7ed71e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0xb78232a0" loc="71:/opt/tinyos-main-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/opt/tinyos-main-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7b916e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7823148" loc="71:/opt/tinyos-main-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/opt/tinyos-main-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0xb782d470" loc="47:/opt/tinyos-main-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/opt/tinyos-main-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7b916e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb782d318" loc="47:/opt/tinyos-main-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/opt/tinyos-main-2.1.2/tos/interfaces/Send.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0xb781ee08" loc="75:/opt/tinyos-main-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="57:/opt/tinyos-main-2.1.2/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7b89628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb781eac8" loc="75:/opt/tinyos-main-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb781eca8" loc="75:/opt/tinyos-main-2.1.2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0xb7816a18" loc="125:/opt/tinyos-main-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="115:/opt/tinyos-main-2.1.2/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb78166b8" loc="125:/opt/tinyos-main-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb7816898" loc="125:/opt/tinyos-main-2.1.2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0xb7816158" loc="112:/opt/tinyos-main-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="102:/opt/tinyos-main-2.1.2/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0xb7817b38" loc="89:/opt/tinyos-main-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="77:/opt/tinyos-main-2.1.2/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7b89628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb78179e0" loc="89:/opt/tinyos-main-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0xb7815820" loc="100:/opt/tinyos-main-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="91:/opt/tinyos-main-2.1.2/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7b89628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb78154c8" loc="100:/opt/tinyos-main-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0xb78156c0" loc="100:/opt/tinyos-main-2.1.2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7b89628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/opt/tinyos-main-2.1.2/tos/interfaces/Resource.nc">
      <documentation loc="63:/opt/tinyos-main-2.1.2/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0xb781b138" loc="120:/opt/tinyos-main-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="104:/opt/tinyos-main-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7b89628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0xb781c7f0" loc="97:/opt/tinyos-main-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="90:/opt/tinyos-main-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7b89628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0xb781c1f0" loc="88:/opt/tinyos-main-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="78:/opt/tinyos-main-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7b89628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0xb781cca0" loc="102:/opt/tinyos-main-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="99:/opt/tinyos-main-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0xb781b830" loc="128:/opt/tinyos-main-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="122:/opt/tinyos-main-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7b916e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0xb7808dd0" loc="51:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7b89628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7b916e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0xb7808a88" loc="51:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0xb7808c70" loc="51:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7b916e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0xb7800908" loc="65:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7b89628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0xb77fd068" loc="84:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7b89628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0xb77fe858" loc="84:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0xb77fed00" loc="84:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb77feee0" loc="84:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0xb77fe368" loc="73:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7b89628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0xb77fe010" loc="73:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0xb77fe208" loc="73:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7b89628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0xb7800430" loc="58:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7b89628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7b916e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0xb78002d8" loc="58:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7b916e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/opt/tinyos-main-2.1.2/tos/interfaces/StdControl.nc">
      <documentation loc="72:/opt/tinyos-main-2.1.2/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0xb78024d0" loc="95:/opt/tinyos-main-2.1.2/tos/interfaces/StdControl.nc">
        <documentation loc="88:/opt/tinyos-main-2.1.2/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7b89628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xb7802998" loc="105:/opt/tinyos-main-2.1.2/tos/interfaces/StdControl.nc">
        <documentation loc="97:/opt/tinyos-main-2.1.2/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7b89628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPayload" ref="0xb77f0220" loc="49:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="45:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the payload region of the message, after any headers&#10;    works with extended addressing mode&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb77f00a8" loc="49:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0xb77fcbc8" loc="42:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0xb79eef60"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0xb79eb010"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb77fca30" loc="42:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0xb77f0ce8" loc="53:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="50:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0xb79eb6d0"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0xb79ea620"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb77f0b50" loc="53:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0xb7806c68" loc="71:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7b89628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0xb7803010" loc="97:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7b89628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0xb7804ad8" loc="90:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7b89628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0xb7809e20" loc="51:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7b89628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0xb7806790" loc="63:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7b89628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0xb78041a8" loc="76:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0xb7804668" loc="83:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7b89628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0xb7806338" loc="56:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/opt/tinyos-main-2.1.2/tos/interfaces/Leds.nc">
      <documentation loc="33:/opt/tinyos-main-2.1.2/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0xb77fa970" loc="61:/opt/tinyos-main-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="58:/opt/tinyos-main-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0xb77fadb8" loc="67:/opt/tinyos-main-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="63:/opt/tinyos-main-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0xb77f9250" loc="72:/opt/tinyos-main-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="69:/opt/tinyos-main-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0xb77f9ac0" loc="83:/opt/tinyos-main-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="79:/opt/tinyos-main-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0xb77f8880" loc="100:/opt/tinyos-main-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="96:/opt/tinyos-main-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0xb77f8d28" loc="117:/opt/tinyos-main-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="103:/opt/tinyos-main-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0xb77f9678" loc="77:/opt/tinyos-main-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="74:/opt/tinyos-main-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xb77f6640" loc="134:/opt/tinyos-main-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="120:/opt/tinyos-main-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0xb77f64e8" loc="134:/opt/tinyos-main-2.1.2/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0xb77fa548" loc="56:/opt/tinyos-main-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="53:/opt/tinyos-main-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0xb77f8010" loc="89:/opt/tinyos-main-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="86:/opt/tinyos-main-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0xb77f8438" loc="94:/opt/tinyos-main-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="91:/opt/tinyos-main-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:/opt/tinyos-main-2.1.2/tos/interfaces/State.nc">
      <documentation loc="33:/opt/tinyos-main-2.1.2/tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0xb77ec4f0" loc="71:/opt/tinyos-main-2.1.2/tos/interfaces/State.nc">
        <documentation loc="68:/opt/tinyos-main-2.1.2/tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0xb77ed668" loc="56:/opt/tinyos-main-2.1.2/tos/interfaces/State.nc">
        <documentation loc="53:/opt/tinyos-main-2.1.2/tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0xb77ec088" loc="66:/opt/tinyos-main-2.1.2/tos/interfaces/State.nc">
        <documentation loc="63:/opt/tinyos-main-2.1.2/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7b916e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0xb77edef8" loc="66:/opt/tinyos-main-2.1.2/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0xb77eda80" loc="61:/opt/tinyos-main-2.1.2/tos/interfaces/State.nc">
        <documentation loc="58:/opt/tinyos-main-2.1.2/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7b916e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0xb77f5b48" loc="45:/opt/tinyos-main-2.1.2/tos/interfaces/State.nc">
        <documentation loc="40:/opt/tinyos-main-2.1.2/tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7b89628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0xb77f59f0" loc="45:/opt/tinyos-main-2.1.2/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0xb77ed1e0" loc="51:/opt/tinyos-main-2.1.2/tos/interfaces/State.nc">
        <documentation loc="47:/opt/tinyos-main-2.1.2/tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0xb77ed088" loc="51:/opt/tinyos-main-2.1.2/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="46:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0xb77b8c28" loc="106:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="100:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7b916e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7b916e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0xb77b88c0" loc="106:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7b916e8"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0xb77b8ac8" loc="106:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7b916e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0xb77baef0" loc="93:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="90:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7b916e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0xb77ba910" loc="87:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="81:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7b916e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7b916e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0xb77ba520" loc="87:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7b916e8"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0xb77ba7b0" loc="87:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7b916e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0xb77bfd70" loc="55:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7b89628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0xb77bfc18" loc="55:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7b89628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0xb77b8440" loc="98:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="95:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7b916e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0xb77bb610" loc="72:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7ed71e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0xb77bb4b8" loc="72:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7ed71e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0xb77bc730" loc="61:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0xb77bc5d8" loc="61:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0xb77b7790" loc="117:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="114:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7b916e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0xb77ba010" loc="78:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7ed71e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0xb77bbe80" loc="78:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7ed71e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0xb77b72c8" loc="112:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="108:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7b916e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0xb77bcb78" loc="66:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="63:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Get the long address of the radio: set in hardware&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0xb783f010"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0xb783f4a0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0xb77bb038" loc="71:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="68:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7ed71e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0xb77bf768" loc="54:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="48:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7b89628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0xb77bc1a8" loc="60:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="57:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0xb77bba50" loc="77:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7ed71e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="47:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="33:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0xb779f4a8" loc="55:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0xb79efca0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0xb7ed71e8"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb779f350" loc="55:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0xb7ed71e8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0xb779fb40" loc="63:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="57:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0xb79efca0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7ed71e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb779f9e8" loc="63:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7ed71e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:/opt/tinyos-main-2.1.2/tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:/opt/tinyos-main-2.1.2/tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
        <long>&#10; Interface to read the 64-bit IEEE EUI.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getId" ref="0xb77ad210" loc="48:/opt/tinyos-main-2.1.2/tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:/opt/tinyos-main-2.1.2/tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0xb783f010"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0xb783f4a0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/opt/tinyos-main-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0xb77a5010" loc="50:/opt/tinyos-main-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/opt/tinyos-main-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0xb79c7270"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0xb77a5880" loc="60:/opt/tinyos-main-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/opt/tinyos-main-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0xb77a5480" loc="55:/opt/tinyos-main-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/opt/tinyos-main-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0xb79c7010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0xb77aaa90" loc="45:/opt/tinyos-main-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/opt/tinyos-main-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0xb79c7010"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb79c7270"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0xb77aa728" loc="45:/opt/tinyos-main-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0xb79c7010"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0xb77aa930" loc="45:/opt/tinyos-main-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb79c7270"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="44:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="33:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0xb779eed8" loc="53:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="46:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0xb79efca0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0xb77a3010" loc="52:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0xb79efca0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0xb77a9758" loc="52:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0xb77a9c30" loc="52:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0xb77a9e30" loc="52:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0xb77a3df8" loc="63:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0xb79efca0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0xb77a35b8" loc="63:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0xb77a3a90" loc="63:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0xb77a3c90" loc="63:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:/opt/tinyos-main-2.1.2/tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0xb77a7720" loc="68:/opt/tinyos-main-2.1.2/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:/opt/tinyos-main-2.1.2/tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0xb77a72c0" loc="61:/opt/tinyos-main-2.1.2/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:/opt/tinyos-main-2.1.2/tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7b89628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0xb77abe90" loc="54:/opt/tinyos-main-2.1.2/tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7b89628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0xb77ab928" loc="53:/opt/tinyos-main-2.1.2/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:/opt/tinyos-main-2.1.2/tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7b89628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="42:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0xb77332d8" loc="58:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="57:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb7b178e0"/>
            <typename><typedef-ref name="Atm128_ETIFR_t" ref="0xb7b17b08"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlCapture" ref="0xb7735ca0" loc="50:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb7b21c30"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0xb7b21e58"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0xb7735b48" loc="50:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb7b21c30"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0xb7b21e58"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0xb77347e8" loc="54:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="53:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb7b18398"/>
            <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0xb7b185c0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlCompare" ref="0xb77375c0" loc="45:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="44:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Timer control registers: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb7b25aa8"/>
            <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0xb7b25cd0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0xb7734df8" loc="55:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb7b18398"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0xb7b185c0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0xb7734ca0" loc="55:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb7b18398"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0xb7b185c0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0xb77338e8" loc="59:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb7b178e0"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0xb7b17b08"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0xb7733790" loc="59:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb7b178e0"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0xb7b17b08"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlClock" ref="0xb7735010" loc="47:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb7b1f2c0"/>
            <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0xb7b1f4e8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlCapture" ref="0xb7737ae0" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb7b21c30"/>
            <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0xb7b21e58"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlCompare" ref="0xb7735658" loc="49:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb7b25aa8"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0xb7b25cd0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0xb7735500" loc="49:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb7b25aa8"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0xb7b25cd0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlClock" ref="0xb7734328" loc="51:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb7b1f2c0"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0xb7b1f4e8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0xb77341d0" loc="51:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb7b1f2c0"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0xb7b1f4e8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="40:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0xb7739b00" loc="40:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb7739b00"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0xb772e650" loc="88:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="84:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7b916e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0xb772e4f8" loc="88:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7b916e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0xb772fc30" loc="76:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="72:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10; </short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7b916e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0xb7731010" loc="47:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="43:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb7739b00"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0xb7731b60" loc="60:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="56:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb7739b00"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0xb7731a08" loc="60:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb7739b00"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0xb772f010" loc="64:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag.</short>
          <long> Clear the capture interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0xb772e0c8" loc="82:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="78:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10; </short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7b916e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xb7731588" loc="53:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="49:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb7739b00"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0xb7731430" loc="53:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb7739b00"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0xb772f418" loc="67:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="66:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt.</short>
          <long> Enable the capture interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xb772f810" loc="70:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts.</short>
          <long> Turn off capture interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:/opt/tinyos-main-2.1.2/tos/interfaces/GpioCapture.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0xb7646ba8" loc="54:/opt/tinyos-main-2.1.2/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7b89628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0xb76425b0" loc="66:/opt/tinyos-main-2.1.2/tos/interfaces/GpioCapture.nc">
        <documentation loc="63:/opt/tinyos-main-2.1.2/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0xb7642168" loc="61:/opt/tinyos-main-2.1.2/tos/interfaces/GpioCapture.nc">
        <documentation loc="56:/opt/tinyos-main-2.1.2/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7ed71e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0xb7642010" loc="61:/opt/tinyos-main-2.1.2/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7ed71e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0xb76466a0" loc="53:/opt/tinyos-main-2.1.2/tos/interfaces/GpioCapture.nc">
        <documentation loc="48:/opt/tinyos-main-2.1.2/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7b89628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Interrupt" loc="41:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; </short>
        <long>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; @author Joe Polastre&#10; @author Martin Turon&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0xb7630a50" loc="56:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="53:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Clears the ATmega128 Interrupt Pending Flag for a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0xb762e9c8" loc="75:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="72:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0xb7630658" loc="51:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="48:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Disables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0xb762e500" loc="70:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="65:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7b916e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0xb762e3a8" loc="70:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7b916e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0xb7630250" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="43:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Enables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0xb7630ea0" loc="63:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="58:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port&#10;&#10; </short>
          <long> &#10; Gets the current value of the input voltage of a port&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7b916e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128InterruptSig" loc="43:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
      <documentation loc="35:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).</short>
        <long>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @see HplAtm128Interrupt&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0xb761f940" loc="48:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <documentation loc="45:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
          <short>&#10; Signalled when an interrupt occurs on a pin&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0xb75e0db8" loc="24:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0xb75dd2d0" loc="31:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0xb75dd7b0" loc="39:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7b89628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0xb75cb7a8" loc="62:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7b89628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb75cb448" loc="62:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0xb75cb648" loc="62:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0xb75c9ef0" loc="91:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7b89628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb75c9990" loc="91:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0xb75c9b90" loc="91:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0xb75c9d88" loc="91:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7b89628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0xb75c9170" loc="82:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0xb79efca0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb75cadb8" loc="82:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0xb75c9010" loc="82:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0xb75ccb98" loc="51:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0xb79efca0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb75cc838" loc="51:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0xb75cca38" loc="51:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0xb75ca570" loc="71:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7b89628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb75ca010" loc="71:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0xb75ca210" loc="71:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0xb75ca408" loc="71:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7b89628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="54:/opt/tinyos-main-2.1.2/tos/interfaces/SpiPacket.nc">
      <documentation loc="35:/opt/tinyos-main-2.1.2/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.8 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0xb75b8c08" loc="70:/opt/tinyos-main-2.1.2/tos/interfaces/SpiPacket.nc">
        <documentation loc="56:/opt/tinyos-main-2.1.2/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7b89628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7ed71e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0xb75b8698" loc="70:/opt/tinyos-main-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0xb75b88b0" loc="70:/opt/tinyos-main-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb75b8aa0" loc="70:/opt/tinyos-main-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7ed71e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0xb75b6298" loc="82:/opt/tinyos-main-2.1.2/tos/interfaces/SpiPacket.nc">
        <documentation loc="72:/opt/tinyos-main-2.1.2/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7ed71e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7b89628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0xb75b5ae0" loc="82:/opt/tinyos-main-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0xb75b5cf8" loc="82:/opt/tinyos-main-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb75b5ee8" loc="82:/opt/tinyos-main-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7ed71e8"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0xb75b6128" loc="83:/opt/tinyos-main-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7b89628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:/opt/tinyos-main-2.1.2/tos/interfaces/SpiByte.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0xb75bb850" loc="45:/opt/tinyos-main-2.1.2/tos/interfaces/SpiByte.nc">
        <documentation loc="40:/opt/tinyos-main-2.1.2/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0xb75bb6f8" loc="45:/opt/tinyos-main-2.1.2/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:/opt/tinyos-main-2.1.2/tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:/opt/tinyos-main-2.1.2/tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0xb7567ab8" loc="62:/opt/tinyos-main-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:/opt/tinyos-main-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb7567960" loc="62:/opt/tinyos-main-2.1.2/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0xb75636e8" loc="74:/opt/tinyos-main-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:/opt/tinyos-main-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb7563590" loc="74:/opt/tinyos-main-2.1.2/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0xb7563010" loc="68:/opt/tinyos-main-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:/opt/tinyos-main-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0xb7563d30" loc="81:/opt/tinyos-main-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:/opt/tinyos-main-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb7563bd8" loc="81:/opt/tinyos-main-2.1.2/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="78:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0xb7556548" loc="86:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="85:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode.</short>
          <long> Initialize the ATmega128 SPI bus into slave mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0xb7551c38" loc="126:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7b916e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0xb7554dd8" loc="117:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7b916e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0xb7550288" loc="128:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7b916e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0xb7550130" loc="128:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7b916e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0xb75560f8" loc="83:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode.</short>
          <long> Initialize the ATmega128 SPI bus into master mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0xb7552d48" loc="122:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7b916e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0xb7552bf0" loc="122:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7b916e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0xb7554010" loc="113:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7b916e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0xb7555e48" loc="113:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7b916e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0xb7556dd8" loc="97:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="93:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10; </short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0xb754d318" loc="141:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7b916e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0xb754d1c0" loc="141:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7b916e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0xb7554468" loc="114:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7b916e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClock" ref="0xb7550c10" loc="131:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0xb7550ab8" loc="131:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0xb754f4b0" loc="136:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7b916e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0xb75517f0" loc="125:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7b916e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0xb7551698" loc="125:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7b916e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0xb754fd78" loc="140:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7b916e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0xb7552380" loc="119:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7b916e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0xb7552228" loc="119:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7b916e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0xb7555390" loc="103:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="99:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10; </short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb7555238" loc="103:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0xb75549b8" loc="116:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7b916e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0xb7554860" loc="116:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7b916e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0xb7551210" loc="123:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7b916e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0xb75506b0" loc="129:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7b916e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClock" ref="0xb754f038" loc="132:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0xb754f908" loc="138:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7b916e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0xb75527b8" loc="120:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7b916e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0xb7556970" loc="89:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus.</short>
          <long> Disable and sleep the ATmega128 SPI bus. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0xb7555958" loc="109:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="105:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete.</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb7555800" loc="109:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/opt/tinyos-main-2.1.2/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/opt/tinyos-main-2.1.2/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0xb754a070" loc="90:/opt/tinyos-main-2.1.2/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/opt/tinyos-main-2.1.2/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7b916e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0xb754a570" loc="98:/opt/tinyos-main-2.1.2/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/opt/tinyos-main-2.1.2/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/opt/tinyos-main-2.1.2/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/opt/tinyos-main-2.1.2/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0xb7519900" loc="95:/opt/tinyos-main-2.1.2/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/opt/tinyos-main-2.1.2/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7b89628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xb7519de8" loc="105:/opt/tinyos-main-2.1.2/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/opt/tinyos-main-2.1.2/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7b89628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/opt/tinyos-main-2.1.2/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/opt/tinyos-main-2.1.2/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0xb74e9010" loc="53:/opt/tinyos-main-2.1.2/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/opt/tinyos-main-2.1.2/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0xb74e95e8" loc="61:/opt/tinyos-main-2.1.2/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/opt/tinyos-main-2.1.2/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/opt/tinyos-main-2.1.2/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/opt/tinyos-main-2.1.2/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0xb74e62c0" loc="65:/opt/tinyos-main-2.1.2/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/opt/tinyos-main-2.1.2/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0xb74eade0" loc="59:/opt/tinyos-main-2.1.2/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/opt/tinyos-main-2.1.2/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/opt/tinyos-main-2.1.2/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/opt/tinyos-main-2.1.2/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0xb74e1ca8" loc="79:/opt/tinyos-main-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/opt/tinyos-main-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7b89628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0xb74e85d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0xb74e1b50" loc="79:/opt/tinyos-main-2.1.2/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0xb74e85d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0xb74e48b8" loc="53:/opt/tinyos-main-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/opt/tinyos-main-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7b916e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0xb74e1010" loc="62:/opt/tinyos-main-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/opt/tinyos-main-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7b916e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0xb74e85d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0xb74e4e20" loc="62:/opt/tinyos-main-2.1.2/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0xb74e85d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0xb74e15c0" loc="70:/opt/tinyos-main-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/opt/tinyos-main-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0xb74e85d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0xb742c650" loc="43:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7b916e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008-06-17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0xb7400840" loc="63:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0xb74002c0" loc="63:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0xb74006e0" loc="63:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0xb7404e10" loc="55:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0xb7404990" loc="49:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7ed7848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0xb7404838" loc="49:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7ed7848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0xb740da70" loc="58:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="52:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7ed8b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb740d918" loc="58:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0xb740d168" loc="50:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="45:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7b916e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb740d010" loc="50:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0xb740cc58" loc="72:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="67:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb740cb00" loc="72:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xb740c370" loc="65:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="60:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb740c218" loc="65:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb79bf5c0"/>
                <typename><typedef-ref name="message_t" ref="0xb79be3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
